{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "name",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "symbol",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "supply",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "mintTo",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "decimals",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "subtractedValue",
          "type": "uint256"
        }
      ],
      "name": "decreaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getOwner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "addedValue",
          "type": "uint256"
        }
      ],
      "name": "increaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "allSourcePaths": {
    "0": "contracts/philcoin-bep20.sol"
  },
  "ast": {
    "absolutePath": "contracts/philcoin-bep20.sol",
    "exportedSymbols": {
      "Context": [
        113
      ],
      "IBEP20": [
        88
      ],
      "Ownable": [
        404
      ],
      "Philcoin": [
        874
      ],
      "SafeMath": [
        298
      ]
    },
    "id": 875,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          "0.5",
          ".16"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:0"
      },
      {
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "interface",
        "documentation": null,
        "fullyImplemented": false,
        "id": 88,
        "linearizedBaseContracts": [
          88
        ],
        "name": "IBEP20",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": null,
            "documentation": "@dev Returns the amount of tokens in existence.",
            "id": 6,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "totalSupply",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "131:2:0"
            },
            "returnParameters": {
              "id": 5,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 6,
                  "src": "157:7:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "157:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "156:9:0"
            },
            "scope": 88,
            "src": "111:55:0",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": null,
            "documentation": "@dev Returns the token decimals.",
            "id": 11,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "decimals",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "237:2:0"
            },
            "returnParameters": {
              "id": 10,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 9,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 11,
                  "src": "263:5:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 8,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "263:5:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "262:7:0"
            },
            "scope": 88,
            "src": "220:50:0",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": null,
            "documentation": "@dev Returns the token symbol.",
            "id": 16,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "symbol",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 12,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "337:2:0"
            },
            "returnParameters": {
              "id": 15,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 14,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 16,
                  "src": "363:13:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 13,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "363:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "362:15:0"
            },
            "scope": 88,
            "src": "322:56:0",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": null,
            "documentation": "@dev Returns the token name.",
            "id": 21,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "name",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 17,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "439:2:0"
            },
            "returnParameters": {
              "id": 20,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 19,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 21,
                  "src": "465:13:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 18,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "465:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "464:15:0"
            },
            "scope": 88,
            "src": "426:54:0",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": null,
            "documentation": "@dev Returns the bep token owner.",
            "id": 26,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "getOwner",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 22,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "552:2:0"
            },
            "returnParameters": {
              "id": 25,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 24,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 26,
                  "src": "578:7:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 23,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "578:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "577:9:0"
            },
            "scope": 88,
            "src": "535:52:0",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": null,
            "documentation": "@dev Returns the amount of tokens owned by `account`.",
            "id": 33,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "balanceOf",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 29,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 28,
                  "name": "account",
                  "nodeType": "VariableDeclaration",
                  "scope": 33,
                  "src": "681:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 27,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "681:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "680:17:0"
            },
            "returnParameters": {
              "id": 32,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 31,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 33,
                  "src": "721:7:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 30,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "721:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "720:9:0"
            },
            "scope": 88,
            "src": "662:68:0",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": null,
            "documentation": "@dev Moves `amount` tokens from the caller's account to `recipient`.\n   * Returns a boolean value indicating whether the operation succeeded.\n   * Emits a {Transfer} event.",
            "id": 42,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "transfer",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 38,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 35,
                  "name": "recipient",
                  "nodeType": "VariableDeclaration",
                  "scope": 42,
                  "src": "952:17:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 34,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "952:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 37,
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 42,
                  "src": "971:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 36,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "971:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "951:35:0"
            },
            "returnParameters": {
              "id": 41,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 40,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 42,
                  "src": "1005:4:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 39,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1005:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1004:6:0"
            },
            "scope": 88,
            "src": "934:77:0",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": null,
            "documentation": "@dev Returns the remaining number of tokens that `spender` will be\nallowed to spend on behalf of `owner` through {transferFrom}. This is\nzero by default.\n   * This value changes when {approve} or {transferFrom} are called.",
            "id": 51,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "allowance",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 47,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 44,
                  "name": "_owner",
                  "nodeType": "VariableDeclaration",
                  "scope": 51,
                  "src": "1289:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 43,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1289:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 46,
                  "name": "spender",
                  "nodeType": "VariableDeclaration",
                  "scope": 51,
                  "src": "1305:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 45,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1305:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1288:33:0"
            },
            "returnParameters": {
              "id": 50,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 49,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 51,
                  "src": "1345:7:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 48,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1345:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1344:9:0"
            },
            "scope": 88,
            "src": "1270:84:0",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": null,
            "documentation": "@dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n   * Returns a boolean value indicating whether the operation succeeded.\n   * IMPORTANT: Beware that changing an allowance with this method brings the risk\nthat someone may use both the old and the new allowance by unfortunate\ntransaction ordering. One possible solution to mitigate this race\ncondition is to first reduce the spender's allowance to 0 and set the\ndesired value afterwards:\nhttps://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n   * Emits an {Approval} event.",
            "id": 60,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "approve",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 56,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 53,
                  "name": "spender",
                  "nodeType": "VariableDeclaration",
                  "scope": 60,
                  "src": "1994:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 52,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1994:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 55,
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 60,
                  "src": "2011:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 54,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2011:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1993:33:0"
            },
            "returnParameters": {
              "id": 59,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 58,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 60,
                  "src": "2045:4:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 57,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "2045:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2044:6:0"
            },
            "scope": 88,
            "src": "1977:74:0",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": null,
            "documentation": "@dev Moves `amount` tokens from `sender` to `recipient` using the\nallowance mechanism. `amount` is then deducted from the caller's\nallowance.\n   * Returns a boolean value indicating whether the operation succeeded.\n   * Emits a {Transfer} event.",
            "id": 71,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "transferFrom",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 67,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 62,
                  "name": "sender",
                  "nodeType": "VariableDeclaration",
                  "scope": 71,
                  "src": "2360:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 61,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2360:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 64,
                  "name": "recipient",
                  "nodeType": "VariableDeclaration",
                  "scope": 71,
                  "src": "2376:17:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 63,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2376:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 66,
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 71,
                  "src": "2395:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 65,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2395:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2359:51:0"
            },
            "returnParameters": {
              "id": 70,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 69,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 71,
                  "src": "2429:4:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 68,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "2429:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2428:6:0"
            },
            "scope": 88,
            "src": "2338:97:0",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "anonymous": false,
            "documentation": "@dev Emitted when `value` tokens are moved from one account (`from`) to\nanother (`to`).\n   * Note that `value` may be zero.",
            "id": 79,
            "name": "Transfer",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 78,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 73,
                  "indexed": true,
                  "name": "from",
                  "nodeType": "VariableDeclaration",
                  "scope": 79,
                  "src": "2605:20:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 72,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2605:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 75,
                  "indexed": true,
                  "name": "to",
                  "nodeType": "VariableDeclaration",
                  "scope": 79,
                  "src": "2627:18:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 74,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2627:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 77,
                  "indexed": false,
                  "name": "value",
                  "nodeType": "VariableDeclaration",
                  "scope": 79,
                  "src": "2647:13:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 76,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2647:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2604:57:0"
            },
            "src": "2590:72:0"
          },
          {
            "anonymous": false,
            "documentation": "@dev Emitted when the allowance of a `spender` for an `owner` is set by\na call to {approve}. `value` is the new allowance.",
            "id": 87,
            "name": "Approval",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 86,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 81,
                  "indexed": true,
                  "name": "owner",
                  "nodeType": "VariableDeclaration",
                  "scope": 87,
                  "src": "2826:21:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 80,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2826:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 83,
                  "indexed": true,
                  "name": "spender",
                  "nodeType": "VariableDeclaration",
                  "scope": 87,
                  "src": "2849:23:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 82,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2849:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 85,
                  "indexed": false,
                  "name": "value",
                  "nodeType": "VariableDeclaration",
                  "scope": 87,
                  "src": "2874:13:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 84,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2874:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2825:63:0"
            },
            "src": "2811:78:0"
          }
        ],
        "scope": 875,
        "src": "25:2866:0"
      },
      {
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 113,
        "linearizedBaseContracts": [
          113
        ],
        "name": "Context",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 91,
              "nodeType": "Block",
              "src": "3588:3:0",
              "statements": []
            },
            "documentation": null,
            "id": 92,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 89,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3576:2:0"
            },
            "returnParameters": {
              "id": 90,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3588:0:0"
            },
            "scope": 113,
            "src": "3564:27:0",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 100,
              "nodeType": "Block",
              "src": "3657:28:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "expression": {
                      "argumentTypes": null,
                      "id": 97,
                      "name": "msg",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 889,
                      "src": "3670:3:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_magic_message",
                        "typeString": "msg"
                      }
                    },
                    "id": 98,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "sender",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": null,
                    "src": "3670:10:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "functionReturnParameters": 96,
                  "id": 99,
                  "nodeType": "Return",
                  "src": "3663:17:0"
                }
              ]
            },
            "documentation": null,
            "id": 101,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_msgSender",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 93,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3614:2:0"
            },
            "returnParameters": {
              "id": 96,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 95,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 101,
                  "src": "3640:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  },
                  "typeName": {
                    "id": 94,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3640:15:0",
                    "stateMutability": "payable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3639:17:0"
            },
            "scope": 113,
            "src": "3595:90:0",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 111,
              "nodeType": "Block",
              "src": "3746:155:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 106,
                    "name": "this",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 905,
                    "src": "3752:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Context_$113",
                      "typeString": "contract Context"
                    }
                  },
                  "id": 107,
                  "nodeType": "ExpressionStatement",
                  "src": "3752:4:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "expression": {
                      "argumentTypes": null,
                      "id": 108,
                      "name": "msg",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 889,
                      "src": "3888:3:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_magic_message",
                        "typeString": "msg"
                      }
                    },
                    "id": 109,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "data",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": null,
                    "src": "3888:8:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_calldata_ptr",
                      "typeString": "bytes calldata"
                    }
                  },
                  "functionReturnParameters": 105,
                  "id": 110,
                  "nodeType": "Return",
                  "src": "3881:15:0"
                }
              ]
            },
            "documentation": null,
            "id": 112,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_msgData",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 102,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3706:2:0"
            },
            "returnParameters": {
              "id": 105,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 104,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 112,
                  "src": "3732:12:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 103,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "3732:5:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3731:14:0"
            },
            "scope": 113,
            "src": "3689:212:0",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "internal"
          }
        ],
        "scope": 875,
        "src": "3393:510:0"
      },
      {
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "library",
        "documentation": "@dev Wrappers over Solidity's arithmetic operations with added overflow\nchecks.\n * Arithmetic operations in Solidity wrap on overflow. This can easily result\nin bugs, because programmers usually assume that an overflow raises an\nerror, which is the standard behavior in high level programming languages.\n`SafeMath` restores this intuition by reverting the transaction when an\noperation overflows.\n * Using this library instead of the unchecked operations eliminates an entire\nclass of bugs, so it's recommended to use it always.",
        "fullyImplemented": true,
        "id": 298,
        "linearizedBaseContracts": [
          298
        ],
        "name": "SafeMath",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 137,
              "nodeType": "Block",
              "src": "4761:95:0",
              "statements": [
                {
                  "assignments": [
                    123
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 123,
                      "name": "c",
                      "nodeType": "VariableDeclaration",
                      "scope": 137,
                      "src": "4767:9:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 122,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "4767:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 127,
                  "initialValue": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 126,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 124,
                      "name": "a",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 115,
                      "src": "4779:1:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "+",
                    "rightExpression": {
                      "argumentTypes": null,
                      "id": 125,
                      "name": "b",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 117,
                      "src": "4783:1:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4779:5:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4767:17:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 131,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 129,
                          "name": "c",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 123,
                          "src": "4798:1:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 130,
                          "name": "a",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 115,
                          "src": "4803:1:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "4798:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "536166654d6174683a206164646974696f6e206f766572666c6f77",
                        "id": 132,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4806:29:0",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a",
                          "typeString": "literal_string \"SafeMath: addition overflow\""
                        },
                        "value": "SafeMath: addition overflow"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a",
                          "typeString": "literal_string \"SafeMath: addition overflow\""
                        }
                      ],
                      "id": 128,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        892,
                        893
                      ],
                      "referencedDeclaration": 893,
                      "src": "4790:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 133,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4790:46:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 134,
                  "nodeType": "ExpressionStatement",
                  "src": "4790:46:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 135,
                    "name": "c",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 123,
                    "src": "4850:1:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 121,
                  "id": 136,
                  "nodeType": "Return",
                  "src": "4843:8:0"
                }
              ]
            },
            "documentation": "@dev Returns the addition of two unsigned integers, reverting on\noverflow.\n   * Counterpart to Solidity's `+` operator.\n   * Requirements:\n- Addition cannot overflow.",
            "id": 138,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "add",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 118,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 115,
                  "name": "a",
                  "nodeType": "VariableDeclaration",
                  "scope": 138,
                  "src": "4707:9:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 114,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4707:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 117,
                  "name": "b",
                  "nodeType": "VariableDeclaration",
                  "scope": 138,
                  "src": "4718:9:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 116,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4718:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4706:22:0"
            },
            "returnParameters": {
              "id": 121,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 120,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 138,
                  "src": "4752:7:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 119,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4752:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4751:9:0"
            },
            "scope": 298,
            "src": "4694:162:0",
            "stateMutability": "pure",
            "superFunction": null,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 153,
              "nodeType": "Block",
              "src": "5167:61:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 148,
                        "name": "a",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 140,
                        "src": "5184:1:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 149,
                        "name": "b",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 142,
                        "src": "5187:1:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "536166654d6174683a207375627472616374696f6e206f766572666c6f77",
                        "id": 150,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5190:32:0",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_50b058e9b5320e58880d88223c9801cd9eecdcf90323d5c2318bc1b6b916e862",
                          "typeString": "literal_string \"SafeMath: subtraction overflow\""
                        },
                        "value": "SafeMath: subtraction overflow"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_50b058e9b5320e58880d88223c9801cd9eecdcf90323d5c2318bc1b6b916e862",
                          "typeString": "literal_string \"SafeMath: subtraction overflow\""
                        }
                      ],
                      "id": 147,
                      "name": "sub",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        154,
                        181
                      ],
                      "referencedDeclaration": 181,
                      "src": "5180:3:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$",
                        "typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
                      }
                    },
                    "id": 151,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5180:43:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 146,
                  "id": 152,
                  "nodeType": "Return",
                  "src": "5173:50:0"
                }
              ]
            },
            "documentation": "@dev Returns the subtraction of two unsigned integers, reverting on\noverflow (when the result is negative).\n   * Counterpart to Solidity's `-` operator.\n   * Requirements:\n- Subtraction cannot overflow.",
            "id": 154,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "sub",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 143,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 140,
                  "name": "a",
                  "nodeType": "VariableDeclaration",
                  "scope": 154,
                  "src": "5113:9:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 139,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5113:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 142,
                  "name": "b",
                  "nodeType": "VariableDeclaration",
                  "scope": 154,
                  "src": "5124:9:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 141,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5124:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "5112:22:0"
            },
            "returnParameters": {
              "id": 146,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 145,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 154,
                  "src": "5158:7:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 144,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5158:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "5157:9:0"
            },
            "scope": 298,
            "src": "5100:128:0",
            "stateMutability": "pure",
            "superFunction": null,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 180,
              "nodeType": "Block",
              "src": "5587:78:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 168,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 166,
                          "name": "b",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 158,
                          "src": "5601:1:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 167,
                          "name": "a",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 156,
                          "src": "5606:1:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "5601:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 169,
                        "name": "errorMessage",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 160,
                        "src": "5609:12:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "id": 165,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        892,
                        893
                      ],
                      "referencedDeclaration": 893,
                      "src": "5593:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 170,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5593:29:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 171,
                  "nodeType": "ExpressionStatement",
                  "src": "5593:29:0"
                },
                {
                  "assignments": [
                    173
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 173,
                      "name": "c",
                      "nodeType": "VariableDeclaration",
                      "scope": 180,
                      "src": "5628:9:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 172,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "5628:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 177,
                  "initialValue": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 176,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 174,
                      "name": "a",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 156,
                      "src": "5640:1:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "-",
                    "rightExpression": {
                      "argumentTypes": null,
                      "id": 175,
                      "name": "b",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 158,
                      "src": "5644:1:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "5640:5:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5628:17:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 178,
                    "name": "c",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 173,
                    "src": "5659:1:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 164,
                  "id": 179,
                  "nodeType": "Return",
                  "src": "5652:8:0"
                }
              ]
            },
            "documentation": "@dev Returns the subtraction of two unsigned integers, reverting with custom message on\noverflow (when the result is negative).\n   * Counterpart to Solidity's `-` operator.\n   * Requirements:\n- Subtraction cannot overflow.",
            "id": 181,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "sub",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 161,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 156,
                  "name": "a",
                  "nodeType": "VariableDeclaration",
                  "scope": 181,
                  "src": "5505:9:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 155,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5505:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 158,
                  "name": "b",
                  "nodeType": "VariableDeclaration",
                  "scope": 181,
                  "src": "5516:9:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 157,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5516:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 160,
                  "name": "errorMessage",
                  "nodeType": "VariableDeclaration",
                  "scope": 181,
                  "src": "5527:26:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 159,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "5527:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "5504:50:0"
            },
            "returnParameters": {
              "id": 164,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 163,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 181,
                  "src": "5578:7:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 162,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5578:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "5577:9:0"
            },
            "scope": 298,
            "src": "5492:173:0",
            "stateMutability": "pure",
            "superFunction": null,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 214,
              "nodeType": "Block",
              "src": "5952:352:0",
              "statements": [
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 192,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 190,
                      "name": "a",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 183,
                      "src": "6168:1:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 191,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "6173:1:0",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "6168:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 196,
                  "nodeType": "IfStatement",
                  "src": "6164:35:0",
                  "trueBody": {
                    "id": 195,
                    "nodeType": "Block",
                    "src": "6176:23:0",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 193,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "6191:1:0",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "functionReturnParameters": 189,
                        "id": 194,
                        "nodeType": "Return",
                        "src": "6184:8:0"
                      }
                    ]
                  }
                },
                {
                  "assignments": [
                    198
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 198,
                      "name": "c",
                      "nodeType": "VariableDeclaration",
                      "scope": 214,
                      "src": "6205:9:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 197,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "6205:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 202,
                  "initialValue": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 201,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 199,
                      "name": "a",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 183,
                      "src": "6217:1:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "*",
                    "rightExpression": {
                      "argumentTypes": null,
                      "id": 200,
                      "name": "b",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 185,
                      "src": "6221:1:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "6217:5:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6205:17:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 208,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 206,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "id": 204,
                            "name": "c",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 198,
                            "src": "6236:1:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "/",
                          "rightExpression": {
                            "argumentTypes": null,
                            "id": 205,
                            "name": "a",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 183,
                            "src": "6240:1:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "6236:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 207,
                          "name": "b",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 185,
                          "src": "6245:1:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "6236:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f77",
                        "id": 209,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6248:35:0",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3",
                          "typeString": "literal_string \"SafeMath: multiplication overflow\""
                        },
                        "value": "SafeMath: multiplication overflow"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3",
                          "typeString": "literal_string \"SafeMath: multiplication overflow\""
                        }
                      ],
                      "id": 203,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        892,
                        893
                      ],
                      "referencedDeclaration": 893,
                      "src": "6228:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 210,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6228:56:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 211,
                  "nodeType": "ExpressionStatement",
                  "src": "6228:56:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 212,
                    "name": "c",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 198,
                    "src": "6298:1:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 189,
                  "id": 213,
                  "nodeType": "Return",
                  "src": "6291:8:0"
                }
              ]
            },
            "documentation": "@dev Returns the multiplication of two unsigned integers, reverting on\noverflow.\n   * Counterpart to Solidity's `*` operator.\n   * Requirements:\n- Multiplication cannot overflow.",
            "id": 215,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "mul",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 186,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 183,
                  "name": "a",
                  "nodeType": "VariableDeclaration",
                  "scope": 215,
                  "src": "5898:9:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 182,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5898:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 185,
                  "name": "b",
                  "nodeType": "VariableDeclaration",
                  "scope": 215,
                  "src": "5909:9:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 184,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5909:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "5897:22:0"
            },
            "returnParameters": {
              "id": 189,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 188,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 215,
                  "src": "5943:7:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 187,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5943:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "5942:9:0"
            },
            "scope": 298,
            "src": "5885:419:0",
            "stateMutability": "pure",
            "superFunction": null,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 230,
              "nodeType": "Block",
              "src": "6802:57:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 225,
                        "name": "a",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 217,
                        "src": "6819:1:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 226,
                        "name": "b",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 219,
                        "src": "6822:1:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "536166654d6174683a206469766973696f6e206279207a65726f",
                        "id": 227,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6825:28:0",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_5b7cc70dda4dc2143e5adb63bd5d1f349504f461dbdfd9bc76fac1f8ca6d019f",
                          "typeString": "literal_string \"SafeMath: division by zero\""
                        },
                        "value": "SafeMath: division by zero"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_5b7cc70dda4dc2143e5adb63bd5d1f349504f461dbdfd9bc76fac1f8ca6d019f",
                          "typeString": "literal_string \"SafeMath: division by zero\""
                        }
                      ],
                      "id": 224,
                      "name": "div",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        231,
                        258
                      ],
                      "referencedDeclaration": 258,
                      "src": "6815:3:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$",
                        "typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
                      }
                    },
                    "id": 228,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6815:39:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 223,
                  "id": 229,
                  "nodeType": "Return",
                  "src": "6808:46:0"
                }
              ]
            },
            "documentation": "@dev Returns the integer division of two unsigned integers. Reverts on\ndivision by zero. The result is rounded towards zero.\n   * Counterpart to Solidity's `/` operator. Note: this function uses a\n`revert` opcode (which leaves remaining gas untouched) while Solidity\nuses an invalid opcode to revert (consuming all remaining gas).\n   * Requirements:\n- The divisor cannot be zero.",
            "id": 231,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "div",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 220,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 217,
                  "name": "a",
                  "nodeType": "VariableDeclaration",
                  "scope": 231,
                  "src": "6748:9:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 216,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6748:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 219,
                  "name": "b",
                  "nodeType": "VariableDeclaration",
                  "scope": 231,
                  "src": "6759:9:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 218,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6759:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "6747:22:0"
            },
            "returnParameters": {
              "id": 223,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 222,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 231,
                  "src": "6793:7:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 221,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6793:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "6792:9:0"
            },
            "scope": 298,
            "src": "6735:124:0",
            "stateMutability": "pure",
            "superFunction": null,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 257,
              "nodeType": "Block",
              "src": "7405:221:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 245,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 243,
                          "name": "b",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 235,
                          "src": "7481:1:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 244,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "7485:1:0",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "7481:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 246,
                        "name": "errorMessage",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 237,
                        "src": "7488:12:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "id": 242,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        892,
                        893
                      ],
                      "referencedDeclaration": 893,
                      "src": "7473:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 247,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7473:28:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 248,
                  "nodeType": "ExpressionStatement",
                  "src": "7473:28:0"
                },
                {
                  "assignments": [
                    250
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 250,
                      "name": "c",
                      "nodeType": "VariableDeclaration",
                      "scope": 257,
                      "src": "7507:9:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 249,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "7507:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 254,
                  "initialValue": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 253,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 251,
                      "name": "a",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 233,
                      "src": "7519:1:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "/",
                    "rightExpression": {
                      "argumentTypes": null,
                      "id": 252,
                      "name": "b",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 235,
                      "src": "7523:1:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "7519:5:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7507:17:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 255,
                    "name": "c",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 250,
                    "src": "7620:1:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 241,
                  "id": 256,
                  "nodeType": "Return",
                  "src": "7613:8:0"
                }
              ]
            },
            "documentation": "@dev Returns the integer division of two unsigned integers. Reverts with custom message on\ndivision by zero. The result is rounded towards zero.\n   * Counterpart to Solidity's `/` operator. Note: this function uses a\n`revert` opcode (which leaves remaining gas untouched) while Solidity\nuses an invalid opcode to revert (consuming all remaining gas).\n   * Requirements:\n- The divisor cannot be zero.",
            "id": 258,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "div",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 238,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 233,
                  "name": "a",
                  "nodeType": "VariableDeclaration",
                  "scope": 258,
                  "src": "7323:9:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 232,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7323:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 235,
                  "name": "b",
                  "nodeType": "VariableDeclaration",
                  "scope": 258,
                  "src": "7334:9:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 234,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7334:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 237,
                  "name": "errorMessage",
                  "nodeType": "VariableDeclaration",
                  "scope": 258,
                  "src": "7345:26:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 236,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "7345:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "7322:50:0"
            },
            "returnParameters": {
              "id": 241,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 240,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 258,
                  "src": "7396:7:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 239,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7396:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "7395:9:0"
            },
            "scope": 298,
            "src": "7310:316:0",
            "stateMutability": "pure",
            "superFunction": null,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 273,
              "nodeType": "Block",
              "src": "8113:55:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 268,
                        "name": "a",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 260,
                        "src": "8130:1:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 269,
                        "name": "b",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 262,
                        "src": "8133:1:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "536166654d6174683a206d6f64756c6f206279207a65726f",
                        "id": 270,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8136:26:0",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_726e51f7b81fce0a68f5f214f445e275313b20b1633f08ce954ee39abf8d7832",
                          "typeString": "literal_string \"SafeMath: modulo by zero\""
                        },
                        "value": "SafeMath: modulo by zero"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_726e51f7b81fce0a68f5f214f445e275313b20b1633f08ce954ee39abf8d7832",
                          "typeString": "literal_string \"SafeMath: modulo by zero\""
                        }
                      ],
                      "id": 267,
                      "name": "mod",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        274,
                        297
                      ],
                      "referencedDeclaration": 297,
                      "src": "8126:3:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$",
                        "typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
                      }
                    },
                    "id": 271,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8126:37:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 266,
                  "id": 272,
                  "nodeType": "Return",
                  "src": "8119:44:0"
                }
              ]
            },
            "documentation": "@dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\nReverts when dividing by zero.\n   * Counterpart to Solidity's `%` operator. This function uses a `revert`\nopcode (which leaves remaining gas untouched) while Solidity uses an\ninvalid opcode to revert (consuming all remaining gas).\n   * Requirements:\n- The divisor cannot be zero.",
            "id": 274,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "mod",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 263,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 260,
                  "name": "a",
                  "nodeType": "VariableDeclaration",
                  "scope": 274,
                  "src": "8059:9:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 259,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8059:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 262,
                  "name": "b",
                  "nodeType": "VariableDeclaration",
                  "scope": 274,
                  "src": "8070:9:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 261,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8070:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "8058:22:0"
            },
            "returnParameters": {
              "id": 266,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 265,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 274,
                  "src": "8104:7:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 264,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8104:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "8103:9:0"
            },
            "scope": 298,
            "src": "8046:122:0",
            "stateMutability": "pure",
            "superFunction": null,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 296,
              "nodeType": "Block",
              "src": "8703:58:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 288,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 286,
                          "name": "b",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 278,
                          "src": "8717:1:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 287,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "8722:1:0",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "8717:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 289,
                        "name": "errorMessage",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 280,
                        "src": "8725:12:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "id": 285,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        892,
                        893
                      ],
                      "referencedDeclaration": 893,
                      "src": "8709:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 290,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8709:29:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 291,
                  "nodeType": "ExpressionStatement",
                  "src": "8709:29:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 294,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 292,
                      "name": "a",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 276,
                      "src": "8751:1:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "%",
                    "rightExpression": {
                      "argumentTypes": null,
                      "id": 293,
                      "name": "b",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 278,
                      "src": "8755:1:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "8751:5:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 284,
                  "id": 295,
                  "nodeType": "Return",
                  "src": "8744:12:0"
                }
              ]
            },
            "documentation": "@dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\nReverts with custom message when dividing by zero.\n   * Counterpart to Solidity's `%` operator. This function uses a `revert`\nopcode (which leaves remaining gas untouched) while Solidity uses an\ninvalid opcode to revert (consuming all remaining gas).\n   * Requirements:\n- The divisor cannot be zero.",
            "id": 297,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "mod",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 281,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 276,
                  "name": "a",
                  "nodeType": "VariableDeclaration",
                  "scope": 297,
                  "src": "8621:9:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 275,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8621:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 278,
                  "name": "b",
                  "nodeType": "VariableDeclaration",
                  "scope": 297,
                  "src": "8632:9:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 277,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8632:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 280,
                  "name": "errorMessage",
                  "nodeType": "VariableDeclaration",
                  "scope": 297,
                  "src": "8643:26:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 279,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "8643:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "8620:50:0"
            },
            "returnParameters": {
              "id": 284,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 283,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 297,
                  "src": "8694:7:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 282,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8694:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "8693:9:0"
            },
            "scope": 298,
            "src": "8608:153:0",
            "stateMutability": "pure",
            "superFunction": null,
            "visibility": "internal"
          }
        ],
        "scope": 875,
        "src": "4469:4294:0"
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 299,
              "name": "Context",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 113,
              "src": "9280:7:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Context_$113",
                "typeString": "contract Context"
              }
            },
            "id": 300,
            "nodeType": "InheritanceSpecifier",
            "src": "9280:7:0"
          }
        ],
        "contractDependencies": [
          113
        ],
        "contractKind": "contract",
        "documentation": "@dev Contract module which provides a basic access control mechanism, where\nthere is an account (an owner) that can be granted exclusive access to\nspecific functions.\n * By default, the owner account will be the one that deploys the contract. This\ncan later be changed with {transferOwnership}.\n * This module is used through inheritance. It will make available the modifier\n`onlyOwner`, which can be applied to your functions to restrict their use to\nthe owner.",
        "fullyImplemented": true,
        "id": 404,
        "linearizedBaseContracts": [
          404,
          113
        ],
        "name": "Ownable",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 302,
            "name": "_owner",
            "nodeType": "VariableDeclaration",
            "scope": 404,
            "src": "9292:22:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 301,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "9292:7:0",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 308,
            "name": "OwnershipTransferred",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 307,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 304,
                  "indexed": true,
                  "name": "previousOwner",
                  "nodeType": "VariableDeclaration",
                  "scope": 308,
                  "src": "9346:29:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 303,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "9346:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 306,
                  "indexed": true,
                  "name": "newOwner",
                  "nodeType": "VariableDeclaration",
                  "scope": 308,
                  "src": "9377:24:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 305,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "9377:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "9345:57:0"
            },
            "src": "9319:84:0"
          },
          {
            "body": {
              "id": 327,
              "nodeType": "Block",
              "src": "9521:121:0",
              "statements": [
                {
                  "assignments": [
                    312
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 312,
                      "name": "msgSender",
                      "nodeType": "VariableDeclaration",
                      "scope": 327,
                      "src": "9527:17:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 311,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "9527:7:0",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 315,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 313,
                      "name": "_msgSender",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 101,
                      "src": "9547:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
                        "typeString": "function () view returns (address payable)"
                      }
                    },
                    "id": 314,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9547:12:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "9527:32:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 318,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 316,
                      "name": "_owner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 302,
                      "src": "9565:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 317,
                      "name": "msgSender",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 312,
                      "src": "9574:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "9565:18:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 319,
                  "nodeType": "ExpressionStatement",
                  "src": "9565:18:0"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "hexValue": "30",
                            "id": 322,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "9623:1:0",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 321,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "9615:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": "address"
                        },
                        "id": 323,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9615:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 324,
                        "name": "msgSender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 312,
                        "src": "9627:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 320,
                      "name": "OwnershipTransferred",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 308,
                      "src": "9594:20:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
                        "typeString": "function (address,address)"
                      }
                    },
                    "id": 325,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9594:43:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 326,
                  "nodeType": "EmitStatement",
                  "src": "9589:48:0"
                }
              ]
            },
            "documentation": "@dev Initializes the contract setting the deployer as the initial owner.",
            "id": 328,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 309,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9509:2:0"
            },
            "returnParameters": {
              "id": 310,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9521:0:0"
            },
            "scope": 404,
            "src": "9497:145:0",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 335,
              "nodeType": "Block",
              "src": "9757:24:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 333,
                    "name": "_owner",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 302,
                    "src": "9770:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 332,
                  "id": 334,
                  "nodeType": "Return",
                  "src": "9763:13:0"
                }
              ]
            },
            "documentation": "@dev Returns the address of the current owner.",
            "id": 336,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "owner",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 329,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9724:2:0"
            },
            "returnParameters": {
              "id": 332,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 331,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 336,
                  "src": "9748:7:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 330,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "9748:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "9747:9:0"
            },
            "scope": 404,
            "src": "9710:71:0",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 347,
              "nodeType": "Block",
              "src": "9882:85:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 342,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 339,
                          "name": "_owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 302,
                          "src": "9896:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 340,
                            "name": "_msgSender",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 101,
                            "src": "9906:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
                              "typeString": "function () view returns (address payable)"
                            }
                          },
                          "id": 341,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9906:12:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "src": "9896:22:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
                        "id": 343,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9920:34:0",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
                          "typeString": "literal_string \"Ownable: caller is not the owner\""
                        },
                        "value": "Ownable: caller is not the owner"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
                          "typeString": "literal_string \"Ownable: caller is not the owner\""
                        }
                      ],
                      "id": 338,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        892,
                        893
                      ],
                      "referencedDeclaration": 893,
                      "src": "9888:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 344,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9888:67:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 345,
                  "nodeType": "ExpressionStatement",
                  "src": "9888:67:0"
                },
                {
                  "id": 346,
                  "nodeType": "PlaceholderStatement",
                  "src": "9961:1:0"
                }
              ]
            },
            "documentation": "@dev Throws if called by any account other than the owner.",
            "id": 348,
            "name": "onlyOwner",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 337,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9879:2:0"
            },
            "src": "9861:106:0",
            "visibility": "internal"
          },
          {
            "body": {
              "id": 366,
              "nodeType": "Block",
              "src": "10339:81:0",
              "statements": [
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 354,
                        "name": "_owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 302,
                        "src": "10371:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "hexValue": "30",
                            "id": 356,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "10387:1:0",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 355,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "10379:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": "address"
                        },
                        "id": 357,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "10379:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "id": 353,
                      "name": "OwnershipTransferred",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 308,
                      "src": "10350:20:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
                        "typeString": "function (address,address)"
                      }
                    },
                    "id": 358,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10350:40:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 359,
                  "nodeType": "EmitStatement",
                  "src": "10345:45:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 364,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 360,
                      "name": "_owner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 302,
                      "src": "10396:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 362,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "10413:1:0",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 361,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "10405:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": "address"
                      },
                      "id": 363,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "10405:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "10396:19:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 365,
                  "nodeType": "ExpressionStatement",
                  "src": "10396:19:0"
                }
              ]
            },
            "documentation": "@dev Leaves the contract without owner. It will not be possible to call\n`onlyOwner` functions anymore. Can only be called by the current owner.\n   * NOTE: Renouncing ownership will leave the contract without an owner,\nthereby removing any functionality that is only available to the owner.",
            "id": 367,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 351,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 350,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 348,
                  "src": "10329:9:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "10329:9:0"
              }
            ],
            "name": "renounceOwnership",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 349,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "10319:2:0"
            },
            "returnParameters": {
              "id": 352,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "10339:0:0"
            },
            "scope": 404,
            "src": "10293:127:0",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 378,
              "nodeType": "Block",
              "src": "10621:39:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 375,
                        "name": "newOwner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 369,
                        "src": "10646:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 374,
                      "name": "_transferOwnership",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 403,
                      "src": "10627:18:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 376,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10627:28:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 377,
                  "nodeType": "ExpressionStatement",
                  "src": "10627:28:0"
                }
              ]
            },
            "documentation": "@dev Transfers ownership of the contract to a new account (`newOwner`).\nCan only be called by the current owner.",
            "id": 379,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 372,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 371,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 348,
                  "src": "10611:9:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "10611:9:0"
              }
            ],
            "name": "transferOwnership",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 370,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 369,
                  "name": "newOwner",
                  "nodeType": "VariableDeclaration",
                  "scope": 379,
                  "src": "10586:16:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 368,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "10586:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "10585:18:0"
            },
            "returnParameters": {
              "id": 373,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "10621:0:0"
            },
            "scope": 404,
            "src": "10559:101:0",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 402,
              "nodeType": "Block",
              "src": "10808:156:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 389,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 385,
                          "name": "newOwner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 381,
                          "src": "10822:8:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "30",
                              "id": 387,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "10842:1:0",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 386,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "10834:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": "address"
                          },
                          "id": 388,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "10834:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "src": "10822:22:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373",
                        "id": 390,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10846:40:0",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
                          "typeString": "literal_string \"Ownable: new owner is the zero address\""
                        },
                        "value": "Ownable: new owner is the zero address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
                          "typeString": "literal_string \"Ownable: new owner is the zero address\""
                        }
                      ],
                      "id": 384,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        892,
                        893
                      ],
                      "referencedDeclaration": 893,
                      "src": "10814:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 391,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10814:73:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 392,
                  "nodeType": "ExpressionStatement",
                  "src": "10814:73:0"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 394,
                        "name": "_owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 302,
                        "src": "10919:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 395,
                        "name": "newOwner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 381,
                        "src": "10927:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 393,
                      "name": "OwnershipTransferred",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 308,
                      "src": "10898:20:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
                        "typeString": "function (address,address)"
                      }
                    },
                    "id": 396,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10898:38:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 397,
                  "nodeType": "EmitStatement",
                  "src": "10893:43:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 400,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 398,
                      "name": "_owner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 302,
                      "src": "10942:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 399,
                      "name": "newOwner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 381,
                      "src": "10951:8:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "10942:17:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 401,
                  "nodeType": "ExpressionStatement",
                  "src": "10942:17:0"
                }
              ]
            },
            "documentation": "@dev Transfers ownership of the contract to a new account (`newOwner`).",
            "id": 403,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_transferOwnership",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 382,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 381,
                  "name": "newOwner",
                  "nodeType": "VariableDeclaration",
                  "scope": 403,
                  "src": "10781:16:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 380,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "10781:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "10780:18:0"
            },
            "returnParameters": {
              "id": 383,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "10808:0:0"
            },
            "scope": 404,
            "src": "10753:211:0",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "internal"
          }
        ],
        "scope": 875,
        "src": "9260:1706:0"
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 405,
              "name": "Context",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 113,
              "src": "10989:7:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Context_$113",
                "typeString": "contract Context"
              }
            },
            "id": 406,
            "nodeType": "InheritanceSpecifier",
            "src": "10989:7:0"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 407,
              "name": "IBEP20",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 88,
              "src": "10998:6:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IBEP20_$88",
                "typeString": "contract IBEP20"
              }
            },
            "id": 408,
            "nodeType": "InheritanceSpecifier",
            "src": "10998:6:0"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 409,
              "name": "Ownable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 404,
              "src": "11006:7:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Ownable_$404",
                "typeString": "contract Ownable"
              }
            },
            "id": 410,
            "nodeType": "InheritanceSpecifier",
            "src": "11006:7:0"
          }
        ],
        "contractDependencies": [
          88,
          113,
          404
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 874,
        "linearizedBaseContracts": [
          874,
          404,
          88,
          113
        ],
        "name": "Philcoin",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 413,
            "libraryName": {
              "contractScope": null,
              "id": 411,
              "name": "SafeMath",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 298,
              "src": "11024:8:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_SafeMath_$298",
                "typeString": "library SafeMath"
              }
            },
            "nodeType": "UsingForDirective",
            "src": "11018:27:0",
            "typeName": {
              "id": 412,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "11037:7:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "constant": false,
            "id": 417,
            "name": "_balances",
            "nodeType": "VariableDeclaration",
            "scope": 874,
            "src": "11049:46:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
              "typeString": "mapping(address => uint256)"
            },
            "typeName": {
              "id": 416,
              "keyType": {
                "id": 414,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "11058:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "11049:28:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                "typeString": "mapping(address => uint256)"
              },
              "valueType": {
                "id": 415,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "11069:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 423,
            "name": "_allowances",
            "nodeType": "VariableDeclaration",
            "scope": 874,
            "src": "11100:69:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
              "typeString": "mapping(address => mapping(address => uint256))"
            },
            "typeName": {
              "id": 422,
              "keyType": {
                "id": 418,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "11109:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "11100:49:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                "typeString": "mapping(address => mapping(address => uint256))"
              },
              "valueType": {
                "id": 421,
                "keyType": {
                  "id": 419,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "11129:7:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "nodeType": "Mapping",
                "src": "11120:28:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                  "typeString": "mapping(address => uint256)"
                },
                "valueType": {
                  "id": 420,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "11140:7:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                }
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 425,
            "name": "_totalSupply",
            "nodeType": "VariableDeclaration",
            "scope": 874,
            "src": "11174:28:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 424,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "11174:7:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 427,
            "name": "_decimals",
            "nodeType": "VariableDeclaration",
            "scope": 874,
            "src": "11206:23:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint8",
              "typeString": "uint8"
            },
            "typeName": {
              "id": 426,
              "name": "uint8",
              "nodeType": "ElementaryTypeName",
              "src": "11206:5:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint8",
                "typeString": "uint8"
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 429,
            "name": "_symbol",
            "nodeType": "VariableDeclaration",
            "scope": 874,
            "src": "11233:22:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 428,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "11233:6:0",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 431,
            "name": "_name",
            "nodeType": "VariableDeclaration",
            "scope": 874,
            "src": "11259:20:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 430,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "11259:6:0",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "body": {
              "id": 459,
              "nodeType": "Block",
              "src": "11377:92:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 444,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 442,
                      "name": "_name",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 431,
                      "src": "11383:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 443,
                      "name": "name",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 433,
                      "src": "11391:4:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "11383:12:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 445,
                  "nodeType": "ExpressionStatement",
                  "src": "11383:12:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 448,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 446,
                      "name": "_symbol",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 429,
                      "src": "11401:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 447,
                      "name": "symbol",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 435,
                      "src": "11411:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "11401:16:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 449,
                  "nodeType": "ExpressionStatement",
                  "src": "11401:16:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 452,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 450,
                      "name": "_decimals",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 427,
                      "src": "11423:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "3138",
                      "id": 451,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "11435:2:0",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_18_by_1",
                        "typeString": "int_const 18"
                      },
                      "value": "18"
                    },
                    "src": "11423:14:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "id": 453,
                  "nodeType": "ExpressionStatement",
                  "src": "11423:14:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 455,
                        "name": "mintTo",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 439,
                        "src": "11449:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 456,
                        "name": "supply",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 437,
                        "src": "11457:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 454,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 758,
                      "src": "11443:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 457,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11443:21:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 458,
                  "nodeType": "ExpressionStatement",
                  "src": "11443:21:0"
                }
              ]
            },
            "documentation": null,
            "id": 460,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 440,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 433,
                  "name": "name",
                  "nodeType": "VariableDeclaration",
                  "scope": 460,
                  "src": "11296:18:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 432,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "11296:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 435,
                  "name": "symbol",
                  "nodeType": "VariableDeclaration",
                  "scope": 460,
                  "src": "11316:20:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 434,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "11316:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 437,
                  "name": "supply",
                  "nodeType": "VariableDeclaration",
                  "scope": 460,
                  "src": "11338:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 436,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "11338:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 439,
                  "name": "mintTo",
                  "nodeType": "VariableDeclaration",
                  "scope": 460,
                  "src": "11354:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 438,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "11354:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "11295:74:0"
            },
            "returnParameters": {
              "id": 441,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "11377:0:0"
            },
            "scope": 874,
            "src": "11284:185:0",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 468,
              "nodeType": "Block",
              "src": "11576:25:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 465,
                      "name": "owner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 336,
                      "src": "11589:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                        "typeString": "function () view returns (address)"
                      }
                    },
                    "id": 466,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11589:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 464,
                  "id": 467,
                  "nodeType": "Return",
                  "src": "11582:14:0"
                }
              ]
            },
            "documentation": "@dev Returns the bep token owner.",
            "id": 469,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getOwner",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 461,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "11541:2:0"
            },
            "returnParameters": {
              "id": 464,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 463,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 469,
                  "src": "11567:7:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 462,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "11567:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "11566:9:0"
            },
            "scope": 874,
            "src": "11524:77:0",
            "stateMutability": "view",
            "superFunction": 26,
            "visibility": "external"
          },
          {
            "body": {
              "id": 476,
              "nodeType": "Block",
              "src": "11705:27:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 474,
                    "name": "_decimals",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 427,
                    "src": "11718:9:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "functionReturnParameters": 473,
                  "id": 475,
                  "nodeType": "Return",
                  "src": "11711:16:0"
                }
              ]
            },
            "documentation": "@dev Returns the token decimals.",
            "id": 477,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "decimals",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 470,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "11672:2:0"
            },
            "returnParameters": {
              "id": 473,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 472,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 477,
                  "src": "11698:5:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 471,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "11698:5:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "11697:7:0"
            },
            "scope": 874,
            "src": "11655:77:0",
            "stateMutability": "view",
            "superFunction": 11,
            "visibility": "external"
          },
          {
            "body": {
              "id": 484,
              "nodeType": "Block",
              "src": "11840:25:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 482,
                    "name": "_symbol",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 429,
                    "src": "11853:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "functionReturnParameters": 481,
                  "id": 483,
                  "nodeType": "Return",
                  "src": "11846:14:0"
                }
              ]
            },
            "documentation": "@dev Returns the token symbol.",
            "id": 485,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "symbol",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 478,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "11799:2:0"
            },
            "returnParameters": {
              "id": 481,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 480,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 485,
                  "src": "11825:13:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 479,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "11825:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "11824:15:0"
            },
            "scope": 874,
            "src": "11784:81:0",
            "stateMutability": "view",
            "superFunction": 16,
            "visibility": "external"
          },
          {
            "body": {
              "id": 492,
              "nodeType": "Block",
              "src": "11967:23:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 490,
                    "name": "_name",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 431,
                    "src": "11980:5:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "functionReturnParameters": 489,
                  "id": 491,
                  "nodeType": "Return",
                  "src": "11973:12:0"
                }
              ]
            },
            "documentation": "@dev Returns the token name.",
            "id": 493,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "name",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 486,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "11926:2:0"
            },
            "returnParameters": {
              "id": 489,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 488,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 493,
                  "src": "11952:13:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 487,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "11952:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "11951:15:0"
            },
            "scope": 874,
            "src": "11913:77:0",
            "stateMutability": "view",
            "superFunction": 21,
            "visibility": "external"
          },
          {
            "body": {
              "id": 500,
              "nodeType": "Block",
              "src": "12096:30:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 498,
                    "name": "_totalSupply",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 425,
                    "src": "12109:12:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 497,
                  "id": 499,
                  "nodeType": "Return",
                  "src": "12102:19:0"
                }
              ]
            },
            "documentation": "@dev See {BEP20-totalSupply}.",
            "id": 501,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "totalSupply",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 494,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "12061:2:0"
            },
            "returnParameters": {
              "id": 497,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 496,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 501,
                  "src": "12087:7:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 495,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "12087:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "12086:9:0"
            },
            "scope": 874,
            "src": "12041:85:0",
            "stateMutability": "view",
            "superFunction": 6,
            "visibility": "external"
          },
          {
            "body": {
              "id": 512,
              "nodeType": "Block",
              "src": "12243:36:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 508,
                      "name": "_balances",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 417,
                      "src": "12256:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                        "typeString": "mapping(address => uint256)"
                      }
                    },
                    "id": 510,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 509,
                      "name": "account",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 503,
                      "src": "12266:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "12256:18:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 507,
                  "id": 511,
                  "nodeType": "Return",
                  "src": "12249:25:0"
                }
              ]
            },
            "documentation": "@dev See {BEP20-balanceOf}.",
            "id": 513,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "balanceOf",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 504,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 503,
                  "name": "account",
                  "nodeType": "VariableDeclaration",
                  "scope": 513,
                  "src": "12194:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 502,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "12194:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "12193:17:0"
            },
            "returnParameters": {
              "id": 507,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 506,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 513,
                  "src": "12234:7:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 505,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "12234:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "12233:9:0"
            },
            "scope": 874,
            "src": "12175:104:0",
            "stateMutability": "view",
            "superFunction": 33,
            "visibility": "external"
          },
          {
            "body": {
              "id": 531,
              "nodeType": "Block",
              "src": "12540:70:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 523,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 101,
                          "src": "12556:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
                            "typeString": "function () view returns (address payable)"
                          }
                        },
                        "id": 524,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "12556:12:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 525,
                        "name": "recipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 515,
                        "src": "12570:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 526,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 517,
                        "src": "12581:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 522,
                      "name": "_transfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 715,
                      "src": "12546:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 527,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12546:42:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 528,
                  "nodeType": "ExpressionStatement",
                  "src": "12546:42:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "hexValue": "74727565",
                    "id": 529,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "12601:4:0",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 521,
                  "id": 530,
                  "nodeType": "Return",
                  "src": "12594:11:0"
                }
              ]
            },
            "documentation": "@dev See {BEP20-transfer}.\n   * Requirements:\n   * - `recipient` cannot be the zero address.\n- the caller must have a balance of at least `amount`.",
            "id": 532,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "transfer",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 518,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 515,
                  "name": "recipient",
                  "nodeType": "VariableDeclaration",
                  "scope": 532,
                  "src": "12481:17:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 514,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "12481:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 517,
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 532,
                  "src": "12500:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 516,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "12500:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "12480:35:0"
            },
            "returnParameters": {
              "id": 521,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 520,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 532,
                  "src": "12534:4:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 519,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "12534:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "12533:6:0"
            },
            "scope": 874,
            "src": "12463:147:0",
            "stateMutability": "nonpayable",
            "superFunction": 42,
            "visibility": "external"
          },
          {
            "body": {
              "id": 547,
              "nodeType": "Block",
              "src": "12742:45:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 541,
                        "name": "_allowances",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 423,
                        "src": "12755:11:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                          "typeString": "mapping(address => mapping(address => uint256))"
                        }
                      },
                      "id": 543,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 542,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 534,
                        "src": "12767:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "12755:18:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                        "typeString": "mapping(address => uint256)"
                      }
                    },
                    "id": 545,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 544,
                      "name": "spender",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 536,
                      "src": "12774:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "12755:27:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 540,
                  "id": 546,
                  "nodeType": "Return",
                  "src": "12748:34:0"
                }
              ]
            },
            "documentation": "@dev See {BEP20-allowance}.",
            "id": 548,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "allowance",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 537,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 534,
                  "name": "owner",
                  "nodeType": "VariableDeclaration",
                  "scope": 548,
                  "src": "12678:13:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 533,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "12678:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 536,
                  "name": "spender",
                  "nodeType": "VariableDeclaration",
                  "scope": 548,
                  "src": "12693:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 535,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "12693:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "12677:32:0"
            },
            "returnParameters": {
              "id": 540,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 539,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 548,
                  "src": "12733:7:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 538,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "12733:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "12732:9:0"
            },
            "scope": 874,
            "src": "12659:128:0",
            "stateMutability": "view",
            "superFunction": 51,
            "visibility": "external"
          },
          {
            "body": {
              "id": 566,
              "nodeType": "Block",
              "src": "12982:67:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 558,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 101,
                          "src": "12997:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
                            "typeString": "function () view returns (address payable)"
                          }
                        },
                        "id": 559,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "12997:12:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 560,
                        "name": "spender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 550,
                        "src": "13011:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 561,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 552,
                        "src": "13020:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 557,
                      "name": "_approve",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 844,
                      "src": "12988:8:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 562,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12988:39:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 563,
                  "nodeType": "ExpressionStatement",
                  "src": "12988:39:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "hexValue": "74727565",
                    "id": 564,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "13040:4:0",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 556,
                  "id": 565,
                  "nodeType": "Return",
                  "src": "13033:11:0"
                }
              ]
            },
            "documentation": "@dev See {BEP20-approve}.\n   * Requirements:\n   * - `spender` cannot be the zero address.",
            "id": 567,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "approve",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 553,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 550,
                  "name": "spender",
                  "nodeType": "VariableDeclaration",
                  "scope": 567,
                  "src": "12925:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 549,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "12925:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 552,
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 567,
                  "src": "12942:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 551,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "12942:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "12924:33:0"
            },
            "returnParameters": {
              "id": 556,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 555,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 567,
                  "src": "12976:4:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 554,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "12976:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "12975:6:0"
            },
            "scope": 874,
            "src": "12908:141:0",
            "stateMutability": "nonpayable",
            "superFunction": 60,
            "visibility": "external"
          },
          {
            "body": {
              "id": 602,
              "nodeType": "Block",
              "src": "13577:191:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 579,
                        "name": "sender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 569,
                        "src": "13593:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 580,
                        "name": "recipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 571,
                        "src": "13601:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 581,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 573,
                        "src": "13612:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 578,
                      "name": "_transfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 715,
                      "src": "13583:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 582,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13583:36:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 583,
                  "nodeType": "ExpressionStatement",
                  "src": "13583:36:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 585,
                        "name": "sender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 569,
                        "src": "13634:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 586,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 101,
                          "src": "13642:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
                            "typeString": "function () view returns (address payable)"
                          }
                        },
                        "id": 587,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "13642:12:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 595,
                            "name": "amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 573,
                            "src": "13694:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "hexValue": "42455032303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e6365",
                            "id": 596,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "13702:42:0",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_4f3506f4ba71c79c3cbd442a3afeb30e9b27af2d84e116a4385b34e267d2287e",
                              "typeString": "literal_string \"BEP20: transfer amount exceeds allowance\""
                            },
                            "value": "BEP20: transfer amount exceeds allowance"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_stringliteral_4f3506f4ba71c79c3cbd442a3afeb30e9b27af2d84e116a4385b34e267d2287e",
                              "typeString": "literal_string \"BEP20: transfer amount exceeds allowance\""
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "baseExpression": {
                                "argumentTypes": null,
                                "id": 588,
                                "name": "_allowances",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 423,
                                "src": "13656:11:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                                  "typeString": "mapping(address => mapping(address => uint256))"
                                }
                              },
                              "id": 590,
                              "indexExpression": {
                                "argumentTypes": null,
                                "id": 589,
                                "name": "sender",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 569,
                                "src": "13668:6:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "13656:19:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                "typeString": "mapping(address => uint256)"
                              }
                            },
                            "id": 593,
                            "indexExpression": {
                              "argumentTypes": null,
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "id": 591,
                                "name": "_msgSender",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 101,
                                "src": "13676:10:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
                                  "typeString": "function () view returns (address payable)"
                                }
                              },
                              "id": 592,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "13676:12:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "13656:33:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 594,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sub",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 181,
                          "src": "13656:37:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$bound_to$_t_uint256_$",
                            "typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
                          }
                        },
                        "id": 597,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "13656:89:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 584,
                      "name": "_approve",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 844,
                      "src": "13625:8:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 598,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13625:121:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 599,
                  "nodeType": "ExpressionStatement",
                  "src": "13625:121:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "hexValue": "74727565",
                    "id": 600,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "13759:4:0",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 577,
                  "id": 601,
                  "nodeType": "Return",
                  "src": "13752:11:0"
                }
              ]
            },
            "documentation": "@dev See {BEP20-transferFrom}.\n   * Emits an {Approval} event indicating the updated allowance. This is not\nrequired by the EIP. See the note at the beginning of {BEP20};\n   * Requirements:\n- `sender` and `recipient` cannot be the zero address.\n- `sender` must have a balance of at least `amount`.\n- the caller must have allowance for `sender`'s tokens of at least\n`amount`.",
            "id": 603,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "transferFrom",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 574,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 569,
                  "name": "sender",
                  "nodeType": "VariableDeclaration",
                  "scope": 603,
                  "src": "13502:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 568,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "13502:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 571,
                  "name": "recipient",
                  "nodeType": "VariableDeclaration",
                  "scope": 603,
                  "src": "13518:17:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 570,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "13518:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 573,
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 603,
                  "src": "13537:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 572,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "13537:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "13501:51:0"
            },
            "returnParameters": {
              "id": 577,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 576,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 603,
                  "src": "13571:4:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 575,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "13571:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "13570:6:0"
            },
            "scope": 874,
            "src": "13480:288:0",
            "stateMutability": "nonpayable",
            "superFunction": 71,
            "visibility": "external"
          },
          {
            "body": {
              "id": 629,
              "nodeType": "Block",
              "src": "14222:111:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 613,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 101,
                          "src": "14237:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
                            "typeString": "function () view returns (address payable)"
                          }
                        },
                        "id": 614,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "14237:12:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 615,
                        "name": "spender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 605,
                        "src": "14251:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 623,
                            "name": "addedValue",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 607,
                            "src": "14299:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "baseExpression": {
                                "argumentTypes": null,
                                "id": 616,
                                "name": "_allowances",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 423,
                                "src": "14260:11:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                                  "typeString": "mapping(address => mapping(address => uint256))"
                                }
                              },
                              "id": 619,
                              "indexExpression": {
                                "argumentTypes": null,
                                "arguments": [],
                                "expression": {
                                  "argumentTypes": [],
                                  "id": 617,
                                  "name": "_msgSender",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 101,
                                  "src": "14272:10:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
                                    "typeString": "function () view returns (address payable)"
                                  }
                                },
                                "id": 618,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "14272:12:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "14260:25:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                "typeString": "mapping(address => uint256)"
                              }
                            },
                            "id": 621,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 620,
                              "name": "spender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 605,
                              "src": "14286:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "14260:34:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 622,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "add",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 138,
                          "src": "14260:38:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                            "typeString": "function (uint256,uint256) pure returns (uint256)"
                          }
                        },
                        "id": 624,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "14260:50:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 612,
                      "name": "_approve",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 844,
                      "src": "14228:8:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 625,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14228:83:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 626,
                  "nodeType": "ExpressionStatement",
                  "src": "14228:83:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "hexValue": "74727565",
                    "id": 627,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "14324:4:0",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 611,
                  "id": 628,
                  "nodeType": "Return",
                  "src": "14317:11:0"
                }
              ]
            },
            "documentation": "@dev Atomically increases the allowance granted to `spender` by the caller.\n   * This is an alternative to {approve} that can be used as a mitigation for\nproblems described in {BEP20-approve}.\n   * Emits an {Approval} event indicating the updated allowance.\n   * Requirements:\n   * - `spender` cannot be the zero address.",
            "id": 630,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "increaseAllowance",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 608,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 605,
                  "name": "spender",
                  "nodeType": "VariableDeclaration",
                  "scope": 630,
                  "src": "14163:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 604,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "14163:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 607,
                  "name": "addedValue",
                  "nodeType": "VariableDeclaration",
                  "scope": 630,
                  "src": "14180:18:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 606,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "14180:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "14162:37:0"
            },
            "returnParameters": {
              "id": 611,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 610,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 630,
                  "src": "14216:4:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 609,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "14216:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "14215:6:0"
            },
            "scope": 874,
            "src": "14136:197:0",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 657,
              "nodeType": "Block",
              "src": "14880:157:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 640,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 101,
                          "src": "14895:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
                            "typeString": "function () view returns (address payable)"
                          }
                        },
                        "id": 641,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "14895:12:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 642,
                        "name": "spender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 632,
                        "src": "14909:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 650,
                            "name": "subtractedValue",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 634,
                            "src": "14957:15:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "hexValue": "42455032303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f",
                            "id": 651,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "14974:39:0",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_b7060b3538dcd3ddc8a941c91636a8115a1aa46914747fd9809d543bbb46cd22",
                              "typeString": "literal_string \"BEP20: decreased allowance below zero\""
                            },
                            "value": "BEP20: decreased allowance below zero"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_stringliteral_b7060b3538dcd3ddc8a941c91636a8115a1aa46914747fd9809d543bbb46cd22",
                              "typeString": "literal_string \"BEP20: decreased allowance below zero\""
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "baseExpression": {
                                "argumentTypes": null,
                                "id": 643,
                                "name": "_allowances",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 423,
                                "src": "14918:11:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                                  "typeString": "mapping(address => mapping(address => uint256))"
                                }
                              },
                              "id": 646,
                              "indexExpression": {
                                "argumentTypes": null,
                                "arguments": [],
                                "expression": {
                                  "argumentTypes": [],
                                  "id": 644,
                                  "name": "_msgSender",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 101,
                                  "src": "14930:10:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
                                    "typeString": "function () view returns (address payable)"
                                  }
                                },
                                "id": 645,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "14930:12:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "14918:25:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                "typeString": "mapping(address => uint256)"
                              }
                            },
                            "id": 648,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 647,
                              "name": "spender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 632,
                              "src": "14944:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "14918:34:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 649,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sub",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 181,
                          "src": "14918:38:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$bound_to$_t_uint256_$",
                            "typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
                          }
                        },
                        "id": 652,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "14918:96:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 639,
                      "name": "_approve",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 844,
                      "src": "14886:8:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 653,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14886:129:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 654,
                  "nodeType": "ExpressionStatement",
                  "src": "14886:129:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "hexValue": "74727565",
                    "id": 655,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "15028:4:0",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 638,
                  "id": 656,
                  "nodeType": "Return",
                  "src": "15021:11:0"
                }
              ]
            },
            "documentation": "@dev Atomically decreases the allowance granted to `spender` by the caller.\n   * This is an alternative to {approve} that can be used as a mitigation for\nproblems described in {BEP20-approve}.\n   * Emits an {Approval} event indicating the updated allowance.\n   * Requirements:\n   * - `spender` cannot be the zero address.\n- `spender` must have allowance for the caller of at least\n`subtractedValue`.",
            "id": 658,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "decreaseAllowance",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 635,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 632,
                  "name": "spender",
                  "nodeType": "VariableDeclaration",
                  "scope": 658,
                  "src": "14816:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 631,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "14816:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 634,
                  "name": "subtractedValue",
                  "nodeType": "VariableDeclaration",
                  "scope": 658,
                  "src": "14833:23:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 633,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "14833:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "14815:42:0"
            },
            "returnParameters": {
              "id": 638,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 637,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 658,
                  "src": "14874:4:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 636,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "14874:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "14873:6:0"
            },
            "scope": 874,
            "src": "14789:248:0",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 714,
              "nodeType": "Block",
              "src": "15560:363:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 672,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 668,
                          "name": "sender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 660,
                          "src": "15574:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "30",
                              "id": 670,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "15592:1:0",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 669,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "15584:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": "address"
                          },
                          "id": 671,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "15584:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "src": "15574:20:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "42455032303a207472616e736665722066726f6d20746865207a65726f2061646472657373",
                        "id": 673,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "15596:39:0",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_0d26cf302d50b28de74be656b11d67092b32131e5712d1bcf08c4e976dacda57",
                          "typeString": "literal_string \"BEP20: transfer from the zero address\""
                        },
                        "value": "BEP20: transfer from the zero address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_0d26cf302d50b28de74be656b11d67092b32131e5712d1bcf08c4e976dacda57",
                          "typeString": "literal_string \"BEP20: transfer from the zero address\""
                        }
                      ],
                      "id": 667,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        892,
                        893
                      ],
                      "referencedDeclaration": 893,
                      "src": "15566:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 674,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "15566:70:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 675,
                  "nodeType": "ExpressionStatement",
                  "src": "15566:70:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 681,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 677,
                          "name": "recipient",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 662,
                          "src": "15650:9:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "30",
                              "id": 679,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "15671:1:0",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 678,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "15663:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": "address"
                          },
                          "id": 680,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "15663:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "src": "15650:23:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "42455032303a207472616e7366657220746f20746865207a65726f2061646472657373",
                        "id": 682,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "15675:37:0",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_ade9efcb59e42e439ffe61509b352b1af56d64ccb68d80b039b7b69578f371d2",
                          "typeString": "literal_string \"BEP20: transfer to the zero address\""
                        },
                        "value": "BEP20: transfer to the zero address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_ade9efcb59e42e439ffe61509b352b1af56d64ccb68d80b039b7b69578f371d2",
                          "typeString": "literal_string \"BEP20: transfer to the zero address\""
                        }
                      ],
                      "id": 676,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        892,
                        893
                      ],
                      "referencedDeclaration": 893,
                      "src": "15642:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 683,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "15642:71:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 684,
                  "nodeType": "ExpressionStatement",
                  "src": "15642:71:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 695,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 685,
                        "name": "_balances",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 417,
                        "src": "15720:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 687,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 686,
                        "name": "sender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 660,
                        "src": "15730:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "15720:17:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 692,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 664,
                          "src": "15762:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "hexValue": "42455032303a207472616e7366657220616d6f756e7420657863656564732062616c616e6365",
                          "id": 693,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "15770:40:0",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_a91efd7a65ef5b4ae4d6568d674798b78a5a89184dd296c100513251c22d3e73",
                            "typeString": "literal_string \"BEP20: transfer amount exceeds balance\""
                          },
                          "value": "BEP20: transfer amount exceeds balance"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_stringliteral_a91efd7a65ef5b4ae4d6568d674798b78a5a89184dd296c100513251c22d3e73",
                            "typeString": "literal_string \"BEP20: transfer amount exceeds balance\""
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 688,
                            "name": "_balances",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 417,
                            "src": "15740:9:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 690,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 689,
                            "name": "sender",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 660,
                            "src": "15750:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "15740:17:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 691,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sub",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 181,
                        "src": "15740:21:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
                        }
                      },
                      "id": 694,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "15740:71:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "15720:91:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 696,
                  "nodeType": "ExpressionStatement",
                  "src": "15720:91:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 706,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 697,
                        "name": "_balances",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 417,
                        "src": "15817:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 699,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 698,
                        "name": "recipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 662,
                        "src": "15827:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "15817:20:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 704,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 664,
                          "src": "15865:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 700,
                            "name": "_balances",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 417,
                            "src": "15840:9:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 702,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 701,
                            "name": "recipient",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 662,
                            "src": "15850:9:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "15840:20:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 703,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "add",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 138,
                        "src": "15840:24:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 705,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "15840:32:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "15817:55:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 707,
                  "nodeType": "ExpressionStatement",
                  "src": "15817:55:0"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 709,
                        "name": "sender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 660,
                        "src": "15892:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 710,
                        "name": "recipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 662,
                        "src": "15900:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 711,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 664,
                        "src": "15911:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 708,
                      "name": "Transfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 79,
                      "src": "15883:8:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 712,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "15883:35:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 713,
                  "nodeType": "EmitStatement",
                  "src": "15878:40:0"
                }
              ]
            },
            "documentation": "@dev Moves tokens `amount` from `sender` to `recipient`.\n   * This is internal function is equivalent to {transfer}, and can be used to\ne.g. implement automatic token fees, slashing mechanisms, etc.\n   * Emits a {Transfer} event.\n   * Requirements:\n   * - `sender` cannot be the zero address.\n- `recipient` cannot be the zero address.\n- `sender` must have a balance of at least `amount`.",
            "id": 715,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_transfer",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 665,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 660,
                  "name": "sender",
                  "nodeType": "VariableDeclaration",
                  "scope": 715,
                  "src": "15500:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 659,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "15500:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 662,
                  "name": "recipient",
                  "nodeType": "VariableDeclaration",
                  "scope": 715,
                  "src": "15516:17:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 661,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "15516:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 664,
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 715,
                  "src": "15535:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 663,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "15535:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "15499:51:0"
            },
            "returnParameters": {
              "id": 666,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "15560:0:0"
            },
            "scope": 874,
            "src": "15481:442:0",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 757,
              "nodeType": "Block",
              "src": "16230:227:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 727,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 723,
                          "name": "account",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 717,
                          "src": "16244:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "30",
                              "id": 725,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "16263:1:0",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 724,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "16255:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": "address"
                          },
                          "id": 726,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "16255:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "src": "16244:21:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "42455032303a206d696e7420746f20746865207a65726f2061646472657373",
                        "id": 728,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "16267:33:0",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_9865f573770ea57d1686e7914cb6526cbb139a36ffdd4bab8d4db350bbc932b3",
                          "typeString": "literal_string \"BEP20: mint to the zero address\""
                        },
                        "value": "BEP20: mint to the zero address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_9865f573770ea57d1686e7914cb6526cbb139a36ffdd4bab8d4db350bbc932b3",
                          "typeString": "literal_string \"BEP20: mint to the zero address\""
                        }
                      ],
                      "id": 722,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        892,
                        893
                      ],
                      "referencedDeclaration": 893,
                      "src": "16236:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 729,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "16236:65:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 730,
                  "nodeType": "ExpressionStatement",
                  "src": "16236:65:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 736,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 731,
                      "name": "_totalSupply",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 425,
                      "src": "16308:12:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 734,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 719,
                          "src": "16340:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "id": 732,
                          "name": "_totalSupply",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 425,
                          "src": "16323:12:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 733,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "add",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 138,
                        "src": "16323:16:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 735,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "16323:24:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "16308:39:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 737,
                  "nodeType": "ExpressionStatement",
                  "src": "16308:39:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 747,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 738,
                        "name": "_balances",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 417,
                        "src": "16353:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 740,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 739,
                        "name": "account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 717,
                        "src": "16363:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "16353:18:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 745,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 719,
                          "src": "16397:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 741,
                            "name": "_balances",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 417,
                            "src": "16374:9:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 743,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 742,
                            "name": "account",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 717,
                            "src": "16384:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "16374:18:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 744,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "add",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 138,
                        "src": "16374:22:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 746,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "16374:30:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "16353:51:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 748,
                  "nodeType": "ExpressionStatement",
                  "src": "16353:51:0"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "hexValue": "30",
                            "id": 751,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "16432:1:0",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 750,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "16424:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": "address"
                        },
                        "id": 752,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "16424:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 753,
                        "name": "account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 717,
                        "src": "16436:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 754,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 719,
                        "src": "16445:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 749,
                      "name": "Transfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 79,
                      "src": "16415:8:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 755,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "16415:37:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 756,
                  "nodeType": "EmitStatement",
                  "src": "16410:42:0"
                }
              ]
            },
            "documentation": "@dev Creates `amount` tokens and assigns them to `account`, increasing\nthe total supply.\n   * Emits a {Transfer} event with `from` set to the zero address.\n   * Requirements\n   * - `to` cannot be the zero address.",
            "id": 758,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_mint",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 720,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 717,
                  "name": "account",
                  "nodeType": "VariableDeclaration",
                  "scope": 758,
                  "src": "16188:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 716,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "16188:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 719,
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 758,
                  "src": "16205:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 718,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "16205:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "16187:33:0"
            },
            "returnParameters": {
              "id": 721,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "16230:0:0"
            },
            "scope": 874,
            "src": "16173:284:0",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 801,
              "nodeType": "Block",
              "src": "16809:267:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 770,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 766,
                          "name": "account",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 760,
                          "src": "16823:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "30",
                              "id": 768,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "16842:1:0",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 767,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "16834:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": "address"
                          },
                          "id": 769,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "16834:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "src": "16823:21:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "42455032303a206275726e2066726f6d20746865207a65726f2061646472657373",
                        "id": 771,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "16846:35:0",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_b81edbf10508d9b81724f18ff8f3d8bfba9790734ce1f1c54dfe1030b4914855",
                          "typeString": "literal_string \"BEP20: burn from the zero address\""
                        },
                        "value": "BEP20: burn from the zero address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_b81edbf10508d9b81724f18ff8f3d8bfba9790734ce1f1c54dfe1030b4914855",
                          "typeString": "literal_string \"BEP20: burn from the zero address\""
                        }
                      ],
                      "id": 765,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        892,
                        893
                      ],
                      "referencedDeclaration": 893,
                      "src": "16815:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 772,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "16815:67:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 773,
                  "nodeType": "ExpressionStatement",
                  "src": "16815:67:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 784,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 774,
                        "name": "_balances",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 417,
                        "src": "16889:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 776,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 775,
                        "name": "account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 760,
                        "src": "16899:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "16889:18:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 781,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 762,
                          "src": "16933:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "hexValue": "42455032303a206275726e20616d6f756e7420657863656564732062616c616e6365",
                          "id": 782,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "16941:36:0",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_deaa84b30175fd0578812c46240362b7914652a35e6707ad7e1556891e4ae032",
                            "typeString": "literal_string \"BEP20: burn amount exceeds balance\""
                          },
                          "value": "BEP20: burn amount exceeds balance"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_stringliteral_deaa84b30175fd0578812c46240362b7914652a35e6707ad7e1556891e4ae032",
                            "typeString": "literal_string \"BEP20: burn amount exceeds balance\""
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 777,
                            "name": "_balances",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 417,
                            "src": "16910:9:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 779,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 778,
                            "name": "account",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 760,
                            "src": "16920:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "16910:18:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 780,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sub",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 181,
                        "src": "16910:22:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
                        }
                      },
                      "id": 783,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "16910:68:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "16889:89:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 785,
                  "nodeType": "ExpressionStatement",
                  "src": "16889:89:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 791,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 786,
                      "name": "_totalSupply",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 425,
                      "src": "16984:12:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 789,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 762,
                          "src": "17016:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "id": 787,
                          "name": "_totalSupply",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 425,
                          "src": "16999:12:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 788,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sub",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 154,
                        "src": "16999:16:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 790,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "16999:24:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "16984:39:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 792,
                  "nodeType": "ExpressionStatement",
                  "src": "16984:39:0"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 794,
                        "name": "account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 760,
                        "src": "17043:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "hexValue": "30",
                            "id": 796,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "17060:1:0",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 795,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "17052:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": "address"
                        },
                        "id": 797,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "17052:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 798,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 762,
                        "src": "17064:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 793,
                      "name": "Transfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 79,
                      "src": "17034:8:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 799,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "17034:37:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 800,
                  "nodeType": "EmitStatement",
                  "src": "17029:42:0"
                }
              ]
            },
            "documentation": "@dev Destroys `amount` tokens from `account`, reducing the\ntotal supply.\n   * Emits a {Transfer} event with `to` set to the zero address.\n   * Requirements\n   * - `account` cannot be the zero address.\n- `account` must have at least `amount` tokens.",
            "id": 802,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_burn",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 763,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 760,
                  "name": "account",
                  "nodeType": "VariableDeclaration",
                  "scope": 802,
                  "src": "16767:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 759,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "16767:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 762,
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 802,
                  "src": "16784:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 761,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "16784:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "16766:33:0"
            },
            "returnParameters": {
              "id": 764,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "16809:0:0"
            },
            "scope": 874,
            "src": "16752:324:0",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 843,
              "nodeType": "Block",
              "src": "17548:239:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 816,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 812,
                          "name": "owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 804,
                          "src": "17562:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "30",
                              "id": 814,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "17579:1:0",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 813,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "17571:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": "address"
                          },
                          "id": 815,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "17571:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "src": "17562:19:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "42455032303a20617070726f76652066726f6d20746865207a65726f2061646472657373",
                        "id": 817,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "17583:38:0",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_1441cfbef485de93bedecc35b3d10fa2992db382c4c9c583a6e423a140abe4a4",
                          "typeString": "literal_string \"BEP20: approve from the zero address\""
                        },
                        "value": "BEP20: approve from the zero address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_1441cfbef485de93bedecc35b3d10fa2992db382c4c9c583a6e423a140abe4a4",
                          "typeString": "literal_string \"BEP20: approve from the zero address\""
                        }
                      ],
                      "id": 811,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        892,
                        893
                      ],
                      "referencedDeclaration": 893,
                      "src": "17554:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 818,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "17554:68:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 819,
                  "nodeType": "ExpressionStatement",
                  "src": "17554:68:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 825,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 821,
                          "name": "spender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 806,
                          "src": "17636:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "30",
                              "id": 823,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "17655:1:0",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 822,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "17647:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": "address"
                          },
                          "id": 824,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "17647:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "src": "17636:21:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "42455032303a20617070726f766520746f20746865207a65726f2061646472657373",
                        "id": 826,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "17659:36:0",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_f10e7571e18b354270dee950932fb6a745efc79414b2b2556185a4ed6a1af0d5",
                          "typeString": "literal_string \"BEP20: approve to the zero address\""
                        },
                        "value": "BEP20: approve to the zero address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_f10e7571e18b354270dee950932fb6a745efc79414b2b2556185a4ed6a1af0d5",
                          "typeString": "literal_string \"BEP20: approve to the zero address\""
                        }
                      ],
                      "id": 820,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        892,
                        893
                      ],
                      "referencedDeclaration": 893,
                      "src": "17628:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 827,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "17628:68:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 828,
                  "nodeType": "ExpressionStatement",
                  "src": "17628:68:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 835,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 829,
                          "name": "_allowances",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 423,
                          "src": "17703:11:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                            "typeString": "mapping(address => mapping(address => uint256))"
                          }
                        },
                        "id": 832,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 830,
                          "name": "owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 804,
                          "src": "17715:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "17703:18:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 833,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 831,
                        "name": "spender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 806,
                        "src": "17722:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "17703:27:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 834,
                      "name": "amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 808,
                      "src": "17733:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "17703:36:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 836,
                  "nodeType": "ExpressionStatement",
                  "src": "17703:36:0"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 838,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 804,
                        "src": "17759:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 839,
                        "name": "spender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 806,
                        "src": "17766:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 840,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 808,
                        "src": "17775:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 837,
                      "name": "Approval",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 87,
                      "src": "17750:8:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 841,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "17750:32:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 842,
                  "nodeType": "EmitStatement",
                  "src": "17745:37:0"
                }
              ]
            },
            "documentation": "@dev Sets `amount` as the allowance of `spender` over the `owner`s tokens.\n   * This is internal function is equivalent to `approve`, and can be used to\ne.g. set automatic allowances for certain subsystems, etc.\n   * Emits an {Approval} event.\n   * Requirements:\n   * - `owner` cannot be the zero address.\n- `spender` cannot be the zero address.",
            "id": 844,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_approve",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 809,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 804,
                  "name": "owner",
                  "nodeType": "VariableDeclaration",
                  "scope": 844,
                  "src": "17491:13:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 803,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "17491:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 806,
                  "name": "spender",
                  "nodeType": "VariableDeclaration",
                  "scope": 844,
                  "src": "17506:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 805,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "17506:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 808,
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 844,
                  "src": "17523:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 807,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "17523:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "17490:48:0"
            },
            "returnParameters": {
              "id": 810,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "17548:0:0"
            },
            "scope": 874,
            "src": "17473:314:0",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 872,
              "nodeType": "Block",
              "src": "18012:158:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 852,
                        "name": "account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 846,
                        "src": "18024:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 853,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 848,
                        "src": "18033:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 851,
                      "name": "_burn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 802,
                      "src": "18018:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 854,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "18018:22:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 855,
                  "nodeType": "ExpressionStatement",
                  "src": "18018:22:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 857,
                        "name": "account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 846,
                        "src": "18055:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 858,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 101,
                          "src": "18064:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
                            "typeString": "function () view returns (address payable)"
                          }
                        },
                        "id": 859,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "18064:12:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 867,
                            "name": "amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 848,
                            "src": "18117:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "hexValue": "42455032303a206275726e20616d6f756e74206578636565647320616c6c6f77616e6365",
                            "id": 868,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "18125:38:0",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_ec946f0dec32d4be54e4fdba37f6ef29c5468152774e7820c946d7689f97ec88",
                              "typeString": "literal_string \"BEP20: burn amount exceeds allowance\""
                            },
                            "value": "BEP20: burn amount exceeds allowance"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_stringliteral_ec946f0dec32d4be54e4fdba37f6ef29c5468152774e7820c946d7689f97ec88",
                              "typeString": "literal_string \"BEP20: burn amount exceeds allowance\""
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "baseExpression": {
                                "argumentTypes": null,
                                "id": 860,
                                "name": "_allowances",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 423,
                                "src": "18078:11:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                                  "typeString": "mapping(address => mapping(address => uint256))"
                                }
                              },
                              "id": 862,
                              "indexExpression": {
                                "argumentTypes": null,
                                "id": 861,
                                "name": "account",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 846,
                                "src": "18090:7:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "18078:20:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                "typeString": "mapping(address => uint256)"
                              }
                            },
                            "id": 865,
                            "indexExpression": {
                              "argumentTypes": null,
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "id": 863,
                                "name": "_msgSender",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 101,
                                "src": "18099:10:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
                                  "typeString": "function () view returns (address payable)"
                                }
                              },
                              "id": 864,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "18099:12:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "18078:34:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 866,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sub",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 181,
                          "src": "18078:38:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$bound_to$_t_uint256_$",
                            "typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
                          }
                        },
                        "id": 869,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "18078:86:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 856,
                      "name": "_approve",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 844,
                      "src": "18046:8:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 870,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "18046:119:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 871,
                  "nodeType": "ExpressionStatement",
                  "src": "18046:119:0"
                }
              ]
            },
            "documentation": "@dev Destroys `amount` tokens from `account`.`amount` is then deducted\nfrom the caller's allowance.\n   * See {_burn} and {_approve}.",
            "id": 873,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_burnFrom",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 849,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 846,
                  "name": "account",
                  "nodeType": "VariableDeclaration",
                  "scope": 873,
                  "src": "17970:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 845,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "17970:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 848,
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 873,
                  "src": "17987:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 847,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "17987:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "17969:33:0"
            },
            "returnParameters": {
              "id": 850,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "18012:0:0"
            },
            "scope": 874,
            "src": "17951:219:0",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "internal"
          }
        ],
        "scope": 875,
        "src": "10968:7204:0"
      }
    ],
    "src": "0:18172:0"
  },
  "bytecode": "",
  "bytecodeSha1": "328a036b0169d796ab4c184c3b8826578d79ba8c",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.5.16+commit.9c3226ce"
  },
  "contractName": "Philcoin",
  "coverageMap": {
    "branches": {
      "0": {
        "Ownable._transferOwnership": {
          "42": [
            10822,
            10844,
            true
          ]
        },
        "Ownable.transferOwnership": {
          "35": [
            9896,
            9918,
            true
          ]
        },
        "Philcoin._approve": {
          "36": [
            17562,
            17581,
            true
          ],
          "37": [
            17636,
            17657,
            true
          ]
        },
        "Philcoin._transfer": {
          "38": [
            15574,
            15594,
            true
          ],
          "39": [
            15650,
            15673,
            true
          ]
        },
        "SafeMath.add": {
          "41": [
            4798,
            4804,
            true
          ]
        },
        "SafeMath.sub": {
          "40": [
            5601,
            5607,
            true
          ]
        }
      }
    },
    "statements": {
      "0": {
        "Context._msgSender": {
          "19": [
            3663,
            3680
          ]
        },
        "Ownable._transferOwnership": {
          "32": [
            10814,
            10887
          ],
          "33": [
            10893,
            10936
          ],
          "34": [
            10942,
            10959
          ]
        },
        "Ownable.owner": {
          "13": [
            9763,
            9776
          ]
        },
        "Ownable.renounceOwnership": {
          "10": [
            10345,
            10390
          ],
          "11": [
            10396,
            10415
          ]
        },
        "Ownable.transferOwnership": {
          "18": [
            10627,
            10655
          ]
        },
        "Philcoin._approve": {
          "20": [
            17554,
            17622
          ],
          "21": [
            17628,
            17696
          ],
          "22": [
            17703,
            17739
          ],
          "23": [
            17745,
            17782
          ]
        },
        "Philcoin._transfer": {
          "24": [
            15566,
            15636
          ],
          "25": [
            15642,
            15713
          ],
          "26": [
            15720,
            15811
          ],
          "27": [
            15817,
            15872
          ],
          "28": [
            15878,
            15918
          ]
        },
        "Philcoin.allowance": {
          "17": [
            12748,
            12782
          ]
        },
        "Philcoin.approve": {
          "1": [
            12988,
            13027
          ],
          "2": [
            13033,
            13044
          ]
        },
        "Philcoin.balanceOf": {
          "9": [
            12249,
            12274
          ]
        },
        "Philcoin.decimals": {
          "7": [
            11711,
            11727
          ]
        },
        "Philcoin.decreaseAllowance": {
          "15": [
            14886,
            15015
          ]
        },
        "Philcoin.getOwner": {
          "12": [
            11582,
            11596
          ]
        },
        "Philcoin.increaseAllowance": {
          "8": [
            14228,
            14311
          ]
        },
        "Philcoin.name": {
          "0": [
            11973,
            11985
          ]
        },
        "Philcoin.symbol": {
          "14": [
            11846,
            11860
          ]
        },
        "Philcoin.totalSupply": {
          "3": [
            12102,
            12121
          ]
        },
        "Philcoin.transfer": {
          "16": [
            12546,
            12588
          ]
        },
        "Philcoin.transferFrom": {
          "4": [
            13583,
            13619
          ],
          "5": [
            13625,
            13746
          ],
          "6": [
            13752,
            13763
          ]
        },
        "SafeMath.add": {
          "30": [
            4790,
            4836
          ],
          "31": [
            4843,
            4851
          ]
        },
        "SafeMath.sub": {
          "29": [
            5593,
            5622
          ]
        }
      }
    }
  },
  "dependencies": [
    "Context",
    "IBEP20",
    "Ownable",
    "SafeMath"
  ],
  "deployedBytecode": "608060405234801561001057600080fd5b50600436106100f55760003560e01c8063715018a611610097578063a457c2d711610066578063a457c2d7146102b5578063a9059cbb146102e1578063dd62ed3e1461030d578063f2fde38b1461033b576100f5565b8063715018a614610277578063893d20e8146102815780638da5cb5b146102a557806395d89b41146102ad576100f5565b806323b872dd116100d357806323b872dd146101d1578063313ce56714610207578063395093511461022557806370a0823114610251576100f5565b806306fdde03146100fa578063095ea7b31461017757806318160ddd146101b7575b600080fd5b610102610361565b6040805160208082528351818301528351919283929083019185019080838360005b8381101561013c578181015183820152602001610124565b50505050905090810190601f1680156101695780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6101a36004803603604081101561018d57600080fd5b506001600160a01b0381351690602001356103f7565b604080519115158252519081900360200190f35b6101bf610414565b60408051918252519081900360200190f35b6101a3600480360360608110156101e757600080fd5b506001600160a01b0381358116916020810135909116906040013561041a565b61020f6104a7565b6040805160ff9092168252519081900360200190f35b6101a36004803603604081101561023b57600080fd5b506001600160a01b0381351690602001356104b0565b6101bf6004803603602081101561026757600080fd5b50356001600160a01b0316610504565b61027f61051f565b005b6102896105d3565b604080516001600160a01b039092168252519081900360200190f35b6102896105e2565b6101026105f1565b6101a3600480360360408110156102cb57600080fd5b506001600160a01b038135169060200135610652565b6101a3600480360360408110156102f757600080fd5b506001600160a01b0381351690602001356106c0565b6101bf6004803603604081101561032357600080fd5b506001600160a01b03813581169160200135166106d4565b61027f6004803603602081101561035157600080fd5b50356001600160a01b03166106ff565b60068054604080516020601f60026000196101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156103ed5780601f106103c2576101008083540402835291602001916103ed565b820191906000526020600020905b8154815290600101906020018083116103d057829003601f168201915b5050505050905090565b600061040b610404610775565b8484610779565b50600192915050565b60035490565b6000610427848484610865565b61049d84610433610775565b61049885604051806060016040528060288152602001610bcb602891396001600160a01b038a16600090815260026020526040812090610471610775565b6001600160a01b03168152602081019190915260400160002054919063ffffffff6109c316565b610779565b5060019392505050565b60045460ff1690565b600061040b6104bd610775565b8461049885600260006104ce610775565b6001600160a01b03908116825260208083019390935260409182016000908120918c16815292529020549063ffffffff610a5a16565b6001600160a01b031660009081526001602052604090205490565b610527610775565b6000546001600160a01b03908116911614610589576040805162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b600080546040516001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600080546001600160a01b0319169055565b60006105dd6105e2565b905090565b6000546001600160a01b031690565b60058054604080516020601f60026000196101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156103ed5780601f106103c2576101008083540402835291602001916103ed565b600061040b61065f610775565b8461049885604051806060016040528060258152602001610c3c6025913960026000610689610775565b6001600160a01b03908116825260208083019390935260409182016000908120918d1681529252902054919063ffffffff6109c316565b600061040b6106cd610775565b8484610865565b6001600160a01b03918216600090815260026020908152604080832093909416825291909152205490565b610707610775565b6000546001600160a01b03908116911614610769576040805162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b61077281610abb565b50565b3390565b6001600160a01b0383166107be5760405162461bcd60e51b8152600401808060200182810382526024815260200180610b816024913960400191505060405180910390fd5b6001600160a01b0382166108035760405162461bcd60e51b8152600401808060200182810382526022815260200180610c616022913960400191505060405180910390fd5b6001600160a01b03808416600081815260026020908152604080832094871680845294825291829020859055815185815291517f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259281900390910190a3505050565b6001600160a01b0383166108aa5760405162461bcd60e51b8152600401808060200182810382526025815260200180610b5c6025913960400191505060405180910390fd5b6001600160a01b0382166108ef5760405162461bcd60e51b8152600401808060200182810382526023815260200180610c196023913960400191505060405180910390fd5b61093281604051806060016040528060268152602001610bf3602691396001600160a01b038616600090815260016020526040902054919063ffffffff6109c316565b6001600160a01b038085166000908152600160205260408082209390935590841681522054610967908263ffffffff610a5a16565b6001600160a01b0380841660008181526001602090815260409182902094909455805185815290519193928716927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef92918290030190a3505050565b60008184841115610a525760405162461bcd60e51b81526004018080602001828103825283818151815260200191508051906020019080838360005b83811015610a175781810151838201526020016109ff565b50505050905090810190601f168015610a445780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b505050900390565b600082820183811015610ab4576040805162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015290519081900360640190fd5b9392505050565b6001600160a01b038116610b005760405162461bcd60e51b8152600401808060200182810382526026815260200180610ba56026913960400191505060405180910390fd5b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b0319166001600160a01b039290921691909117905556fe42455032303a207472616e736665722066726f6d20746865207a65726f206164647265737342455032303a20617070726f76652066726f6d20746865207a65726f20616464726573734f776e61626c653a206e6577206f776e657220697320746865207a65726f206164647265737342455032303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e636542455032303a207472616e7366657220616d6f756e7420657863656564732062616c616e636542455032303a207472616e7366657220746f20746865207a65726f206164647265737342455032303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f42455032303a20617070726f766520746f20746865207a65726f2061646472657373a265627a7a723158205bdcf870ef1fb5c03b0020a60e3a6150f1f2b5d63dae09003885d56edbbc72ab64736f6c63430005100032",
  "deployedSourceMap": "10968:7204:0:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;10968:7204:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;11913:77;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:100:-1;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;11913:77:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12908:141;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;12908:141:0;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;12041:85;;;:::i;:::-;;;;;;;;;;;;;;;;13480:288;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;13480:288:0;;;;;;;;;;;;;;;;;:::i;11655:77::-;;;:::i;:::-;;;;;;;;;;;;;;;;;;;14136:197;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;14136:197:0;;;;;;;;:::i;12175:104::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;12175:104:0;-1:-1:-1;;;;;12175:104:0;;:::i;10293:127::-;;;:::i;:::-;;11524:77;;;:::i;:::-;;;;-1:-1:-1;;;;;11524:77:0;;;;;;;;;;;;;;9710:71;;;:::i;11784:81::-;;;:::i;14789:248::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;14789:248:0;;;;;;;;:::i;12463:147::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;12463:147:0;;;;;;;;:::i;12659:128::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;12659:128:0;;;;;;;;;;:::i;10559:101::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;10559:101:0;-1:-1:-1;;;;;10559:101:0;;:::i;11913:77::-;11980:5;11973:12;;;;;;;;-1:-1:-1;;11973:12:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;11952:13;;11973:12;;11980:5;;11973:12;;11980:5;11973:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;11913:77;:::o;12908:141::-;12976:4;12988:39;12997:12;:10;:12::i;:::-;13011:7;13020:6;12988:8;:39::i;:::-;-1:-1:-1;13040:4:0;12908:141;;;;:::o;12041:85::-;12109:12;;12041:85;:::o;13480:288::-;13571:4;13583:36;13593:6;13601:9;13612:6;13583:9;:36::i;:::-;13625:121;13634:6;13642:12;:10;:12::i;:::-;13656:89;13694:6;13656:89;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;13656:19:0;;;;;;:11;:19;;;;;;13676:12;:10;:12::i;:::-;-1:-1:-1;;;;;13656:33:0;;;;;;;;;;;;-1:-1:-1;13656:33:0;;;:89;;:37;:89;:::i;:::-;13625:8;:121::i;:::-;-1:-1:-1;13759:4:0;13480:288;;;;;:::o;11655:77::-;11718:9;;;;11655:77;:::o;14136:197::-;14216:4;14228:83;14237:12;:10;:12::i;:::-;14251:7;14260:50;14299:10;14260:11;:25;14272:12;:10;:12::i;:::-;-1:-1:-1;;;;;14260:25:0;;;;;;;;;;;;;;;;;-1:-1:-1;14260:25:0;;;:34;;;;;;;;;;;:50;:38;:50;:::i;12175:104::-;-1:-1:-1;;;;;12256:18:0;12234:7;12256:18;;;:9;:18;;;;;;;12175:104::o;10293:127::-;9906:12;:10;:12::i;:::-;9896:6;;-1:-1:-1;;;;;9896:6:0;;;:22;;;9888:67;;;;;-1:-1:-1;;;9888:67:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10387:1;10371:6;;10350:40;;-1:-1:-1;;;;;10371:6:0;;;;10350:40;;10387:1;;10350:40;10413:1;10396:19;;-1:-1:-1;;;;;;10396:19:0;;;10293:127::o;11524:77::-;11567:7;11589;:5;:7::i;:::-;11582:14;;11524:77;:::o;9710:71::-;9748:7;9770:6;-1:-1:-1;;;;;9770:6:0;9710:71;:::o;11784:81::-;11853:7;11846:14;;;;;;;;-1:-1:-1;;11846:14:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;11825:13;;11846:14;;11853:7;;11846:14;;11853:7;11846:14;;;;;;;;;;;;;;;;;;;;;;;;14789:248;14874:4;14886:129;14895:12;:10;:12::i;:::-;14909:7;14918:96;14957:15;14918:96;;;;;;;;;;;;;;;;;:11;:25;14930:12;:10;:12::i;:::-;-1:-1:-1;;;;;14918:25:0;;;;;;;;;;;;;;;;;-1:-1:-1;14918:25:0;;;:34;;;;;;;;;;;:96;;:38;:96;:::i;12463:147::-;12534:4;12546:42;12556:12;:10;:12::i;:::-;12570:9;12581:6;12546:9;:42::i;12659:128::-;-1:-1:-1;;;;;12755:18:0;;;12733:7;12755:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;12659:128::o;10559:101::-;9906:12;:10;:12::i;:::-;9896:6;;-1:-1:-1;;;;;9896:6:0;;;:22;;;9888:67;;;;;-1:-1:-1;;;9888:67:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10627:28;10646:8;10627:18;:28::i;:::-;10559:101;:::o;3595:90::-;3670:10;3595:90;:::o;17473:314::-;-1:-1:-1;;;;;17562:19:0;;17554:68;;;;-1:-1:-1;;;17554:68:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;17636:21:0;;17628:68;;;;-1:-1:-1;;;17628:68:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;17703:18:0;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;:36;;;17750:32;;;;;;;;;;;;;;;;;17473:314;;;:::o;15481:442::-;-1:-1:-1;;;;;15574:20:0;;15566:70;;;;-1:-1:-1;;;15566:70:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;15650:23:0;;15642:71;;;;-1:-1:-1;;;15642:71:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;15740;15762:6;15740:71;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;15740:17:0;;;;;;:9;:17;;;;;;;:71;;:21;:71;:::i;:::-;-1:-1:-1;;;;;15720:17:0;;;;;;;:9;:17;;;;;;:91;;;;15840:20;;;;;;;:32;;15865:6;15840:32;:24;:32;:::i;:::-;-1:-1:-1;;;;;15817:20:0;;;;;;;:9;:20;;;;;;;;;:55;;;;15883:35;;;;;;;15817:20;;15883:35;;;;;;;;;;;;;15481:442;;;:::o;5492:173::-;5578:7;5609:12;5601:6;;;;5593:29;;;;-1:-1:-1;;;5593:29:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;5593:29:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;5640:5:0;;;5492:173::o;4694:162::-;4752:7;4779:5;;;4798:6;;;;4790:46;;;;;-1:-1:-1;;;4790:46:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;4850:1;4694:162;-1:-1:-1;;;4694:162:0:o;10753:211::-;-1:-1:-1;;;;;10822:22:0;;10814:73;;;;-1:-1:-1;;;10814:73:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10919:6;;;10898:38;;-1:-1:-1;;;;;10898:38:0;;;;10919:6;;;10898:38;;;10942:6;:17;;-1:-1:-1;;;;;;10942:17:0;-1:-1:-1;;;;;10942:17:0;;;;;;;;;;10753:211::o",
  "language": "Solidity",
  "natspec": {
    "methods": {
      "allowance(address,address)": {
        "details": "See {BEP20-allowance}."
      },
      "approve(address,uint256)": {
        "details": "See {BEP20-approve}.   * Requirements:   * - `spender` cannot be the zero address."
      },
      "balanceOf(address)": {
        "details": "See {BEP20-balanceOf}."
      },
      "decimals()": {
        "details": "Returns the token decimals."
      },
      "decreaseAllowance(address,uint256)": {
        "details": "Atomically decreases the allowance granted to `spender` by the caller.   * This is an alternative to {approve} that can be used as a mitigation for problems described in {BEP20-approve}.   * Emits an {Approval} event indicating the updated allowance.   * Requirements:   * - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
      },
      "getOwner()": {
        "details": "Returns the bep token owner."
      },
      "increaseAllowance(address,uint256)": {
        "details": "Atomically increases the allowance granted to `spender` by the caller.   * This is an alternative to {approve} that can be used as a mitigation for problems described in {BEP20-approve}.   * Emits an {Approval} event indicating the updated allowance.   * Requirements:   * - `spender` cannot be the zero address."
      },
      "name()": {
        "details": "Returns the token name."
      },
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner.   * NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "symbol()": {
        "details": "Returns the token symbol."
      },
      "totalSupply()": {
        "details": "See {BEP20-totalSupply}."
      },
      "transfer(address,uint256)": {
        "details": "See {BEP20-transfer}.   * Requirements:   * - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`."
      },
      "transferFrom(address,address,uint256)": {
        "details": "See {BEP20-transferFrom}.   * Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {BEP20};   * Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for `sender`'s tokens of at least `amount`."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    }
  },
  "offset": [
    10968,
    18172
  ],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xF5 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x715018A6 GT PUSH2 0x97 JUMPI DUP1 PUSH4 0xA457C2D7 GT PUSH2 0x66 JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x2B5 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x2E1 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x30D JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x33B JUMPI PUSH2 0xF5 JUMP JUMPDEST DUP1 PUSH4 0x715018A6 EQ PUSH2 0x277 JUMPI DUP1 PUSH4 0x893D20E8 EQ PUSH2 0x281 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x2A5 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x2AD JUMPI PUSH2 0xF5 JUMP JUMPDEST DUP1 PUSH4 0x23B872DD GT PUSH2 0xD3 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x1D1 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x207 JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x225 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x251 JUMPI PUSH2 0xF5 JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xFA JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x177 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x1B7 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x102 PUSH2 0x361 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP1 DUP3 MSTORE DUP4 MLOAD DUP2 DUP4 ADD MSTORE DUP4 MLOAD SWAP2 SWAP3 DUP4 SWAP3 SWAP1 DUP4 ADD SWAP2 DUP6 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x13C JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x124 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x169 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1A3 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x18D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x3F7 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 ISZERO ISZERO DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x1BF PUSH2 0x414 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x1A3 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x60 DUP2 LT ISZERO PUSH2 0x1E7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD DUP2 AND SWAP2 PUSH1 0x20 DUP2 ADD CALLDATALOAD SWAP1 SWAP2 AND SWAP1 PUSH1 0x40 ADD CALLDATALOAD PUSH2 0x41A JUMP JUMPDEST PUSH2 0x20F PUSH2 0x4A7 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0xFF SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x1A3 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x23B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x4B0 JUMP JUMPDEST PUSH2 0x1BF PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x267 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x504 JUMP JUMPDEST PUSH2 0x27F PUSH2 0x51F JUMP JUMPDEST STOP JUMPDEST PUSH2 0x289 PUSH2 0x5D3 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x289 PUSH2 0x5E2 JUMP JUMPDEST PUSH2 0x102 PUSH2 0x5F1 JUMP JUMPDEST PUSH2 0x1A3 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x2CB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x652 JUMP JUMPDEST PUSH2 0x1A3 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x2F7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x6C0 JUMP JUMPDEST PUSH2 0x1BF PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x323 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD DUP2 AND SWAP2 PUSH1 0x20 ADD CALLDATALOAD AND PUSH2 0x6D4 JUMP JUMPDEST PUSH2 0x27F PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x351 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x6FF JUMP JUMPDEST PUSH1 0x6 DUP1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 PUSH1 0x1F PUSH1 0x2 PUSH1 0x0 NOT PUSH2 0x100 PUSH1 0x1 DUP9 AND ISZERO MUL ADD SWAP1 SWAP6 AND SWAP5 SWAP1 SWAP5 DIV SWAP4 DUP5 ADD DUP2 SWAP1 DIV DUP2 MUL DUP3 ADD DUP2 ADD SWAP1 SWAP3 MSTORE DUP3 DUP2 MSTORE PUSH1 0x60 SWAP4 SWAP1 SWAP3 SWAP1 SWAP2 DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0x3ED JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x3C2 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x3ED JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x3D0 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x40B PUSH2 0x404 PUSH2 0x775 JUMP JUMPDEST DUP5 DUP5 PUSH2 0x779 JUMP JUMPDEST POP PUSH1 0x1 SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x3 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x427 DUP5 DUP5 DUP5 PUSH2 0x865 JUMP JUMPDEST PUSH2 0x49D DUP5 PUSH2 0x433 PUSH2 0x775 JUMP JUMPDEST PUSH2 0x498 DUP6 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x28 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xBCB PUSH1 0x28 SWAP2 CODECOPY PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP11 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SWAP1 PUSH2 0x471 PUSH2 0x775 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP2 SWAP1 PUSH4 0xFFFFFFFF PUSH2 0x9C3 AND JUMP JUMPDEST PUSH2 0x779 JUMP JUMPDEST POP PUSH1 0x1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x4 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x40B PUSH2 0x4BD PUSH2 0x775 JUMP JUMPDEST DUP5 PUSH2 0x498 DUP6 PUSH1 0x2 PUSH1 0x0 PUSH2 0x4CE PUSH2 0x775 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x40 SWAP2 DUP3 ADD PUSH1 0x0 SWAP1 DUP2 KECCAK256 SWAP2 DUP13 AND DUP2 MSTORE SWAP3 MSTORE SWAP1 KECCAK256 SLOAD SWAP1 PUSH4 0xFFFFFFFF PUSH2 0xA5A AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x527 PUSH2 0x775 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP2 AND EQ PUSH2 0x589 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 DUP4 SWAP1 LOG3 PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5DD PUSH2 0x5E2 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x5 DUP1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 PUSH1 0x1F PUSH1 0x2 PUSH1 0x0 NOT PUSH2 0x100 PUSH1 0x1 DUP9 AND ISZERO MUL ADD SWAP1 SWAP6 AND SWAP5 SWAP1 SWAP5 DIV SWAP4 DUP5 ADD DUP2 SWAP1 DIV DUP2 MUL DUP3 ADD DUP2 ADD SWAP1 SWAP3 MSTORE DUP3 DUP2 MSTORE PUSH1 0x60 SWAP4 SWAP1 SWAP3 SWAP1 SWAP2 DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0x3ED JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x3C2 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x3ED JUMP JUMPDEST PUSH1 0x0 PUSH2 0x40B PUSH2 0x65F PUSH2 0x775 JUMP JUMPDEST DUP5 PUSH2 0x498 DUP6 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x25 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xC3C PUSH1 0x25 SWAP2 CODECOPY PUSH1 0x2 PUSH1 0x0 PUSH2 0x689 PUSH2 0x775 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x40 SWAP2 DUP3 ADD PUSH1 0x0 SWAP1 DUP2 KECCAK256 SWAP2 DUP14 AND DUP2 MSTORE SWAP3 MSTORE SWAP1 KECCAK256 SLOAD SWAP2 SWAP1 PUSH4 0xFFFFFFFF PUSH2 0x9C3 AND JUMP JUMPDEST PUSH1 0x0 PUSH2 0x40B PUSH2 0x6CD PUSH2 0x775 JUMP JUMPDEST DUP5 DUP5 PUSH2 0x865 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x707 PUSH2 0x775 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP2 AND EQ PUSH2 0x769 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH2 0x772 DUP2 PUSH2 0xABB JUMP JUMPDEST POP JUMP JUMPDEST CALLER SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x7BE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x24 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0xB81 PUSH1 0x24 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x803 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x22 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0xC61 PUSH1 0x22 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE DUP2 MLOAD DUP6 DUP2 MSTORE SWAP2 MLOAD PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP3 DUP2 SWAP1 SUB SWAP1 SWAP2 ADD SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x8AA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x25 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0xB5C PUSH1 0x25 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x8EF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x23 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0xC19 PUSH1 0x23 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x932 DUP2 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x26 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xBF3 PUSH1 0x26 SWAP2 CODECOPY PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP2 SWAP1 PUSH4 0xFFFFFFFF PUSH2 0x9C3 AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE SWAP1 DUP5 AND DUP2 MSTORE KECCAK256 SLOAD PUSH2 0x967 SWAP1 DUP3 PUSH4 0xFFFFFFFF PUSH2 0xA5A AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 SWAP5 SWAP1 SWAP5 SSTORE DUP1 MLOAD DUP6 DUP2 MSTORE SWAP1 MLOAD SWAP2 SWAP4 SWAP3 DUP8 AND SWAP3 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP3 SWAP2 DUP3 SWAP1 SUB ADD SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP5 DUP5 GT ISZERO PUSH2 0xA52 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xA17 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x9FF JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0xA44 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP SWAP1 SUB SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 ADD DUP4 DUP2 LT ISZERO PUSH2 0xAB4 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x536166654D6174683A206164646974696F6E206F766572666C6F770000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0xB00 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x26 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0xBA5 PUSH1 0x26 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND SWAP4 SWAP3 AND SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 LOG3 PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP INVALID TIMESTAMP GASLIMIT POP ORIGIN ADDRESS GASPRICE KECCAK256 PUSH21 0x72616E736665722066726F6D20746865207A65726F KECCAK256 PUSH2 0x6464 PUSH19 0x65737342455032303A20617070726F76652066 PUSH19 0x6F6D20746865207A65726F2061646472657373 0x4F PUSH24 0x6E61626C653A206E6577206F776E65722069732074686520 PUSH27 0x65726F206164647265737342455032303A207472616E7366657220 PUSH2 0x6D6F PUSH22 0x6E74206578636565647320616C6C6F77616E63654245 POP ORIGIN ADDRESS GASPRICE KECCAK256 PUSH21 0x72616E7366657220616D6F756E7420657863656564 PUSH20 0x2062616C616E636542455032303A207472616E73 PUSH7 0x657220746F2074 PUSH9 0x65207A65726F206164 PUSH5 0x7265737342 GASLIMIT POP ORIGIN ADDRESS GASPRICE KECCAK256 PUSH5 0x6563726561 PUSH20 0x656420616C6C6F77616E63652062656C6F77207A PUSH6 0x726F42455032 ADDRESS GASPRICE KECCAK256 PUSH2 0x7070 PUSH19 0x6F766520746F20746865207A65726F20616464 PUSH19 0x657373A265627A7A723158205BDCF870EF1FB5 0xC0 EXTCODESIZE STOP KECCAK256 0xA6 0xE GASPRICE PUSH2 0x50F1 CALLCODE 0xB5 0xD6 RETURNDATASIZE 0xAE MULMOD STOP CODESIZE DUP6 0xD5 PUSH15 0xDBBC72AB64736F6C63430005100032 ",
  "pcMap": {
    "0": {
      "offset": [
        10968,
        18172
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [
        10968,
        18172
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [
        10968,
        18172
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "5": {
      "fn": null,
      "offset": [
        10968,
        18172
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "6": {
      "op": "DUP1"
    },
    "7": {
      "op": "ISZERO"
    },
    "8": {
      "op": "PUSH2",
      "value": "0x10"
    },
    "11": {
      "op": "JUMPI"
    },
    "12": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14": {
      "op": "DUP1"
    },
    "15": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": null,
      "offset": [
        10968,
        18172
      ],
      "op": "REVERT",
      "path": "0"
    },
    "16": {
      "op": "JUMPDEST"
    },
    "17": {
      "offset": [
        10968,
        18172
      ],
      "op": "POP",
      "path": "0"
    },
    "18": {
      "fn": null,
      "offset": [
        10968,
        18172
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "20": {
      "fn": null,
      "offset": [
        10968,
        18172
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "21": {
      "fn": null,
      "offset": [
        10968,
        18172
      ],
      "op": "LT",
      "path": "0"
    },
    "22": {
      "fn": null,
      "offset": [
        10968,
        18172
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xF5"
    },
    "25": {
      "fn": null,
      "offset": [
        10968,
        18172
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "26": {
      "fn": null,
      "offset": [
        10968,
        18172
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "28": {
      "fn": null,
      "offset": [
        10968,
        18172
      ],
      "op": "CALLDATALOAD",
      "path": "0"
    },
    "29": {
      "fn": null,
      "offset": [
        10968,
        18172
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xE0"
    },
    "31": {
      "fn": null,
      "offset": [
        10968,
        18172
      ],
      "op": "SHR",
      "path": "0"
    },
    "32": {
      "fn": null,
      "offset": [
        10968,
        18172
      ],
      "op": "DUP1",
      "path": "0"
    },
    "33": {
      "fn": null,
      "offset": [
        10968,
        18172
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x715018A6"
    },
    "38": {
      "fn": null,
      "offset": [
        10968,
        18172
      ],
      "op": "GT",
      "path": "0"
    },
    "39": {
      "fn": null,
      "offset": [
        10968,
        18172
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x97"
    },
    "42": {
      "fn": null,
      "offset": [
        10968,
        18172
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "43": {
      "fn": null,
      "offset": [
        10968,
        18172
      ],
      "op": "DUP1",
      "path": "0"
    },
    "44": {
      "fn": null,
      "offset": [
        10968,
        18172
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xA457C2D7"
    },
    "49": {
      "fn": null,
      "offset": [
        10968,
        18172
      ],
      "op": "GT",
      "path": "0"
    },
    "50": {
      "fn": null,
      "offset": [
        10968,
        18172
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x66"
    },
    "53": {
      "fn": null,
      "offset": [
        10968,
        18172
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "54": {
      "fn": null,
      "offset": [
        10968,
        18172
      ],
      "op": "DUP1",
      "path": "0"
    },
    "55": {
      "fn": null,
      "offset": [
        10968,
        18172
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xA457C2D7"
    },
    "60": {
      "fn": null,
      "offset": [
        10968,
        18172
      ],
      "op": "EQ",
      "path": "0"
    },
    "61": {
      "fn": null,
      "offset": [
        10968,
        18172
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2B5"
    },
    "64": {
      "fn": null,
      "offset": [
        10968,
        18172
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "65": {
      "fn": null,
      "offset": [
        10968,
        18172
      ],
      "op": "DUP1",
      "path": "0"
    },
    "66": {
      "fn": null,
      "offset": [
        10968,
        18172
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xA9059CBB"
    },
    "71": {
      "fn": null,
      "offset": [
        10968,
        18172
      ],
      "op": "EQ",
      "path": "0"
    },
    "72": {
      "fn": null,
      "offset": [
        10968,
        18172
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2E1"
    },
    "75": {
      "fn": null,
      "offset": [
        10968,
        18172
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "76": {
      "fn": null,
      "offset": [
        10968,
        18172
      ],
      "op": "DUP1",
      "path": "0"
    },
    "77": {
      "fn": null,
      "offset": [
        10968,
        18172
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xDD62ED3E"
    },
    "82": {
      "fn": null,
      "offset": [
        10968,
        18172
      ],
      "op": "EQ",
      "path": "0"
    },
    "83": {
      "fn": null,
      "offset": [
        10968,
        18172
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x30D"
    },
    "86": {
      "fn": null,
      "offset": [
        10968,
        18172
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "87": {
      "fn": null,
      "offset": [
        10968,
        18172
      ],
      "op": "DUP1",
      "path": "0"
    },
    "88": {
      "fn": null,
      "offset": [
        10968,
        18172
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xF2FDE38B"
    },
    "93": {
      "fn": null,
      "offset": [
        10968,
        18172
      ],
      "op": "EQ",
      "path": "0"
    },
    "94": {
      "fn": null,
      "offset": [
        10968,
        18172
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x33B"
    },
    "97": {
      "fn": null,
      "offset": [
        10968,
        18172
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "98": {
      "fn": null,
      "offset": [
        10968,
        18172
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xF5"
    },
    "101": {
      "fn": null,
      "offset": [
        10968,
        18172
      ],
      "op": "JUMP",
      "path": "0"
    },
    "102": {
      "fn": null,
      "offset": [
        10968,
        18172
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "103": {
      "fn": null,
      "offset": [
        10968,
        18172
      ],
      "op": "DUP1",
      "path": "0"
    },
    "104": {
      "fn": null,
      "offset": [
        10968,
        18172
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x715018A6"
    },
    "109": {
      "fn": null,
      "offset": [
        10968,
        18172
      ],
      "op": "EQ",
      "path": "0"
    },
    "110": {
      "fn": null,
      "offset": [
        10968,
        18172
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x277"
    },
    "113": {
      "fn": null,
      "offset": [
        10968,
        18172
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "114": {
      "fn": null,
      "offset": [
        10968,
        18172
      ],
      "op": "DUP1",
      "path": "0"
    },
    "115": {
      "fn": null,
      "offset": [
        10968,
        18172
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x893D20E8"
    },
    "120": {
      "fn": null,
      "offset": [
        10968,
        18172
      ],
      "op": "EQ",
      "path": "0"
    },
    "121": {
      "fn": null,
      "offset": [
        10968,
        18172
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x281"
    },
    "124": {
      "fn": null,
      "offset": [
        10968,
        18172
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "125": {
      "fn": null,
      "offset": [
        10968,
        18172
      ],
      "op": "DUP1",
      "path": "0"
    },
    "126": {
      "fn": null,
      "offset": [
        10968,
        18172
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x8DA5CB5B"
    },
    "131": {
      "fn": null,
      "offset": [
        10968,
        18172
      ],
      "op": "EQ",
      "path": "0"
    },
    "132": {
      "fn": null,
      "offset": [
        10968,
        18172
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2A5"
    },
    "135": {
      "fn": null,
      "offset": [
        10968,
        18172
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "136": {
      "fn": null,
      "offset": [
        10968,
        18172
      ],
      "op": "DUP1",
      "path": "0"
    },
    "137": {
      "fn": null,
      "offset": [
        10968,
        18172
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x95D89B41"
    },
    "142": {
      "fn": null,
      "offset": [
        10968,
        18172
      ],
      "op": "EQ",
      "path": "0"
    },
    "143": {
      "fn": null,
      "offset": [
        10968,
        18172
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2AD"
    },
    "146": {
      "fn": null,
      "offset": [
        10968,
        18172
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "147": {
      "fn": null,
      "offset": [
        10968,
        18172
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xF5"
    },
    "150": {
      "fn": null,
      "offset": [
        10968,
        18172
      ],
      "op": "JUMP",
      "path": "0"
    },
    "151": {
      "fn": null,
      "offset": [
        10968,
        18172
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "152": {
      "fn": null,
      "offset": [
        10968,
        18172
      ],
      "op": "DUP1",
      "path": "0"
    },
    "153": {
      "fn": null,
      "offset": [
        10968,
        18172
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x23B872DD"
    },
    "158": {
      "fn": null,
      "offset": [
        10968,
        18172
      ],
      "op": "GT",
      "path": "0"
    },
    "159": {
      "fn": null,
      "offset": [
        10968,
        18172
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xD3"
    },
    "162": {
      "fn": null,
      "offset": [
        10968,
        18172
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "163": {
      "fn": null,
      "offset": [
        10968,
        18172
      ],
      "op": "DUP1",
      "path": "0"
    },
    "164": {
      "fn": null,
      "offset": [
        10968,
        18172
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x23B872DD"
    },
    "169": {
      "fn": null,
      "offset": [
        10968,
        18172
      ],
      "op": "EQ",
      "path": "0"
    },
    "170": {
      "fn": null,
      "offset": [
        10968,
        18172
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1D1"
    },
    "173": {
      "fn": null,
      "offset": [
        10968,
        18172
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "174": {
      "fn": null,
      "offset": [
        10968,
        18172
      ],
      "op": "DUP1",
      "path": "0"
    },
    "175": {
      "fn": null,
      "offset": [
        10968,
        18172
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x313CE567"
    },
    "180": {
      "fn": null,
      "offset": [
        10968,
        18172
      ],
      "op": "EQ",
      "path": "0"
    },
    "181": {
      "fn": null,
      "offset": [
        10968,
        18172
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x207"
    },
    "184": {
      "fn": null,
      "offset": [
        10968,
        18172
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "185": {
      "fn": null,
      "offset": [
        10968,
        18172
      ],
      "op": "DUP1",
      "path": "0"
    },
    "186": {
      "fn": null,
      "offset": [
        10968,
        18172
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x39509351"
    },
    "191": {
      "fn": null,
      "offset": [
        10968,
        18172
      ],
      "op": "EQ",
      "path": "0"
    },
    "192": {
      "fn": null,
      "offset": [
        10968,
        18172
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x225"
    },
    "195": {
      "fn": null,
      "offset": [
        10968,
        18172
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "196": {
      "fn": null,
      "offset": [
        10968,
        18172
      ],
      "op": "DUP1",
      "path": "0"
    },
    "197": {
      "fn": null,
      "offset": [
        10968,
        18172
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x70A08231"
    },
    "202": {
      "fn": null,
      "offset": [
        10968,
        18172
      ],
      "op": "EQ",
      "path": "0"
    },
    "203": {
      "fn": null,
      "offset": [
        10968,
        18172
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x251"
    },
    "206": {
      "fn": null,
      "offset": [
        10968,
        18172
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "207": {
      "fn": null,
      "offset": [
        10968,
        18172
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xF5"
    },
    "210": {
      "fn": null,
      "offset": [
        10968,
        18172
      ],
      "op": "JUMP",
      "path": "0"
    },
    "211": {
      "fn": null,
      "offset": [
        10968,
        18172
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "212": {
      "fn": null,
      "offset": [
        10968,
        18172
      ],
      "op": "DUP1",
      "path": "0"
    },
    "213": {
      "fn": null,
      "offset": [
        10968,
        18172
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x6FDDE03"
    },
    "218": {
      "fn": null,
      "offset": [
        10968,
        18172
      ],
      "op": "EQ",
      "path": "0"
    },
    "219": {
      "fn": null,
      "offset": [
        10968,
        18172
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xFA"
    },
    "222": {
      "fn": null,
      "offset": [
        10968,
        18172
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "223": {
      "fn": null,
      "offset": [
        10968,
        18172
      ],
      "op": "DUP1",
      "path": "0"
    },
    "224": {
      "fn": null,
      "offset": [
        10968,
        18172
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x95EA7B3"
    },
    "229": {
      "fn": null,
      "offset": [
        10968,
        18172
      ],
      "op": "EQ",
      "path": "0"
    },
    "230": {
      "fn": null,
      "offset": [
        10968,
        18172
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x177"
    },
    "233": {
      "fn": null,
      "offset": [
        10968,
        18172
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "234": {
      "fn": null,
      "offset": [
        10968,
        18172
      ],
      "op": "DUP1",
      "path": "0"
    },
    "235": {
      "fn": null,
      "offset": [
        10968,
        18172
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x18160DDD"
    },
    "240": {
      "fn": null,
      "offset": [
        10968,
        18172
      ],
      "op": "EQ",
      "path": "0"
    },
    "241": {
      "fn": null,
      "offset": [
        10968,
        18172
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1B7"
    },
    "244": {
      "fn": null,
      "offset": [
        10968,
        18172
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "245": {
      "fn": null,
      "offset": [
        10968,
        18172
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "246": {
      "fn": null,
      "offset": [
        10968,
        18172
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "248": {
      "fn": null,
      "offset": [
        10968,
        18172
      ],
      "op": "DUP1",
      "path": "0"
    },
    "249": {
      "first_revert": true,
      "fn": null,
      "offset": [
        10968,
        18172
      ],
      "op": "REVERT",
      "path": "0"
    },
    "250": {
      "fn": "Philcoin.name",
      "offset": [
        11913,
        11990
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "251": {
      "fn": "Philcoin.name",
      "offset": [
        11913,
        11990
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x102"
    },
    "254": {
      "fn": "Philcoin.name",
      "offset": [
        11913,
        11990
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x361"
    },
    "257": {
      "fn": "Philcoin.name",
      "jump": "i",
      "offset": [
        11913,
        11990
      ],
      "op": "JUMP",
      "path": "0"
    },
    "258": {
      "fn": "Philcoin.name",
      "offset": [
        11913,
        11990
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "259": {
      "fn": "Philcoin.name",
      "offset": [
        11913,
        11990
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "261": {
      "fn": "Philcoin.name",
      "offset": [
        11913,
        11990
      ],
      "op": "DUP1",
      "path": "0"
    },
    "262": {
      "fn": "Philcoin.name",
      "offset": [
        11913,
        11990
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "263": {
      "fn": "Philcoin.name",
      "offset": [
        11913,
        11990
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "265": {
      "fn": "Philcoin.name",
      "offset": [
        11913,
        11990
      ],
      "op": "DUP1",
      "path": "0"
    },
    "266": {
      "fn": "Philcoin.name",
      "offset": [
        11913,
        11990
      ],
      "op": "DUP3",
      "path": "0"
    },
    "267": {
      "fn": "Philcoin.name",
      "offset": [
        11913,
        11990
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "268": {
      "fn": "Philcoin.name",
      "offset": [
        11913,
        11990
      ],
      "op": "DUP4",
      "path": "0"
    },
    "269": {
      "fn": "Philcoin.name",
      "offset": [
        11913,
        11990
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "270": {
      "fn": "Philcoin.name",
      "offset": [
        11913,
        11990
      ],
      "op": "DUP2",
      "path": "0"
    },
    "271": {
      "fn": "Philcoin.name",
      "offset": [
        11913,
        11990
      ],
      "op": "DUP4",
      "path": "0"
    },
    "272": {
      "fn": "Philcoin.name",
      "offset": [
        11913,
        11990
      ],
      "op": "ADD",
      "path": "0"
    },
    "273": {
      "fn": "Philcoin.name",
      "offset": [
        11913,
        11990
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "274": {
      "fn": "Philcoin.name",
      "offset": [
        11913,
        11990
      ],
      "op": "DUP4",
      "path": "0"
    },
    "275": {
      "fn": "Philcoin.name",
      "offset": [
        11913,
        11990
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "276": {
      "fn": "Philcoin.name",
      "offset": [
        11913,
        11990
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "277": {
      "fn": "Philcoin.name",
      "offset": [
        11913,
        11990
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "278": {
      "fn": "Philcoin.name",
      "offset": [
        11913,
        11990
      ],
      "op": "DUP4",
      "path": "0"
    },
    "279": {
      "fn": "Philcoin.name",
      "offset": [
        11913,
        11990
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "280": {
      "fn": "Philcoin.name",
      "offset": [
        11913,
        11990
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "281": {
      "fn": "Philcoin.name",
      "offset": [
        11913,
        11990
      ],
      "op": "DUP4",
      "path": "0"
    },
    "282": {
      "fn": "Philcoin.name",
      "offset": [
        11913,
        11990
      ],
      "op": "ADD",
      "path": "0"
    },
    "283": {
      "fn": "Philcoin.name",
      "offset": [
        11913,
        11990
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "284": {
      "fn": "Philcoin.name",
      "offset": [
        11913,
        11990
      ],
      "op": "DUP6",
      "path": "0"
    },
    "285": {
      "fn": "Philcoin.name",
      "offset": [
        11913,
        11990
      ],
      "op": "ADD",
      "path": "0"
    },
    "286": {
      "fn": "Philcoin.name",
      "offset": [
        11913,
        11990
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "287": {
      "fn": "Philcoin.name",
      "offset": [
        11913,
        11990
      ],
      "op": "DUP1",
      "path": "0"
    },
    "288": {
      "fn": "Philcoin.name",
      "offset": [
        11913,
        11990
      ],
      "op": "DUP4",
      "path": "0"
    },
    "289": {
      "fn": "Philcoin.name",
      "offset": [
        11913,
        11990
      ],
      "op": "DUP4",
      "path": "0"
    },
    "290": {
      "fn": "Philcoin.name",
      "offset": [
        11913,
        11990
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "292": {
      "op": "JUMPDEST"
    },
    "293": {
      "op": "DUP4"
    },
    "294": {
      "op": "DUP2"
    },
    "295": {
      "op": "LT"
    },
    "296": {
      "op": "ISZERO"
    },
    "297": {
      "op": "PUSH2",
      "value": "0x13C"
    },
    "300": {
      "op": "JUMPI"
    },
    "301": {
      "op": "DUP2"
    },
    "302": {
      "op": "DUP2"
    },
    "303": {
      "op": "ADD"
    },
    "304": {
      "op": "MLOAD"
    },
    "305": {
      "op": "DUP4"
    },
    "306": {
      "op": "DUP3"
    },
    "307": {
      "op": "ADD"
    },
    "308": {
      "op": "MSTORE"
    },
    "309": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "311": {
      "op": "ADD"
    },
    "312": {
      "op": "PUSH2",
      "value": "0x124"
    },
    "315": {
      "op": "JUMP"
    },
    "316": {
      "op": "JUMPDEST"
    },
    "317": {
      "op": "POP"
    },
    "318": {
      "fn": "Philcoin.name",
      "offset": [
        11913,
        11990
      ],
      "op": "POP",
      "path": "0"
    },
    "319": {
      "fn": "Philcoin.name",
      "offset": [
        11913,
        11990
      ],
      "op": "POP",
      "path": "0"
    },
    "320": {
      "fn": "Philcoin.name",
      "offset": [
        11913,
        11990
      ],
      "op": "POP",
      "path": "0"
    },
    "321": {
      "fn": "Philcoin.name",
      "offset": [
        11913,
        11990
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "322": {
      "fn": "Philcoin.name",
      "offset": [
        11913,
        11990
      ],
      "op": "POP",
      "path": "0"
    },
    "323": {
      "fn": "Philcoin.name",
      "offset": [
        11913,
        11990
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "324": {
      "fn": "Philcoin.name",
      "offset": [
        11913,
        11990
      ],
      "op": "DUP2",
      "path": "0"
    },
    "325": {
      "fn": "Philcoin.name",
      "offset": [
        11913,
        11990
      ],
      "op": "ADD",
      "path": "0"
    },
    "326": {
      "fn": "Philcoin.name",
      "offset": [
        11913,
        11990
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "327": {
      "fn": "Philcoin.name",
      "offset": [
        11913,
        11990
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "329": {
      "fn": "Philcoin.name",
      "offset": [
        11913,
        11990
      ],
      "op": "AND",
      "path": "0"
    },
    "330": {
      "fn": "Philcoin.name",
      "offset": [
        11913,
        11990
      ],
      "op": "DUP1",
      "path": "0"
    },
    "331": {
      "fn": "Philcoin.name",
      "offset": [
        11913,
        11990
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "332": {
      "fn": "Philcoin.name",
      "offset": [
        11913,
        11990
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x169"
    },
    "335": {
      "fn": "Philcoin.name",
      "offset": [
        11913,
        11990
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "336": {
      "fn": "Philcoin.name",
      "offset": [
        11913,
        11990
      ],
      "op": "DUP1",
      "path": "0"
    },
    "337": {
      "fn": "Philcoin.name",
      "offset": [
        11913,
        11990
      ],
      "op": "DUP3",
      "path": "0"
    },
    "338": {
      "fn": "Philcoin.name",
      "offset": [
        11913,
        11990
      ],
      "op": "SUB",
      "path": "0"
    },
    "339": {
      "fn": "Philcoin.name",
      "offset": [
        11913,
        11990
      ],
      "op": "DUP1",
      "path": "0"
    },
    "340": {
      "fn": "Philcoin.name",
      "offset": [
        11913,
        11990
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "341": {
      "fn": "Philcoin.name",
      "offset": [
        11913,
        11990
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "343": {
      "fn": "Philcoin.name",
      "offset": [
        11913,
        11990
      ],
      "op": "DUP4",
      "path": "0"
    },
    "344": {
      "fn": "Philcoin.name",
      "offset": [
        11913,
        11990
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "346": {
      "fn": "Philcoin.name",
      "offset": [
        11913,
        11990
      ],
      "op": "SUB",
      "path": "0"
    },
    "347": {
      "fn": "Philcoin.name",
      "offset": [
        11913,
        11990
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x100"
    },
    "350": {
      "fn": "Philcoin.name",
      "offset": [
        11913,
        11990
      ],
      "op": "EXP",
      "path": "0"
    },
    "351": {
      "fn": "Philcoin.name",
      "offset": [
        11913,
        11990
      ],
      "op": "SUB",
      "path": "0"
    },
    "352": {
      "fn": "Philcoin.name",
      "offset": [
        11913,
        11990
      ],
      "op": "NOT",
      "path": "0"
    },
    "353": {
      "fn": "Philcoin.name",
      "offset": [
        11913,
        11990
      ],
      "op": "AND",
      "path": "0"
    },
    "354": {
      "fn": "Philcoin.name",
      "offset": [
        11913,
        11990
      ],
      "op": "DUP2",
      "path": "0"
    },
    "355": {
      "fn": "Philcoin.name",
      "offset": [
        11913,
        11990
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "356": {
      "fn": "Philcoin.name",
      "offset": [
        11913,
        11990
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "358": {
      "fn": "Philcoin.name",
      "offset": [
        11913,
        11990
      ],
      "op": "ADD",
      "path": "0"
    },
    "359": {
      "fn": "Philcoin.name",
      "offset": [
        11913,
        11990
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "360": {
      "fn": "Philcoin.name",
      "offset": [
        11913,
        11990
      ],
      "op": "POP",
      "path": "0"
    },
    "361": {
      "fn": "Philcoin.name",
      "offset": [
        11913,
        11990
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "362": {
      "fn": "Philcoin.name",
      "offset": [
        11913,
        11990
      ],
      "op": "POP",
      "path": "0"
    },
    "363": {
      "fn": "Philcoin.name",
      "offset": [
        11913,
        11990
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "364": {
      "fn": "Philcoin.name",
      "offset": [
        11913,
        11990
      ],
      "op": "POP",
      "path": "0"
    },
    "365": {
      "fn": "Philcoin.name",
      "offset": [
        11913,
        11990
      ],
      "op": "POP",
      "path": "0"
    },
    "366": {
      "fn": "Philcoin.name",
      "offset": [
        11913,
        11990
      ],
      "op": "POP",
      "path": "0"
    },
    "367": {
      "fn": "Philcoin.name",
      "offset": [
        11913,
        11990
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "369": {
      "fn": "Philcoin.name",
      "offset": [
        11913,
        11990
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "370": {
      "fn": "Philcoin.name",
      "offset": [
        11913,
        11990
      ],
      "op": "DUP1",
      "path": "0"
    },
    "371": {
      "fn": "Philcoin.name",
      "offset": [
        11913,
        11990
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "372": {
      "fn": "Philcoin.name",
      "offset": [
        11913,
        11990
      ],
      "op": "SUB",
      "path": "0"
    },
    "373": {
      "fn": "Philcoin.name",
      "offset": [
        11913,
        11990
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "374": {
      "fn": "Philcoin.name",
      "offset": [
        11913,
        11990
      ],
      "op": "RETURN",
      "path": "0"
    },
    "375": {
      "fn": "Philcoin.approve",
      "offset": [
        12908,
        13049
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "376": {
      "fn": "Philcoin.approve",
      "offset": [
        12908,
        13049
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1A3"
    },
    "379": {
      "fn": "Philcoin.approve",
      "offset": [
        12908,
        13049
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "381": {
      "fn": "Philcoin.approve",
      "offset": [
        12908,
        13049
      ],
      "op": "DUP1",
      "path": "0"
    },
    "382": {
      "fn": "Philcoin.approve",
      "offset": [
        12908,
        13049
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "383": {
      "fn": "Philcoin.approve",
      "offset": [
        12908,
        13049
      ],
      "op": "SUB",
      "path": "0"
    },
    "384": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "386": {
      "op": "DUP2"
    },
    "387": {
      "op": "LT"
    },
    "388": {
      "op": "ISZERO"
    },
    "389": {
      "op": "PUSH2",
      "value": "0x18D"
    },
    "392": {
      "op": "JUMPI"
    },
    "393": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "395": {
      "op": "DUP1"
    },
    "396": {
      "op": "REVERT"
    },
    "397": {
      "op": "JUMPDEST"
    },
    "398": {
      "op": "POP"
    },
    "399": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "401": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "403": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "405": {
      "op": "SHL"
    },
    "406": {
      "op": "SUB"
    },
    "407": {
      "fn": "Philcoin.approve",
      "offset": [
        12908,
        13049
      ],
      "op": "DUP2",
      "path": "0"
    },
    "408": {
      "fn": "Philcoin.approve",
      "offset": [
        12908,
        13049
      ],
      "op": "CALLDATALOAD",
      "path": "0"
    },
    "409": {
      "fn": "Philcoin.approve",
      "offset": [
        12908,
        13049
      ],
      "op": "AND",
      "path": "0"
    },
    "410": {
      "fn": "Philcoin.approve",
      "offset": [
        12908,
        13049
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "411": {
      "fn": "Philcoin.approve",
      "offset": [
        12908,
        13049
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "413": {
      "fn": "Philcoin.approve",
      "offset": [
        12908,
        13049
      ],
      "op": "ADD",
      "path": "0"
    },
    "414": {
      "fn": "Philcoin.approve",
      "offset": [
        12908,
        13049
      ],
      "op": "CALLDATALOAD",
      "path": "0"
    },
    "415": {
      "fn": "Philcoin.approve",
      "offset": [
        12908,
        13049
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3F7"
    },
    "418": {
      "fn": "Philcoin.approve",
      "jump": "i",
      "offset": [
        12908,
        13049
      ],
      "op": "JUMP",
      "path": "0"
    },
    "419": {
      "fn": "Philcoin.approve",
      "offset": [
        12908,
        13049
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "420": {
      "fn": "Philcoin.approve",
      "offset": [
        12908,
        13049
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "422": {
      "fn": "Philcoin.approve",
      "offset": [
        12908,
        13049
      ],
      "op": "DUP1",
      "path": "0"
    },
    "423": {
      "fn": "Philcoin.approve",
      "offset": [
        12908,
        13049
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "424": {
      "fn": "Philcoin.approve",
      "offset": [
        12908,
        13049
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "425": {
      "fn": "Philcoin.approve",
      "offset": [
        12908,
        13049
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "426": {
      "fn": "Philcoin.approve",
      "offset": [
        12908,
        13049
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "427": {
      "fn": "Philcoin.approve",
      "offset": [
        12908,
        13049
      ],
      "op": "DUP3",
      "path": "0"
    },
    "428": {
      "fn": "Philcoin.approve",
      "offset": [
        12908,
        13049
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "429": {
      "fn": "Philcoin.approve",
      "offset": [
        12908,
        13049
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "430": {
      "fn": "Philcoin.approve",
      "offset": [
        12908,
        13049
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "431": {
      "fn": "Philcoin.approve",
      "offset": [
        12908,
        13049
      ],
      "op": "DUP2",
      "path": "0"
    },
    "432": {
      "fn": "Philcoin.approve",
      "offset": [
        12908,
        13049
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "433": {
      "fn": "Philcoin.approve",
      "offset": [
        12908,
        13049
      ],
      "op": "SUB",
      "path": "0"
    },
    "434": {
      "fn": "Philcoin.approve",
      "offset": [
        12908,
        13049
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "436": {
      "fn": "Philcoin.approve",
      "offset": [
        12908,
        13049
      ],
      "op": "ADD",
      "path": "0"
    },
    "437": {
      "fn": "Philcoin.approve",
      "offset": [
        12908,
        13049
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "438": {
      "fn": "Philcoin.approve",
      "offset": [
        12908,
        13049
      ],
      "op": "RETURN",
      "path": "0"
    },
    "439": {
      "fn": "Philcoin.totalSupply",
      "offset": [
        12041,
        12126
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "440": {
      "fn": "Philcoin.totalSupply",
      "offset": [
        12041,
        12126
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1BF"
    },
    "443": {
      "fn": "Philcoin.totalSupply",
      "offset": [
        12041,
        12126
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x414"
    },
    "446": {
      "fn": "Philcoin.totalSupply",
      "jump": "i",
      "offset": [
        12041,
        12126
      ],
      "op": "JUMP",
      "path": "0"
    },
    "447": {
      "fn": "Philcoin.totalSupply",
      "offset": [
        12041,
        12126
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "448": {
      "fn": "Philcoin.totalSupply",
      "offset": [
        12041,
        12126
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "450": {
      "fn": "Philcoin.totalSupply",
      "offset": [
        12041,
        12126
      ],
      "op": "DUP1",
      "path": "0"
    },
    "451": {
      "fn": "Philcoin.totalSupply",
      "offset": [
        12041,
        12126
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "452": {
      "fn": "Philcoin.totalSupply",
      "offset": [
        12041,
        12126
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "453": {
      "fn": "Philcoin.totalSupply",
      "offset": [
        12041,
        12126
      ],
      "op": "DUP3",
      "path": "0"
    },
    "454": {
      "fn": "Philcoin.totalSupply",
      "offset": [
        12041,
        12126
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "455": {
      "fn": "Philcoin.totalSupply",
      "offset": [
        12041,
        12126
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "456": {
      "fn": "Philcoin.totalSupply",
      "offset": [
        12041,
        12126
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "457": {
      "fn": "Philcoin.totalSupply",
      "offset": [
        12041,
        12126
      ],
      "op": "DUP2",
      "path": "0"
    },
    "458": {
      "fn": "Philcoin.totalSupply",
      "offset": [
        12041,
        12126
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "459": {
      "fn": "Philcoin.totalSupply",
      "offset": [
        12041,
        12126
      ],
      "op": "SUB",
      "path": "0"
    },
    "460": {
      "fn": "Philcoin.totalSupply",
      "offset": [
        12041,
        12126
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "462": {
      "fn": "Philcoin.totalSupply",
      "offset": [
        12041,
        12126
      ],
      "op": "ADD",
      "path": "0"
    },
    "463": {
      "fn": "Philcoin.totalSupply",
      "offset": [
        12041,
        12126
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "464": {
      "fn": "Philcoin.totalSupply",
      "offset": [
        12041,
        12126
      ],
      "op": "RETURN",
      "path": "0"
    },
    "465": {
      "fn": "Philcoin.transferFrom",
      "offset": [
        13480,
        13768
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "466": {
      "fn": "Philcoin.transferFrom",
      "offset": [
        13480,
        13768
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1A3"
    },
    "469": {
      "fn": "Philcoin.transferFrom",
      "offset": [
        13480,
        13768
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "471": {
      "fn": "Philcoin.transferFrom",
      "offset": [
        13480,
        13768
      ],
      "op": "DUP1",
      "path": "0"
    },
    "472": {
      "fn": "Philcoin.transferFrom",
      "offset": [
        13480,
        13768
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "473": {
      "fn": "Philcoin.transferFrom",
      "offset": [
        13480,
        13768
      ],
      "op": "SUB",
      "path": "0"
    },
    "474": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "476": {
      "op": "DUP2"
    },
    "477": {
      "op": "LT"
    },
    "478": {
      "op": "ISZERO"
    },
    "479": {
      "op": "PUSH2",
      "value": "0x1E7"
    },
    "482": {
      "op": "JUMPI"
    },
    "483": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "485": {
      "op": "DUP1"
    },
    "486": {
      "op": "REVERT"
    },
    "487": {
      "op": "JUMPDEST"
    },
    "488": {
      "op": "POP"
    },
    "489": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "491": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "493": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "495": {
      "op": "SHL"
    },
    "496": {
      "op": "SUB"
    },
    "497": {
      "fn": "Philcoin.transferFrom",
      "offset": [
        13480,
        13768
      ],
      "op": "DUP2",
      "path": "0"
    },
    "498": {
      "fn": "Philcoin.transferFrom",
      "offset": [
        13480,
        13768
      ],
      "op": "CALLDATALOAD",
      "path": "0"
    },
    "499": {
      "fn": "Philcoin.transferFrom",
      "offset": [
        13480,
        13768
      ],
      "op": "DUP2",
      "path": "0"
    },
    "500": {
      "fn": "Philcoin.transferFrom",
      "offset": [
        13480,
        13768
      ],
      "op": "AND",
      "path": "0"
    },
    "501": {
      "fn": "Philcoin.transferFrom",
      "offset": [
        13480,
        13768
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "502": {
      "fn": "Philcoin.transferFrom",
      "offset": [
        13480,
        13768
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "504": {
      "fn": "Philcoin.transferFrom",
      "offset": [
        13480,
        13768
      ],
      "op": "DUP2",
      "path": "0"
    },
    "505": {
      "fn": "Philcoin.transferFrom",
      "offset": [
        13480,
        13768
      ],
      "op": "ADD",
      "path": "0"
    },
    "506": {
      "fn": "Philcoin.transferFrom",
      "offset": [
        13480,
        13768
      ],
      "op": "CALLDATALOAD",
      "path": "0"
    },
    "507": {
      "fn": "Philcoin.transferFrom",
      "offset": [
        13480,
        13768
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "508": {
      "fn": "Philcoin.transferFrom",
      "offset": [
        13480,
        13768
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "509": {
      "fn": "Philcoin.transferFrom",
      "offset": [
        13480,
        13768
      ],
      "op": "AND",
      "path": "0"
    },
    "510": {
      "fn": "Philcoin.transferFrom",
      "offset": [
        13480,
        13768
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "511": {
      "fn": "Philcoin.transferFrom",
      "offset": [
        13480,
        13768
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "513": {
      "fn": "Philcoin.transferFrom",
      "offset": [
        13480,
        13768
      ],
      "op": "ADD",
      "path": "0"
    },
    "514": {
      "fn": "Philcoin.transferFrom",
      "offset": [
        13480,
        13768
      ],
      "op": "CALLDATALOAD",
      "path": "0"
    },
    "515": {
      "fn": "Philcoin.transferFrom",
      "offset": [
        13480,
        13768
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x41A"
    },
    "518": {
      "fn": "Philcoin.transferFrom",
      "jump": "i",
      "offset": [
        13480,
        13768
      ],
      "op": "JUMP",
      "path": "0"
    },
    "519": {
      "fn": "Philcoin.decimals",
      "offset": [
        11655,
        11732
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "520": {
      "fn": "Philcoin.decimals",
      "offset": [
        11655,
        11732
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x20F"
    },
    "523": {
      "fn": "Philcoin.decimals",
      "offset": [
        11655,
        11732
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x4A7"
    },
    "526": {
      "fn": "Philcoin.decimals",
      "jump": "i",
      "offset": [
        11655,
        11732
      ],
      "op": "JUMP",
      "path": "0"
    },
    "527": {
      "fn": "Philcoin.decimals",
      "offset": [
        11655,
        11732
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "528": {
      "fn": "Philcoin.decimals",
      "offset": [
        11655,
        11732
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "530": {
      "fn": "Philcoin.decimals",
      "offset": [
        11655,
        11732
      ],
      "op": "DUP1",
      "path": "0"
    },
    "531": {
      "fn": "Philcoin.decimals",
      "offset": [
        11655,
        11732
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "532": {
      "fn": "Philcoin.decimals",
      "offset": [
        11655,
        11732
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xFF"
    },
    "534": {
      "fn": "Philcoin.decimals",
      "offset": [
        11655,
        11732
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "535": {
      "fn": "Philcoin.decimals",
      "offset": [
        11655,
        11732
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "536": {
      "fn": "Philcoin.decimals",
      "offset": [
        11655,
        11732
      ],
      "op": "AND",
      "path": "0"
    },
    "537": {
      "fn": "Philcoin.decimals",
      "offset": [
        11655,
        11732
      ],
      "op": "DUP3",
      "path": "0"
    },
    "538": {
      "fn": "Philcoin.decimals",
      "offset": [
        11655,
        11732
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "539": {
      "fn": "Philcoin.decimals",
      "offset": [
        11655,
        11732
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "540": {
      "fn": "Philcoin.decimals",
      "offset": [
        11655,
        11732
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "541": {
      "fn": "Philcoin.decimals",
      "offset": [
        11655,
        11732
      ],
      "op": "DUP2",
      "path": "0"
    },
    "542": {
      "fn": "Philcoin.decimals",
      "offset": [
        11655,
        11732
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "543": {
      "fn": "Philcoin.decimals",
      "offset": [
        11655,
        11732
      ],
      "op": "SUB",
      "path": "0"
    },
    "544": {
      "fn": "Philcoin.decimals",
      "offset": [
        11655,
        11732
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "546": {
      "fn": "Philcoin.decimals",
      "offset": [
        11655,
        11732
      ],
      "op": "ADD",
      "path": "0"
    },
    "547": {
      "fn": "Philcoin.decimals",
      "offset": [
        11655,
        11732
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "548": {
      "fn": "Philcoin.decimals",
      "offset": [
        11655,
        11732
      ],
      "op": "RETURN",
      "path": "0"
    },
    "549": {
      "fn": "Philcoin.increaseAllowance",
      "offset": [
        14136,
        14333
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "550": {
      "fn": "Philcoin.increaseAllowance",
      "offset": [
        14136,
        14333
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1A3"
    },
    "553": {
      "fn": "Philcoin.increaseAllowance",
      "offset": [
        14136,
        14333
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "555": {
      "fn": "Philcoin.increaseAllowance",
      "offset": [
        14136,
        14333
      ],
      "op": "DUP1",
      "path": "0"
    },
    "556": {
      "fn": "Philcoin.increaseAllowance",
      "offset": [
        14136,
        14333
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "557": {
      "fn": "Philcoin.increaseAllowance",
      "offset": [
        14136,
        14333
      ],
      "op": "SUB",
      "path": "0"
    },
    "558": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "560": {
      "op": "DUP2"
    },
    "561": {
      "op": "LT"
    },
    "562": {
      "op": "ISZERO"
    },
    "563": {
      "op": "PUSH2",
      "value": "0x23B"
    },
    "566": {
      "op": "JUMPI"
    },
    "567": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "569": {
      "op": "DUP1"
    },
    "570": {
      "op": "REVERT"
    },
    "571": {
      "op": "JUMPDEST"
    },
    "572": {
      "op": "POP"
    },
    "573": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "575": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "577": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "579": {
      "op": "SHL"
    },
    "580": {
      "op": "SUB"
    },
    "581": {
      "fn": "Philcoin.increaseAllowance",
      "offset": [
        14136,
        14333
      ],
      "op": "DUP2",
      "path": "0"
    },
    "582": {
      "fn": "Philcoin.increaseAllowance",
      "offset": [
        14136,
        14333
      ],
      "op": "CALLDATALOAD",
      "path": "0"
    },
    "583": {
      "fn": "Philcoin.increaseAllowance",
      "offset": [
        14136,
        14333
      ],
      "op": "AND",
      "path": "0"
    },
    "584": {
      "fn": "Philcoin.increaseAllowance",
      "offset": [
        14136,
        14333
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "585": {
      "fn": "Philcoin.increaseAllowance",
      "offset": [
        14136,
        14333
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "587": {
      "fn": "Philcoin.increaseAllowance",
      "offset": [
        14136,
        14333
      ],
      "op": "ADD",
      "path": "0"
    },
    "588": {
      "fn": "Philcoin.increaseAllowance",
      "offset": [
        14136,
        14333
      ],
      "op": "CALLDATALOAD",
      "path": "0"
    },
    "589": {
      "fn": "Philcoin.increaseAllowance",
      "offset": [
        14136,
        14333
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x4B0"
    },
    "592": {
      "fn": "Philcoin.increaseAllowance",
      "jump": "i",
      "offset": [
        14136,
        14333
      ],
      "op": "JUMP",
      "path": "0"
    },
    "593": {
      "fn": "Philcoin.balanceOf",
      "offset": [
        12175,
        12279
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "594": {
      "fn": "Philcoin.balanceOf",
      "offset": [
        12175,
        12279
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1BF"
    },
    "597": {
      "fn": "Philcoin.balanceOf",
      "offset": [
        12175,
        12279
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "599": {
      "fn": "Philcoin.balanceOf",
      "offset": [
        12175,
        12279
      ],
      "op": "DUP1",
      "path": "0"
    },
    "600": {
      "fn": "Philcoin.balanceOf",
      "offset": [
        12175,
        12279
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "601": {
      "fn": "Philcoin.balanceOf",
      "offset": [
        12175,
        12279
      ],
      "op": "SUB",
      "path": "0"
    },
    "602": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "604": {
      "op": "DUP2"
    },
    "605": {
      "op": "LT"
    },
    "606": {
      "op": "ISZERO"
    },
    "607": {
      "op": "PUSH2",
      "value": "0x267"
    },
    "610": {
      "op": "JUMPI"
    },
    "611": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "613": {
      "op": "DUP1"
    },
    "614": {
      "op": "REVERT"
    },
    "615": {
      "op": "JUMPDEST"
    },
    "616": {
      "op": "POP"
    },
    "617": {
      "fn": "Philcoin.balanceOf",
      "offset": [
        12175,
        12279
      ],
      "op": "CALLDATALOAD",
      "path": "0"
    },
    "618": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "620": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "622": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "624": {
      "op": "SHL"
    },
    "625": {
      "op": "SUB"
    },
    "626": {
      "fn": "Philcoin.balanceOf",
      "offset": [
        12175,
        12279
      ],
      "op": "AND",
      "path": "0"
    },
    "627": {
      "fn": "Philcoin.balanceOf",
      "offset": [
        12175,
        12279
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x504"
    },
    "630": {
      "fn": "Philcoin.balanceOf",
      "jump": "i",
      "offset": [
        12175,
        12279
      ],
      "op": "JUMP",
      "path": "0"
    },
    "631": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        10293,
        10420
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "632": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        10293,
        10420
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x27F"
    },
    "635": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        10293,
        10420
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x51F"
    },
    "638": {
      "fn": "Ownable.renounceOwnership",
      "jump": "i",
      "offset": [
        10293,
        10420
      ],
      "op": "JUMP",
      "path": "0"
    },
    "639": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        10293,
        10420
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "640": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        10293,
        10420
      ],
      "op": "STOP",
      "path": "0"
    },
    "641": {
      "fn": "Philcoin.getOwner",
      "offset": [
        11524,
        11601
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "642": {
      "fn": "Philcoin.getOwner",
      "offset": [
        11524,
        11601
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x289"
    },
    "645": {
      "fn": "Philcoin.getOwner",
      "offset": [
        11524,
        11601
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x5D3"
    },
    "648": {
      "fn": "Philcoin.getOwner",
      "jump": "i",
      "offset": [
        11524,
        11601
      ],
      "op": "JUMP",
      "path": "0"
    },
    "649": {
      "fn": "Philcoin.getOwner",
      "offset": [
        11524,
        11601
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "650": {
      "fn": "Philcoin.getOwner",
      "offset": [
        11524,
        11601
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "652": {
      "fn": "Philcoin.getOwner",
      "offset": [
        11524,
        11601
      ],
      "op": "DUP1",
      "path": "0"
    },
    "653": {
      "fn": "Philcoin.getOwner",
      "offset": [
        11524,
        11601
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "654": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "656": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "658": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "660": {
      "op": "SHL"
    },
    "661": {
      "op": "SUB"
    },
    "662": {
      "fn": "Philcoin.getOwner",
      "offset": [
        11524,
        11601
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "663": {
      "fn": "Philcoin.getOwner",
      "offset": [
        11524,
        11601
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "664": {
      "fn": "Philcoin.getOwner",
      "offset": [
        11524,
        11601
      ],
      "op": "AND",
      "path": "0"
    },
    "665": {
      "fn": "Philcoin.getOwner",
      "offset": [
        11524,
        11601
      ],
      "op": "DUP3",
      "path": "0"
    },
    "666": {
      "fn": "Philcoin.getOwner",
      "offset": [
        11524,
        11601
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "667": {
      "fn": "Philcoin.getOwner",
      "offset": [
        11524,
        11601
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "668": {
      "fn": "Philcoin.getOwner",
      "offset": [
        11524,
        11601
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "669": {
      "fn": "Philcoin.getOwner",
      "offset": [
        11524,
        11601
      ],
      "op": "DUP2",
      "path": "0"
    },
    "670": {
      "fn": "Philcoin.getOwner",
      "offset": [
        11524,
        11601
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "671": {
      "fn": "Philcoin.getOwner",
      "offset": [
        11524,
        11601
      ],
      "op": "SUB",
      "path": "0"
    },
    "672": {
      "fn": "Philcoin.getOwner",
      "offset": [
        11524,
        11601
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "674": {
      "fn": "Philcoin.getOwner",
      "offset": [
        11524,
        11601
      ],
      "op": "ADD",
      "path": "0"
    },
    "675": {
      "fn": "Philcoin.getOwner",
      "offset": [
        11524,
        11601
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "676": {
      "fn": "Philcoin.getOwner",
      "offset": [
        11524,
        11601
      ],
      "op": "RETURN",
      "path": "0"
    },
    "677": {
      "fn": "Ownable.owner",
      "offset": [
        9710,
        9781
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "678": {
      "fn": "Ownable.owner",
      "offset": [
        9710,
        9781
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x289"
    },
    "681": {
      "fn": "Ownable.owner",
      "offset": [
        9710,
        9781
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x5E2"
    },
    "684": {
      "fn": "Ownable.owner",
      "jump": "i",
      "offset": [
        9710,
        9781
      ],
      "op": "JUMP",
      "path": "0"
    },
    "685": {
      "fn": "Philcoin.symbol",
      "offset": [
        11784,
        11865
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "686": {
      "fn": "Philcoin.symbol",
      "offset": [
        11784,
        11865
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x102"
    },
    "689": {
      "fn": "Philcoin.symbol",
      "offset": [
        11784,
        11865
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x5F1"
    },
    "692": {
      "fn": "Philcoin.symbol",
      "jump": "i",
      "offset": [
        11784,
        11865
      ],
      "op": "JUMP",
      "path": "0"
    },
    "693": {
      "fn": "Philcoin.decreaseAllowance",
      "offset": [
        14789,
        15037
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "694": {
      "fn": "Philcoin.decreaseAllowance",
      "offset": [
        14789,
        15037
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1A3"
    },
    "697": {
      "fn": "Philcoin.decreaseAllowance",
      "offset": [
        14789,
        15037
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "699": {
      "fn": "Philcoin.decreaseAllowance",
      "offset": [
        14789,
        15037
      ],
      "op": "DUP1",
      "path": "0"
    },
    "700": {
      "fn": "Philcoin.decreaseAllowance",
      "offset": [
        14789,
        15037
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "701": {
      "fn": "Philcoin.decreaseAllowance",
      "offset": [
        14789,
        15037
      ],
      "op": "SUB",
      "path": "0"
    },
    "702": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "704": {
      "op": "DUP2"
    },
    "705": {
      "op": "LT"
    },
    "706": {
      "op": "ISZERO"
    },
    "707": {
      "op": "PUSH2",
      "value": "0x2CB"
    },
    "710": {
      "op": "JUMPI"
    },
    "711": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "713": {
      "op": "DUP1"
    },
    "714": {
      "op": "REVERT"
    },
    "715": {
      "op": "JUMPDEST"
    },
    "716": {
      "op": "POP"
    },
    "717": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "719": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "721": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "723": {
      "op": "SHL"
    },
    "724": {
      "op": "SUB"
    },
    "725": {
      "fn": "Philcoin.decreaseAllowance",
      "offset": [
        14789,
        15037
      ],
      "op": "DUP2",
      "path": "0"
    },
    "726": {
      "fn": "Philcoin.decreaseAllowance",
      "offset": [
        14789,
        15037
      ],
      "op": "CALLDATALOAD",
      "path": "0"
    },
    "727": {
      "fn": "Philcoin.decreaseAllowance",
      "offset": [
        14789,
        15037
      ],
      "op": "AND",
      "path": "0"
    },
    "728": {
      "fn": "Philcoin.decreaseAllowance",
      "offset": [
        14789,
        15037
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "729": {
      "fn": "Philcoin.decreaseAllowance",
      "offset": [
        14789,
        15037
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "731": {
      "fn": "Philcoin.decreaseAllowance",
      "offset": [
        14789,
        15037
      ],
      "op": "ADD",
      "path": "0"
    },
    "732": {
      "fn": "Philcoin.decreaseAllowance",
      "offset": [
        14789,
        15037
      ],
      "op": "CALLDATALOAD",
      "path": "0"
    },
    "733": {
      "fn": "Philcoin.decreaseAllowance",
      "offset": [
        14789,
        15037
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x652"
    },
    "736": {
      "fn": "Philcoin.decreaseAllowance",
      "jump": "i",
      "offset": [
        14789,
        15037
      ],
      "op": "JUMP",
      "path": "0"
    },
    "737": {
      "fn": "Philcoin.transfer",
      "offset": [
        12463,
        12610
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "738": {
      "fn": "Philcoin.transfer",
      "offset": [
        12463,
        12610
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1A3"
    },
    "741": {
      "fn": "Philcoin.transfer",
      "offset": [
        12463,
        12610
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "743": {
      "fn": "Philcoin.transfer",
      "offset": [
        12463,
        12610
      ],
      "op": "DUP1",
      "path": "0"
    },
    "744": {
      "fn": "Philcoin.transfer",
      "offset": [
        12463,
        12610
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "745": {
      "fn": "Philcoin.transfer",
      "offset": [
        12463,
        12610
      ],
      "op": "SUB",
      "path": "0"
    },
    "746": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "748": {
      "op": "DUP2"
    },
    "749": {
      "op": "LT"
    },
    "750": {
      "op": "ISZERO"
    },
    "751": {
      "op": "PUSH2",
      "value": "0x2F7"
    },
    "754": {
      "op": "JUMPI"
    },
    "755": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "757": {
      "op": "DUP1"
    },
    "758": {
      "op": "REVERT"
    },
    "759": {
      "op": "JUMPDEST"
    },
    "760": {
      "op": "POP"
    },
    "761": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "763": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "765": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "767": {
      "op": "SHL"
    },
    "768": {
      "op": "SUB"
    },
    "769": {
      "fn": "Philcoin.transfer",
      "offset": [
        12463,
        12610
      ],
      "op": "DUP2",
      "path": "0"
    },
    "770": {
      "fn": "Philcoin.transfer",
      "offset": [
        12463,
        12610
      ],
      "op": "CALLDATALOAD",
      "path": "0"
    },
    "771": {
      "fn": "Philcoin.transfer",
      "offset": [
        12463,
        12610
      ],
      "op": "AND",
      "path": "0"
    },
    "772": {
      "fn": "Philcoin.transfer",
      "offset": [
        12463,
        12610
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "773": {
      "fn": "Philcoin.transfer",
      "offset": [
        12463,
        12610
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "775": {
      "fn": "Philcoin.transfer",
      "offset": [
        12463,
        12610
      ],
      "op": "ADD",
      "path": "0"
    },
    "776": {
      "fn": "Philcoin.transfer",
      "offset": [
        12463,
        12610
      ],
      "op": "CALLDATALOAD",
      "path": "0"
    },
    "777": {
      "fn": "Philcoin.transfer",
      "offset": [
        12463,
        12610
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x6C0"
    },
    "780": {
      "fn": "Philcoin.transfer",
      "jump": "i",
      "offset": [
        12463,
        12610
      ],
      "op": "JUMP",
      "path": "0"
    },
    "781": {
      "fn": "Philcoin.allowance",
      "offset": [
        12659,
        12787
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "782": {
      "fn": "Philcoin.allowance",
      "offset": [
        12659,
        12787
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1BF"
    },
    "785": {
      "fn": "Philcoin.allowance",
      "offset": [
        12659,
        12787
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "787": {
      "fn": "Philcoin.allowance",
      "offset": [
        12659,
        12787
      ],
      "op": "DUP1",
      "path": "0"
    },
    "788": {
      "fn": "Philcoin.allowance",
      "offset": [
        12659,
        12787
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "789": {
      "fn": "Philcoin.allowance",
      "offset": [
        12659,
        12787
      ],
      "op": "SUB",
      "path": "0"
    },
    "790": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "792": {
      "op": "DUP2"
    },
    "793": {
      "op": "LT"
    },
    "794": {
      "op": "ISZERO"
    },
    "795": {
      "op": "PUSH2",
      "value": "0x323"
    },
    "798": {
      "op": "JUMPI"
    },
    "799": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "801": {
      "op": "DUP1"
    },
    "802": {
      "op": "REVERT"
    },
    "803": {
      "op": "JUMPDEST"
    },
    "804": {
      "op": "POP"
    },
    "805": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "807": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "809": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "811": {
      "op": "SHL"
    },
    "812": {
      "op": "SUB"
    },
    "813": {
      "fn": "Philcoin.allowance",
      "offset": [
        12659,
        12787
      ],
      "op": "DUP2",
      "path": "0"
    },
    "814": {
      "fn": "Philcoin.allowance",
      "offset": [
        12659,
        12787
      ],
      "op": "CALLDATALOAD",
      "path": "0"
    },
    "815": {
      "fn": "Philcoin.allowance",
      "offset": [
        12659,
        12787
      ],
      "op": "DUP2",
      "path": "0"
    },
    "816": {
      "fn": "Philcoin.allowance",
      "offset": [
        12659,
        12787
      ],
      "op": "AND",
      "path": "0"
    },
    "817": {
      "fn": "Philcoin.allowance",
      "offset": [
        12659,
        12787
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "818": {
      "fn": "Philcoin.allowance",
      "offset": [
        12659,
        12787
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "820": {
      "fn": "Philcoin.allowance",
      "offset": [
        12659,
        12787
      ],
      "op": "ADD",
      "path": "0"
    },
    "821": {
      "fn": "Philcoin.allowance",
      "offset": [
        12659,
        12787
      ],
      "op": "CALLDATALOAD",
      "path": "0"
    },
    "822": {
      "fn": "Philcoin.allowance",
      "offset": [
        12659,
        12787
      ],
      "op": "AND",
      "path": "0"
    },
    "823": {
      "fn": "Philcoin.allowance",
      "offset": [
        12659,
        12787
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x6D4"
    },
    "826": {
      "fn": "Philcoin.allowance",
      "jump": "i",
      "offset": [
        12659,
        12787
      ],
      "op": "JUMP",
      "path": "0"
    },
    "827": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        10559,
        10660
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "828": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        10559,
        10660
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x27F"
    },
    "831": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        10559,
        10660
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "833": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        10559,
        10660
      ],
      "op": "DUP1",
      "path": "0"
    },
    "834": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        10559,
        10660
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "835": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        10559,
        10660
      ],
      "op": "SUB",
      "path": "0"
    },
    "836": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "838": {
      "op": "DUP2"
    },
    "839": {
      "op": "LT"
    },
    "840": {
      "op": "ISZERO"
    },
    "841": {
      "op": "PUSH2",
      "value": "0x351"
    },
    "844": {
      "op": "JUMPI"
    },
    "845": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "847": {
      "op": "DUP1"
    },
    "848": {
      "op": "REVERT"
    },
    "849": {
      "op": "JUMPDEST"
    },
    "850": {
      "op": "POP"
    },
    "851": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        10559,
        10660
      ],
      "op": "CALLDATALOAD",
      "path": "0"
    },
    "852": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "854": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "856": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "858": {
      "op": "SHL"
    },
    "859": {
      "op": "SUB"
    },
    "860": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        10559,
        10660
      ],
      "op": "AND",
      "path": "0"
    },
    "861": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        10559,
        10660
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x6FF"
    },
    "864": {
      "fn": "Ownable.transferOwnership",
      "jump": "i",
      "offset": [
        10559,
        10660
      ],
      "op": "JUMP",
      "path": "0"
    },
    "865": {
      "fn": "Philcoin.name",
      "offset": [
        11913,
        11990
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "866": {
      "fn": "Philcoin.name",
      "offset": [
        11980,
        11985
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 0,
      "value": "0x6"
    },
    "868": {
      "fn": "Philcoin.name",
      "offset": [
        11973,
        11985
      ],
      "op": "DUP1",
      "path": "0"
    },
    "869": {
      "fn": "Philcoin.name",
      "offset": [
        11973,
        11985
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "870": {
      "fn": "Philcoin.name",
      "offset": [
        11973,
        11985
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "872": {
      "fn": "Philcoin.name",
      "offset": [
        11973,
        11985
      ],
      "op": "DUP1",
      "path": "0"
    },
    "873": {
      "fn": "Philcoin.name",
      "offset": [
        11973,
        11985
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "874": {
      "fn": "Philcoin.name",
      "offset": [
        11973,
        11985
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "876": {
      "fn": "Philcoin.name",
      "offset": [
        11973,
        11985
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "878": {
      "fn": "Philcoin.name",
      "offset": [
        11973,
        11985
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2"
    },
    "880": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "882": {
      "op": "NOT"
    },
    "883": {
      "fn": "Philcoin.name",
      "offset": [
        11973,
        11985
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x100"
    },
    "886": {
      "fn": "Philcoin.name",
      "offset": [
        11973,
        11985
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "888": {
      "fn": "Philcoin.name",
      "offset": [
        11973,
        11985
      ],
      "op": "DUP9",
      "path": "0"
    },
    "889": {
      "fn": "Philcoin.name",
      "offset": [
        11973,
        11985
      ],
      "op": "AND",
      "path": "0"
    },
    "890": {
      "fn": "Philcoin.name",
      "offset": [
        11973,
        11985
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "891": {
      "fn": "Philcoin.name",
      "offset": [
        11973,
        11985
      ],
      "op": "MUL",
      "path": "0"
    },
    "892": {
      "fn": "Philcoin.name",
      "offset": [
        11973,
        11985
      ],
      "op": "ADD",
      "path": "0"
    },
    "893": {
      "fn": "Philcoin.name",
      "offset": [
        11973,
        11985
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "894": {
      "fn": "Philcoin.name",
      "offset": [
        11973,
        11985
      ],
      "op": "SWAP6",
      "path": "0"
    },
    "895": {
      "fn": "Philcoin.name",
      "offset": [
        11973,
        11985
      ],
      "op": "AND",
      "path": "0"
    },
    "896": {
      "fn": "Philcoin.name",
      "offset": [
        11973,
        11985
      ],
      "op": "SWAP5",
      "path": "0"
    },
    "897": {
      "fn": "Philcoin.name",
      "offset": [
        11973,
        11985
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "898": {
      "fn": "Philcoin.name",
      "offset": [
        11973,
        11985
      ],
      "op": "SWAP5",
      "path": "0"
    },
    "899": {
      "fn": "Philcoin.name",
      "offset": [
        11973,
        11985
      ],
      "op": "DIV",
      "path": "0"
    },
    "900": {
      "fn": "Philcoin.name",
      "offset": [
        11973,
        11985
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "901": {
      "fn": "Philcoin.name",
      "offset": [
        11973,
        11985
      ],
      "op": "DUP5",
      "path": "0"
    },
    "902": {
      "fn": "Philcoin.name",
      "offset": [
        11973,
        11985
      ],
      "op": "ADD",
      "path": "0"
    },
    "903": {
      "fn": "Philcoin.name",
      "offset": [
        11973,
        11985
      ],
      "op": "DUP2",
      "path": "0"
    },
    "904": {
      "fn": "Philcoin.name",
      "offset": [
        11973,
        11985
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "905": {
      "fn": "Philcoin.name",
      "offset": [
        11973,
        11985
      ],
      "op": "DIV",
      "path": "0"
    },
    "906": {
      "fn": "Philcoin.name",
      "offset": [
        11973,
        11985
      ],
      "op": "DUP2",
      "path": "0"
    },
    "907": {
      "fn": "Philcoin.name",
      "offset": [
        11973,
        11985
      ],
      "op": "MUL",
      "path": "0"
    },
    "908": {
      "fn": "Philcoin.name",
      "offset": [
        11973,
        11985
      ],
      "op": "DUP3",
      "path": "0"
    },
    "909": {
      "fn": "Philcoin.name",
      "offset": [
        11973,
        11985
      ],
      "op": "ADD",
      "path": "0"
    },
    "910": {
      "fn": "Philcoin.name",
      "offset": [
        11973,
        11985
      ],
      "op": "DUP2",
      "path": "0"
    },
    "911": {
      "fn": "Philcoin.name",
      "offset": [
        11973,
        11985
      ],
      "op": "ADD",
      "path": "0"
    },
    "912": {
      "fn": "Philcoin.name",
      "offset": [
        11973,
        11985
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "913": {
      "fn": "Philcoin.name",
      "offset": [
        11973,
        11985
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "914": {
      "fn": "Philcoin.name",
      "offset": [
        11973,
        11985
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "915": {
      "fn": "Philcoin.name",
      "offset": [
        11973,
        11985
      ],
      "op": "DUP3",
      "path": "0"
    },
    "916": {
      "fn": "Philcoin.name",
      "offset": [
        11973,
        11985
      ],
      "op": "DUP2",
      "path": "0"
    },
    "917": {
      "fn": "Philcoin.name",
      "offset": [
        11973,
        11985
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "918": {
      "fn": "Philcoin.name",
      "offset": [
        11952,
        11965
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x60"
    },
    "920": {
      "fn": "Philcoin.name",
      "offset": [
        11952,
        11965
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "921": {
      "fn": "Philcoin.name",
      "offset": [
        11973,
        11985
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "922": {
      "fn": "Philcoin.name",
      "offset": [
        11973,
        11985
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "923": {
      "fn": "Philcoin.name",
      "offset": [
        11980,
        11985
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "924": {
      "fn": "Philcoin.name",
      "offset": [
        11980,
        11985
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "925": {
      "fn": "Philcoin.name",
      "offset": [
        11973,
        11985
      ],
      "op": "DUP4",
      "path": "0"
    },
    "926": {
      "fn": "Philcoin.name",
      "offset": [
        11973,
        11985
      ],
      "op": "ADD",
      "path": "0"
    },
    "927": {
      "fn": "Philcoin.name",
      "offset": [
        11980,
        11985
      ],
      "op": "DUP3",
      "path": "0"
    },
    "928": {
      "fn": "Philcoin.name",
      "offset": [
        11973,
        11985
      ],
      "op": "DUP3",
      "path": "0"
    },
    "929": {
      "fn": "Philcoin.name",
      "offset": [
        11973,
        11985
      ],
      "op": "DUP1",
      "path": "0"
    },
    "930": {
      "fn": "Philcoin.name",
      "offset": [
        11973,
        11985
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "931": {
      "fn": "Philcoin.name",
      "offset": [
        11973,
        11985
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3ED"
    },
    "934": {
      "fn": "Philcoin.name",
      "offset": [
        11973,
        11985
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "935": {
      "fn": "Philcoin.name",
      "offset": [
        11973,
        11985
      ],
      "op": "DUP1",
      "path": "0"
    },
    "936": {
      "fn": "Philcoin.name",
      "offset": [
        11973,
        11985
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "938": {
      "fn": "Philcoin.name",
      "offset": [
        11973,
        11985
      ],
      "op": "LT",
      "path": "0"
    },
    "939": {
      "fn": "Philcoin.name",
      "offset": [
        11973,
        11985
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3C2"
    },
    "942": {
      "fn": "Philcoin.name",
      "offset": [
        11973,
        11985
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "943": {
      "fn": "Philcoin.name",
      "offset": [
        11973,
        11985
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x100"
    },
    "946": {
      "fn": "Philcoin.name",
      "offset": [
        11973,
        11985
      ],
      "op": "DUP1",
      "path": "0"
    },
    "947": {
      "fn": "Philcoin.name",
      "offset": [
        11973,
        11985
      ],
      "op": "DUP4",
      "path": "0"
    },
    "948": {
      "fn": "Philcoin.name",
      "offset": [
        11973,
        11985
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "949": {
      "fn": "Philcoin.name",
      "offset": [
        11973,
        11985
      ],
      "op": "DIV",
      "path": "0"
    },
    "950": {
      "fn": "Philcoin.name",
      "offset": [
        11973,
        11985
      ],
      "op": "MUL",
      "path": "0"
    },
    "951": {
      "fn": "Philcoin.name",
      "offset": [
        11973,
        11985
      ],
      "op": "DUP4",
      "path": "0"
    },
    "952": {
      "fn": "Philcoin.name",
      "offset": [
        11973,
        11985
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "953": {
      "fn": "Philcoin.name",
      "offset": [
        11973,
        11985
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "954": {
      "fn": "Philcoin.name",
      "offset": [
        11973,
        11985
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "956": {
      "fn": "Philcoin.name",
      "offset": [
        11973,
        11985
      ],
      "op": "ADD",
      "path": "0"
    },
    "957": {
      "fn": "Philcoin.name",
      "offset": [
        11973,
        11985
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "958": {
      "fn": "Philcoin.name",
      "offset": [
        11973,
        11985
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3ED"
    },
    "961": {
      "fn": "Philcoin.name",
      "offset": [
        11973,
        11985
      ],
      "op": "JUMP",
      "path": "0"
    },
    "962": {
      "fn": "Philcoin.name",
      "offset": [
        11973,
        11985
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "963": {
      "fn": "Philcoin.name",
      "offset": [
        11973,
        11985
      ],
      "op": "DUP3",
      "path": "0"
    },
    "964": {
      "fn": "Philcoin.name",
      "offset": [
        11973,
        11985
      ],
      "op": "ADD",
      "path": "0"
    },
    "965": {
      "fn": "Philcoin.name",
      "offset": [
        11973,
        11985
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "966": {
      "fn": "Philcoin.name",
      "offset": [
        11973,
        11985
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "967": {
      "fn": "Philcoin.name",
      "offset": [
        11973,
        11985
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "969": {
      "fn": "Philcoin.name",
      "offset": [
        11973,
        11985
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "970": {
      "fn": "Philcoin.name",
      "offset": [
        11973,
        11985
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "972": {
      "fn": "Philcoin.name",
      "offset": [
        11973,
        11985
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "974": {
      "fn": "Philcoin.name",
      "offset": [
        11973,
        11985
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "975": {
      "fn": "Philcoin.name",
      "offset": [
        11973,
        11985
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "976": {
      "fn": "Philcoin.name",
      "offset": [
        11973,
        11985
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "977": {
      "fn": "Philcoin.name",
      "offset": [
        11973,
        11985
      ],
      "op": "DUP2",
      "path": "0"
    },
    "978": {
      "fn": "Philcoin.name",
      "offset": [
        11973,
        11985
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "979": {
      "fn": "Philcoin.name",
      "offset": [
        11973,
        11985
      ],
      "op": "DUP2",
      "path": "0"
    },
    "980": {
      "fn": "Philcoin.name",
      "offset": [
        11973,
        11985
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "981": {
      "fn": "Philcoin.name",
      "offset": [
        11973,
        11985
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "982": {
      "fn": "Philcoin.name",
      "offset": [
        11973,
        11985
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "984": {
      "fn": "Philcoin.name",
      "offset": [
        11973,
        11985
      ],
      "op": "ADD",
      "path": "0"
    },
    "985": {
      "fn": "Philcoin.name",
      "offset": [
        11973,
        11985
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "986": {
      "fn": "Philcoin.name",
      "offset": [
        11973,
        11985
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "988": {
      "fn": "Philcoin.name",
      "offset": [
        11973,
        11985
      ],
      "op": "ADD",
      "path": "0"
    },
    "989": {
      "fn": "Philcoin.name",
      "offset": [
        11973,
        11985
      ],
      "op": "DUP1",
      "path": "0"
    },
    "990": {
      "fn": "Philcoin.name",
      "offset": [
        11973,
        11985
      ],
      "op": "DUP4",
      "path": "0"
    },
    "991": {
      "fn": "Philcoin.name",
      "offset": [
        11973,
        11985
      ],
      "op": "GT",
      "path": "0"
    },
    "992": {
      "fn": "Philcoin.name",
      "offset": [
        11973,
        11985
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3D0"
    },
    "995": {
      "fn": "Philcoin.name",
      "offset": [
        11973,
        11985
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "996": {
      "fn": "Philcoin.name",
      "offset": [
        11973,
        11985
      ],
      "op": "DUP3",
      "path": "0"
    },
    "997": {
      "fn": "Philcoin.name",
      "offset": [
        11973,
        11985
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "998": {
      "fn": "Philcoin.name",
      "offset": [
        11973,
        11985
      ],
      "op": "SUB",
      "path": "0"
    },
    "999": {
      "fn": "Philcoin.name",
      "offset": [
        11973,
        11985
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "1001": {
      "fn": "Philcoin.name",
      "offset": [
        11973,
        11985
      ],
      "op": "AND",
      "path": "0"
    },
    "1002": {
      "fn": "Philcoin.name",
      "offset": [
        11973,
        11985
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1003": {
      "fn": "Philcoin.name",
      "offset": [
        11973,
        11985
      ],
      "op": "ADD",
      "path": "0"
    },
    "1004": {
      "fn": "Philcoin.name",
      "offset": [
        11973,
        11985
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1005": {
      "fn": "Philcoin.name",
      "offset": [
        11973,
        11985
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1006": {
      "fn": "Philcoin.name",
      "offset": [
        11973,
        11985
      ],
      "op": "POP",
      "path": "0"
    },
    "1007": {
      "fn": "Philcoin.name",
      "offset": [
        11973,
        11985
      ],
      "op": "POP",
      "path": "0"
    },
    "1008": {
      "fn": "Philcoin.name",
      "offset": [
        11973,
        11985
      ],
      "op": "POP",
      "path": "0"
    },
    "1009": {
      "fn": "Philcoin.name",
      "offset": [
        11973,
        11985
      ],
      "op": "POP",
      "path": "0"
    },
    "1010": {
      "fn": "Philcoin.name",
      "offset": [
        11973,
        11985
      ],
      "op": "POP",
      "path": "0"
    },
    "1011": {
      "fn": "Philcoin.name",
      "offset": [
        11973,
        11985
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1012": {
      "fn": "Philcoin.name",
      "offset": [
        11973,
        11985
      ],
      "op": "POP",
      "path": "0"
    },
    "1013": {
      "fn": "Philcoin.name",
      "offset": [
        11913,
        11990
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1014": {
      "fn": "Philcoin.name",
      "jump": "o",
      "offset": [
        11913,
        11990
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1015": {
      "fn": "Philcoin.approve",
      "offset": [
        12908,
        13049
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1016": {
      "fn": "Philcoin.approve",
      "offset": [
        12976,
        12980
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1018": {
      "fn": "Philcoin.approve",
      "offset": [
        12988,
        13027
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 1,
      "value": "0x40B"
    },
    "1021": {
      "fn": "Philcoin.approve",
      "offset": [
        12997,
        13009
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x404"
    },
    "1024": {
      "fn": "Philcoin.approve",
      "offset": [
        12997,
        13007
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x775"
    },
    "1027": {
      "fn": "Philcoin.approve",
      "jump": "i",
      "offset": [
        12997,
        13009
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1028": {
      "fn": "Philcoin.approve",
      "offset": [
        12997,
        13009
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1029": {
      "fn": "Philcoin.approve",
      "offset": [
        13011,
        13018
      ],
      "op": "DUP5",
      "path": "0"
    },
    "1030": {
      "fn": "Philcoin.approve",
      "offset": [
        13020,
        13026
      ],
      "op": "DUP5",
      "path": "0"
    },
    "1031": {
      "fn": "Philcoin.approve",
      "offset": [
        12988,
        12996
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x779"
    },
    "1034": {
      "fn": "Philcoin.approve",
      "jump": "i",
      "offset": [
        12988,
        13027
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1035": {
      "fn": "Philcoin.approve",
      "offset": [
        12988,
        13027
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1036": {
      "op": "POP"
    },
    "1037": {
      "fn": "Philcoin.approve",
      "offset": [
        13040,
        13044
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 2,
      "value": "0x1"
    },
    "1039": {
      "fn": "Philcoin.approve",
      "offset": [
        12908,
        13049
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "1040": {
      "fn": "Philcoin.approve",
      "offset": [
        12908,
        13049
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1041": {
      "fn": "Philcoin.approve",
      "offset": [
        12908,
        13049
      ],
      "op": "POP",
      "path": "0"
    },
    "1042": {
      "fn": "Philcoin.approve",
      "offset": [
        12908,
        13049
      ],
      "op": "POP",
      "path": "0"
    },
    "1043": {
      "fn": "Philcoin.approve",
      "jump": "o",
      "offset": [
        12908,
        13049
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1044": {
      "fn": "Philcoin.totalSupply",
      "offset": [
        12041,
        12126
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1045": {
      "fn": "Philcoin.totalSupply",
      "offset": [
        12109,
        12121
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 3,
      "value": "0x3"
    },
    "1047": {
      "fn": "Philcoin.totalSupply",
      "offset": [
        12109,
        12121
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1048": {
      "fn": "Philcoin.totalSupply",
      "offset": [
        12041,
        12126
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1049": {
      "fn": "Philcoin.totalSupply",
      "jump": "o",
      "offset": [
        12041,
        12126
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1050": {
      "fn": "Philcoin.transferFrom",
      "offset": [
        13480,
        13768
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1051": {
      "fn": "Philcoin.transferFrom",
      "offset": [
        13571,
        13575
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1053": {
      "fn": "Philcoin.transferFrom",
      "offset": [
        13583,
        13619
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 4,
      "value": "0x427"
    },
    "1056": {
      "fn": "Philcoin.transferFrom",
      "offset": [
        13593,
        13599
      ],
      "op": "DUP5",
      "path": "0"
    },
    "1057": {
      "fn": "Philcoin.transferFrom",
      "offset": [
        13601,
        13610
      ],
      "op": "DUP5",
      "path": "0"
    },
    "1058": {
      "fn": "Philcoin.transferFrom",
      "offset": [
        13612,
        13618
      ],
      "op": "DUP5",
      "path": "0"
    },
    "1059": {
      "fn": "Philcoin.transferFrom",
      "offset": [
        13583,
        13592
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x865"
    },
    "1062": {
      "fn": "Philcoin.transferFrom",
      "jump": "i",
      "offset": [
        13583,
        13619
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1063": {
      "fn": "Philcoin.transferFrom",
      "offset": [
        13583,
        13619
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1064": {
      "fn": "Philcoin.transferFrom",
      "offset": [
        13625,
        13746
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 5,
      "value": "0x49D"
    },
    "1067": {
      "fn": "Philcoin.transferFrom",
      "offset": [
        13634,
        13640
      ],
      "op": "DUP5",
      "path": "0"
    },
    "1068": {
      "fn": "Philcoin.transferFrom",
      "offset": [
        13642,
        13654
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x433"
    },
    "1071": {
      "fn": "Philcoin.transferFrom",
      "offset": [
        13642,
        13652
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x775"
    },
    "1074": {
      "fn": "Philcoin.transferFrom",
      "jump": "i",
      "offset": [
        13642,
        13654
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1075": {
      "fn": "Philcoin.transferFrom",
      "offset": [
        13642,
        13654
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1076": {
      "fn": "Philcoin.transferFrom",
      "offset": [
        13656,
        13745
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x498"
    },
    "1079": {
      "fn": "Philcoin.transferFrom",
      "offset": [
        13694,
        13700
      ],
      "op": "DUP6",
      "path": "0"
    },
    "1080": {
      "fn": "Philcoin.transferFrom",
      "offset": [
        13656,
        13745
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1082": {
      "fn": "Philcoin.transferFrom",
      "offset": [
        13656,
        13745
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1083": {
      "fn": "Philcoin.transferFrom",
      "offset": [
        13656,
        13745
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1084": {
      "fn": "Philcoin.transferFrom",
      "offset": [
        13656,
        13745
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x60"
    },
    "1086": {
      "fn": "Philcoin.transferFrom",
      "offset": [
        13656,
        13745
      ],
      "op": "ADD",
      "path": "0"
    },
    "1087": {
      "fn": "Philcoin.transferFrom",
      "offset": [
        13656,
        13745
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1089": {
      "fn": "Philcoin.transferFrom",
      "offset": [
        13656,
        13745
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1090": {
      "fn": "Philcoin.transferFrom",
      "offset": [
        13656,
        13745
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1091": {
      "fn": "Philcoin.transferFrom",
      "offset": [
        13656,
        13745
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x28"
    },
    "1093": {
      "fn": "Philcoin.transferFrom",
      "offset": [
        13656,
        13745
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1094": {
      "fn": "Philcoin.transferFrom",
      "offset": [
        13656,
        13745
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1095": {
      "fn": "Philcoin.transferFrom",
      "offset": [
        13656,
        13745
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1097": {
      "fn": "Philcoin.transferFrom",
      "offset": [
        13656,
        13745
      ],
      "op": "ADD",
      "path": "0"
    },
    "1098": {
      "fn": "Philcoin.transferFrom",
      "offset": [
        13656,
        13745
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xBCB"
    },
    "1101": {
      "fn": "Philcoin.transferFrom",
      "offset": [
        13656,
        13745
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x28"
    },
    "1103": {
      "fn": "Philcoin.transferFrom",
      "offset": [
        13656,
        13745
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1104": {
      "fn": "Philcoin.transferFrom",
      "offset": [
        13656,
        13745
      ],
      "op": "CODECOPY",
      "path": "0"
    },
    "1105": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1107": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1109": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1111": {
      "op": "SHL"
    },
    "1112": {
      "op": "SUB"
    },
    "1113": {
      "fn": "Philcoin.transferFrom",
      "offset": [
        13656,
        13675
      ],
      "op": "DUP11",
      "path": "0"
    },
    "1114": {
      "fn": "Philcoin.transferFrom",
      "offset": [
        13656,
        13675
      ],
      "op": "AND",
      "path": "0"
    },
    "1115": {
      "fn": "Philcoin.transferFrom",
      "offset": [
        13656,
        13675
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1117": {
      "fn": "Philcoin.transferFrom",
      "offset": [
        13656,
        13675
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1118": {
      "fn": "Philcoin.transferFrom",
      "offset": [
        13656,
        13675
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1119": {
      "fn": "Philcoin.transferFrom",
      "offset": [
        13656,
        13675
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1120": {
      "fn": "Philcoin.transferFrom",
      "offset": [
        13656,
        13667
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2"
    },
    "1122": {
      "fn": "Philcoin.transferFrom",
      "offset": [
        13656,
        13675
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1124": {
      "fn": "Philcoin.transferFrom",
      "offset": [
        13656,
        13675
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1125": {
      "fn": "Philcoin.transferFrom",
      "offset": [
        13656,
        13675
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1127": {
      "fn": "Philcoin.transferFrom",
      "offset": [
        13656,
        13675
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1128": {
      "fn": "Philcoin.transferFrom",
      "offset": [
        13656,
        13675
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "1129": {
      "fn": "Philcoin.transferFrom",
      "offset": [
        13656,
        13675
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1130": {
      "fn": "Philcoin.transferFrom",
      "offset": [
        13676,
        13688
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x471"
    },
    "1133": {
      "fn": "Philcoin.transferFrom",
      "offset": [
        13676,
        13686
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x775"
    },
    "1136": {
      "fn": "Philcoin.transferFrom",
      "jump": "i",
      "offset": [
        13676,
        13688
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1137": {
      "fn": "Philcoin.transferFrom",
      "offset": [
        13676,
        13688
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1138": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1140": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1142": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1144": {
      "op": "SHL"
    },
    "1145": {
      "op": "SUB"
    },
    "1146": {
      "fn": "Philcoin.transferFrom",
      "offset": [
        13656,
        13689
      ],
      "op": "AND",
      "path": "0"
    },
    "1147": {
      "fn": "Philcoin.transferFrom",
      "offset": [
        13656,
        13689
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1148": {
      "fn": "Philcoin.transferFrom",
      "offset": [
        13656,
        13689
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1149": {
      "fn": "Philcoin.transferFrom",
      "offset": [
        13656,
        13689
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1151": {
      "fn": "Philcoin.transferFrom",
      "offset": [
        13656,
        13689
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1152": {
      "fn": "Philcoin.transferFrom",
      "offset": [
        13656,
        13689
      ],
      "op": "ADD",
      "path": "0"
    },
    "1153": {
      "fn": "Philcoin.transferFrom",
      "offset": [
        13656,
        13689
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1154": {
      "fn": "Philcoin.transferFrom",
      "offset": [
        13656,
        13689
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1155": {
      "fn": "Philcoin.transferFrom",
      "offset": [
        13656,
        13689
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1156": {
      "fn": "Philcoin.transferFrom",
      "offset": [
        13656,
        13689
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1157": {
      "fn": "Philcoin.transferFrom",
      "offset": [
        13656,
        13689
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1159": {
      "fn": "Philcoin.transferFrom",
      "offset": [
        13656,
        13689
      ],
      "op": "ADD",
      "path": "0"
    },
    "1160": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1162": {
      "fn": "Philcoin.transferFrom",
      "offset": [
        13656,
        13689
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "1163": {
      "fn": "Philcoin.transferFrom",
      "offset": [
        13656,
        13689
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1164": {
      "fn": "Philcoin.transferFrom",
      "offset": [
        13656,
        13689
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1165": {
      "fn": "Philcoin.transferFrom",
      "offset": [
        13656,
        13745
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1166": {
      "fn": "Philcoin.transferFrom",
      "offset": [
        13656,
        13745
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xFFFFFFFF"
    },
    "1171": {
      "fn": "Philcoin.transferFrom",
      "offset": [
        13656,
        13693
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x9C3"
    },
    "1174": {
      "fn": "Philcoin.transferFrom",
      "offset": [
        13656,
        13745
      ],
      "op": "AND",
      "path": "0"
    },
    "1175": {
      "fn": "Philcoin.transferFrom",
      "jump": "i",
      "offset": [
        13656,
        13745
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1176": {
      "fn": "Philcoin.transferFrom",
      "offset": [
        13656,
        13745
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1177": {
      "fn": "Philcoin.transferFrom",
      "offset": [
        13625,
        13633
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x779"
    },
    "1180": {
      "fn": "Philcoin.transferFrom",
      "jump": "i",
      "offset": [
        13625,
        13746
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1181": {
      "fn": "Philcoin.transferFrom",
      "offset": [
        13625,
        13746
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1182": {
      "op": "POP"
    },
    "1183": {
      "fn": "Philcoin.transferFrom",
      "offset": [
        13759,
        13763
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 6,
      "value": "0x1"
    },
    "1185": {
      "fn": "Philcoin.transferFrom",
      "offset": [
        13480,
        13768
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "1186": {
      "fn": "Philcoin.transferFrom",
      "offset": [
        13480,
        13768
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "1187": {
      "fn": "Philcoin.transferFrom",
      "offset": [
        13480,
        13768
      ],
      "op": "POP",
      "path": "0"
    },
    "1188": {
      "fn": "Philcoin.transferFrom",
      "offset": [
        13480,
        13768
      ],
      "op": "POP",
      "path": "0"
    },
    "1189": {
      "fn": "Philcoin.transferFrom",
      "offset": [
        13480,
        13768
      ],
      "op": "POP",
      "path": "0"
    },
    "1190": {
      "fn": "Philcoin.transferFrom",
      "jump": "o",
      "offset": [
        13480,
        13768
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1191": {
      "fn": "Philcoin.decimals",
      "offset": [
        11655,
        11732
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1192": {
      "fn": "Philcoin.decimals",
      "offset": [
        11718,
        11727
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 7,
      "value": "0x4"
    },
    "1194": {
      "fn": "Philcoin.decimals",
      "offset": [
        11718,
        11727
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1195": {
      "fn": "Philcoin.decimals",
      "offset": [
        11718,
        11727
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xFF"
    },
    "1197": {
      "fn": "Philcoin.decimals",
      "offset": [
        11718,
        11727
      ],
      "op": "AND",
      "path": "0"
    },
    "1198": {
      "fn": "Philcoin.decimals",
      "offset": [
        11655,
        11732
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1199": {
      "fn": "Philcoin.decimals",
      "jump": "o",
      "offset": [
        11655,
        11732
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1200": {
      "fn": "Philcoin.increaseAllowance",
      "offset": [
        14136,
        14333
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1201": {
      "fn": "Philcoin.increaseAllowance",
      "offset": [
        14216,
        14220
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1203": {
      "fn": "Philcoin.increaseAllowance",
      "offset": [
        14228,
        14311
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 8,
      "value": "0x40B"
    },
    "1206": {
      "fn": "Philcoin.increaseAllowance",
      "offset": [
        14237,
        14249
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x4BD"
    },
    "1209": {
      "fn": "Philcoin.increaseAllowance",
      "offset": [
        14237,
        14247
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x775"
    },
    "1212": {
      "fn": "Philcoin.increaseAllowance",
      "jump": "i",
      "offset": [
        14237,
        14249
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1213": {
      "fn": "Philcoin.increaseAllowance",
      "offset": [
        14237,
        14249
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1214": {
      "fn": "Philcoin.increaseAllowance",
      "offset": [
        14251,
        14258
      ],
      "op": "DUP5",
      "path": "0"
    },
    "1215": {
      "fn": "Philcoin.increaseAllowance",
      "offset": [
        14260,
        14310
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x498"
    },
    "1218": {
      "fn": "Philcoin.increaseAllowance",
      "offset": [
        14299,
        14309
      ],
      "op": "DUP6",
      "path": "0"
    },
    "1219": {
      "fn": "Philcoin.increaseAllowance",
      "offset": [
        14260,
        14271
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2"
    },
    "1221": {
      "fn": "Philcoin.increaseAllowance",
      "offset": [
        14260,
        14285
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1223": {
      "fn": "Philcoin.increaseAllowance",
      "offset": [
        14272,
        14284
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x4CE"
    },
    "1226": {
      "fn": "Philcoin.increaseAllowance",
      "offset": [
        14272,
        14282
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x775"
    },
    "1229": {
      "fn": "Philcoin.increaseAllowance",
      "jump": "i",
      "offset": [
        14272,
        14284
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1230": {
      "fn": "Philcoin.increaseAllowance",
      "offset": [
        14272,
        14284
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1231": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1233": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1235": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1237": {
      "op": "SHL"
    },
    "1238": {
      "op": "SUB"
    },
    "1239": {
      "fn": "Philcoin.increaseAllowance",
      "offset": [
        14260,
        14285
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1240": {
      "fn": "Philcoin.increaseAllowance",
      "offset": [
        14260,
        14285
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1241": {
      "fn": "Philcoin.increaseAllowance",
      "offset": [
        14260,
        14285
      ],
      "op": "AND",
      "path": "0"
    },
    "1242": {
      "fn": "Philcoin.increaseAllowance",
      "offset": [
        14260,
        14285
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1243": {
      "fn": "Philcoin.increaseAllowance",
      "offset": [
        14260,
        14285
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1244": {
      "fn": "Philcoin.increaseAllowance",
      "offset": [
        14260,
        14285
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1246": {
      "fn": "Philcoin.increaseAllowance",
      "offset": [
        14260,
        14285
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1247": {
      "fn": "Philcoin.increaseAllowance",
      "offset": [
        14260,
        14285
      ],
      "op": "DUP4",
      "path": "0"
    },
    "1248": {
      "fn": "Philcoin.increaseAllowance",
      "offset": [
        14260,
        14285
      ],
      "op": "ADD",
      "path": "0"
    },
    "1249": {
      "fn": "Philcoin.increaseAllowance",
      "offset": [
        14260,
        14285
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "1250": {
      "fn": "Philcoin.increaseAllowance",
      "offset": [
        14260,
        14285
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1251": {
      "fn": "Philcoin.increaseAllowance",
      "offset": [
        14260,
        14285
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "1252": {
      "fn": "Philcoin.increaseAllowance",
      "offset": [
        14260,
        14285
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1253": {
      "fn": "Philcoin.increaseAllowance",
      "offset": [
        14260,
        14285
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1255": {
      "fn": "Philcoin.increaseAllowance",
      "offset": [
        14260,
        14285
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1256": {
      "fn": "Philcoin.increaseAllowance",
      "offset": [
        14260,
        14285
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1257": {
      "fn": "Philcoin.increaseAllowance",
      "offset": [
        14260,
        14285
      ],
      "op": "ADD",
      "path": "0"
    },
    "1258": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1260": {
      "fn": "Philcoin.increaseAllowance",
      "offset": [
        14260,
        14285
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1261": {
      "fn": "Philcoin.increaseAllowance",
      "offset": [
        14260,
        14285
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1262": {
      "fn": "Philcoin.increaseAllowance",
      "offset": [
        14260,
        14285
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "1263": {
      "fn": "Philcoin.increaseAllowance",
      "offset": [
        14260,
        14294
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1264": {
      "fn": "Philcoin.increaseAllowance",
      "offset": [
        14260,
        14294
      ],
      "op": "DUP13",
      "path": "0"
    },
    "1265": {
      "fn": "Philcoin.increaseAllowance",
      "offset": [
        14260,
        14294
      ],
      "op": "AND",
      "path": "0"
    },
    "1266": {
      "fn": "Philcoin.increaseAllowance",
      "offset": [
        14260,
        14294
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1267": {
      "fn": "Philcoin.increaseAllowance",
      "offset": [
        14260,
        14294
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1268": {
      "fn": "Philcoin.increaseAllowance",
      "offset": [
        14260,
        14294
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "1269": {
      "fn": "Philcoin.increaseAllowance",
      "offset": [
        14260,
        14294
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1270": {
      "fn": "Philcoin.increaseAllowance",
      "offset": [
        14260,
        14294
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1271": {
      "fn": "Philcoin.increaseAllowance",
      "offset": [
        14260,
        14294
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "1272": {
      "fn": "Philcoin.increaseAllowance",
      "offset": [
        14260,
        14294
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1273": {
      "fn": "Philcoin.increaseAllowance",
      "offset": [
        14260,
        14294
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1274": {
      "fn": "Philcoin.increaseAllowance",
      "offset": [
        14260,
        14310
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xFFFFFFFF"
    },
    "1279": {
      "fn": "Philcoin.increaseAllowance",
      "offset": [
        14260,
        14298
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xA5A"
    },
    "1282": {
      "fn": "Philcoin.increaseAllowance",
      "offset": [
        14260,
        14310
      ],
      "op": "AND",
      "path": "0"
    },
    "1283": {
      "fn": "Philcoin.increaseAllowance",
      "jump": "i",
      "offset": [
        14260,
        14310
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1284": {
      "fn": "Philcoin.balanceOf",
      "offset": [
        12175,
        12279
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1285": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1287": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1289": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1291": {
      "op": "SHL"
    },
    "1292": {
      "op": "SUB"
    },
    "1293": {
      "fn": "Philcoin.balanceOf",
      "offset": [
        12256,
        12274
      ],
      "op": "AND",
      "path": "0",
      "statement": 9
    },
    "1294": {
      "fn": "Philcoin.balanceOf",
      "offset": [
        12234,
        12241
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1296": {
      "fn": "Philcoin.balanceOf",
      "offset": [
        12256,
        12274
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1297": {
      "fn": "Philcoin.balanceOf",
      "offset": [
        12256,
        12274
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1298": {
      "fn": "Philcoin.balanceOf",
      "offset": [
        12256,
        12274
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1299": {
      "fn": "Philcoin.balanceOf",
      "offset": [
        12256,
        12265
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "1301": {
      "fn": "Philcoin.balanceOf",
      "offset": [
        12256,
        12274
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1303": {
      "fn": "Philcoin.balanceOf",
      "offset": [
        12256,
        12274
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1304": {
      "fn": "Philcoin.balanceOf",
      "offset": [
        12256,
        12274
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1306": {
      "fn": "Philcoin.balanceOf",
      "offset": [
        12256,
        12274
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1307": {
      "fn": "Philcoin.balanceOf",
      "offset": [
        12256,
        12274
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "1308": {
      "fn": "Philcoin.balanceOf",
      "offset": [
        12256,
        12274
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1309": {
      "fn": "Philcoin.balanceOf",
      "offset": [
        12256,
        12274
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1310": {
      "fn": "Philcoin.balanceOf",
      "jump": "o",
      "offset": [
        12175,
        12279
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1311": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        10293,
        10420
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1312": {
      "offset": [
        9906,
        9918
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x527"
    },
    "1315": {
      "offset": [
        9906,
        9916
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x775"
    },
    "1318": {
      "jump": "i",
      "offset": [
        9906,
        9918
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1319": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        9906,
        9918
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1320": {
      "offset": [
        9896,
        9902
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1322": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        9896,
        9902
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1323": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1325": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1327": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1329": {
      "op": "SHL"
    },
    "1330": {
      "op": "SUB"
    },
    "1331": {
      "offset": [
        9896,
        9902
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1332": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        9896,
        9902
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1333": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        9896,
        9902
      ],
      "op": "AND",
      "path": "0"
    },
    "1334": {
      "offset": [
        9896,
        9918
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1335": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        9896,
        9918
      ],
      "op": "AND",
      "path": "0"
    },
    "1336": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        9896,
        9918
      ],
      "op": "EQ",
      "path": "0"
    },
    "1337": {
      "offset": [
        9888,
        9955
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x589"
    },
    "1340": {
      "offset": [
        9888,
        9955
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1341": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        9888,
        9955
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1343": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        9888,
        9955
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1344": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        9888,
        9955
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1345": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1349": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1351": {
      "op": "SHL"
    },
    "1352": {
      "offset": [
        9888,
        9955
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1353": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        9888,
        9955
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1354": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        9888,
        9955
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1356": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        9888,
        9955
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "1358": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        9888,
        9955
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1359": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        9888,
        9955
      ],
      "op": "ADD",
      "path": "0"
    },
    "1360": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        9888,
        9955
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1361": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        9888,
        9955
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1362": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        9888,
        9955
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1363": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        9888,
        9955
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x24"
    },
    "1365": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        9888,
        9955
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1366": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        9888,
        9955
      ],
      "op": "ADD",
      "path": "0"
    },
    "1367": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        9888,
        9955
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1368": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        9888,
        9955
      ],
      "op": "PUSH32",
      "path": "0",
      "value": "0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
    },
    "1401": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        9888,
        9955
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x44"
    },
    "1403": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        9888,
        9955
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1404": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        9888,
        9955
      ],
      "op": "ADD",
      "path": "0"
    },
    "1405": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        9888,
        9955
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1406": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        9888,
        9955
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1407": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        9888,
        9955
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1408": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        9888,
        9955
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1409": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        9888,
        9955
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1410": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        9888,
        9955
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1411": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        9888,
        9955
      ],
      "op": "SUB",
      "path": "0"
    },
    "1412": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        9888,
        9955
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x64"
    },
    "1414": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        9888,
        9955
      ],
      "op": "ADD",
      "path": "0"
    },
    "1415": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        9888,
        9955
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1416": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        9888,
        9955
      ],
      "op": "REVERT",
      "path": "0"
    },
    "1417": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        9888,
        9955
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1418": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        10387,
        10388
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 10,
      "value": "0x0"
    },
    "1420": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        10371,
        10377
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1421": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        10371,
        10377
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1422": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        10350,
        10390
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1424": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        10350,
        10390
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1425": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1427": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1429": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1431": {
      "op": "SHL"
    },
    "1432": {
      "op": "SUB"
    },
    "1433": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        10371,
        10377
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1434": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        10371,
        10377
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1435": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        10371,
        10377
      ],
      "op": "AND",
      "path": "0"
    },
    "1436": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        10371,
        10377
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1437": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        10350,
        10390
      ],
      "op": "PUSH32",
      "path": "0",
      "value": "0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
    },
    "1470": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        10350,
        10390
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1471": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        10387,
        10388
      ],
      "op": "DUP4",
      "path": "0"
    },
    "1472": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        10387,
        10388
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1473": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        10350,
        10390
      ],
      "op": "LOG3",
      "path": "0"
    },
    "1474": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        10413,
        10414
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 11,
      "value": "0x0"
    },
    "1476": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        10396,
        10415
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1477": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        10396,
        10415
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1478": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1480": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1482": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1484": {
      "op": "SHL"
    },
    "1485": {
      "op": "SUB"
    },
    "1486": {
      "op": "NOT"
    },
    "1487": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        10396,
        10415
      ],
      "op": "AND",
      "path": "0"
    },
    "1488": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        10396,
        10415
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1489": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        10396,
        10415
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "1490": {
      "fn": "Ownable.renounceOwnership",
      "jump": "o",
      "offset": [
        10293,
        10420
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1491": {
      "fn": "Philcoin.getOwner",
      "offset": [
        11524,
        11601
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1492": {
      "fn": "Philcoin.getOwner",
      "offset": [
        11567,
        11574
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1494": {
      "fn": "Philcoin.getOwner",
      "offset": [
        11589,
        11596
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 12,
      "value": "0x5DD"
    },
    "1497": {
      "fn": "Philcoin.getOwner",
      "offset": [
        11589,
        11594
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x5E2"
    },
    "1500": {
      "fn": "Philcoin.getOwner",
      "jump": "i",
      "offset": [
        11589,
        11596
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1501": {
      "fn": "Philcoin.getOwner",
      "offset": [
        11589,
        11596
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1502": {
      "fn": "Philcoin.getOwner",
      "offset": [
        11582,
        11596
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1503": {
      "fn": "Philcoin.getOwner",
      "offset": [
        11582,
        11596
      ],
      "op": "POP",
      "path": "0"
    },
    "1504": {
      "fn": "Philcoin.getOwner",
      "offset": [
        11524,
        11601
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1505": {
      "fn": "Philcoin.getOwner",
      "jump": "o",
      "offset": [
        11524,
        11601
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1506": {
      "fn": "Ownable.owner",
      "offset": [
        9710,
        9781
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1507": {
      "fn": "Ownable.owner",
      "offset": [
        9748,
        9755
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1509": {
      "fn": "Ownable.owner",
      "offset": [
        9770,
        9776
      ],
      "op": "SLOAD",
      "path": "0",
      "statement": 13
    },
    "1510": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1512": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1514": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1516": {
      "op": "SHL"
    },
    "1517": {
      "op": "SUB"
    },
    "1518": {
      "fn": "Ownable.owner",
      "offset": [
        9770,
        9776
      ],
      "op": "AND",
      "path": "0"
    },
    "1519": {
      "fn": "Ownable.owner",
      "offset": [
        9710,
        9781
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1520": {
      "fn": "Ownable.owner",
      "jump": "o",
      "offset": [
        9710,
        9781
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1521": {
      "fn": "Philcoin.symbol",
      "offset": [
        11784,
        11865
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1522": {
      "fn": "Philcoin.symbol",
      "offset": [
        11853,
        11860
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 14,
      "value": "0x5"
    },
    "1524": {
      "fn": "Philcoin.symbol",
      "offset": [
        11846,
        11860
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1525": {
      "fn": "Philcoin.symbol",
      "offset": [
        11846,
        11860
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1526": {
      "fn": "Philcoin.symbol",
      "offset": [
        11846,
        11860
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1528": {
      "fn": "Philcoin.symbol",
      "offset": [
        11846,
        11860
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1529": {
      "fn": "Philcoin.symbol",
      "offset": [
        11846,
        11860
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1530": {
      "fn": "Philcoin.symbol",
      "offset": [
        11846,
        11860
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1532": {
      "fn": "Philcoin.symbol",
      "offset": [
        11846,
        11860
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "1534": {
      "fn": "Philcoin.symbol",
      "offset": [
        11846,
        11860
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2"
    },
    "1536": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1538": {
      "op": "NOT"
    },
    "1539": {
      "fn": "Philcoin.symbol",
      "offset": [
        11846,
        11860
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x100"
    },
    "1542": {
      "fn": "Philcoin.symbol",
      "offset": [
        11846,
        11860
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "1544": {
      "fn": "Philcoin.symbol",
      "offset": [
        11846,
        11860
      ],
      "op": "DUP9",
      "path": "0"
    },
    "1545": {
      "fn": "Philcoin.symbol",
      "offset": [
        11846,
        11860
      ],
      "op": "AND",
      "path": "0"
    },
    "1546": {
      "fn": "Philcoin.symbol",
      "offset": [
        11846,
        11860
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1547": {
      "fn": "Philcoin.symbol",
      "offset": [
        11846,
        11860
      ],
      "op": "MUL",
      "path": "0"
    },
    "1548": {
      "fn": "Philcoin.symbol",
      "offset": [
        11846,
        11860
      ],
      "op": "ADD",
      "path": "0"
    },
    "1549": {
      "fn": "Philcoin.symbol",
      "offset": [
        11846,
        11860
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1550": {
      "fn": "Philcoin.symbol",
      "offset": [
        11846,
        11860
      ],
      "op": "SWAP6",
      "path": "0"
    },
    "1551": {
      "fn": "Philcoin.symbol",
      "offset": [
        11846,
        11860
      ],
      "op": "AND",
      "path": "0"
    },
    "1552": {
      "fn": "Philcoin.symbol",
      "offset": [
        11846,
        11860
      ],
      "op": "SWAP5",
      "path": "0"
    },
    "1553": {
      "fn": "Philcoin.symbol",
      "offset": [
        11846,
        11860
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1554": {
      "fn": "Philcoin.symbol",
      "offset": [
        11846,
        11860
      ],
      "op": "SWAP5",
      "path": "0"
    },
    "1555": {
      "fn": "Philcoin.symbol",
      "offset": [
        11846,
        11860
      ],
      "op": "DIV",
      "path": "0"
    },
    "1556": {
      "fn": "Philcoin.symbol",
      "offset": [
        11846,
        11860
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "1557": {
      "fn": "Philcoin.symbol",
      "offset": [
        11846,
        11860
      ],
      "op": "DUP5",
      "path": "0"
    },
    "1558": {
      "fn": "Philcoin.symbol",
      "offset": [
        11846,
        11860
      ],
      "op": "ADD",
      "path": "0"
    },
    "1559": {
      "fn": "Philcoin.symbol",
      "offset": [
        11846,
        11860
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1560": {
      "fn": "Philcoin.symbol",
      "offset": [
        11846,
        11860
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1561": {
      "fn": "Philcoin.symbol",
      "offset": [
        11846,
        11860
      ],
      "op": "DIV",
      "path": "0"
    },
    "1562": {
      "fn": "Philcoin.symbol",
      "offset": [
        11846,
        11860
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1563": {
      "fn": "Philcoin.symbol",
      "offset": [
        11846,
        11860
      ],
      "op": "MUL",
      "path": "0"
    },
    "1564": {
      "fn": "Philcoin.symbol",
      "offset": [
        11846,
        11860
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1565": {
      "fn": "Philcoin.symbol",
      "offset": [
        11846,
        11860
      ],
      "op": "ADD",
      "path": "0"
    },
    "1566": {
      "fn": "Philcoin.symbol",
      "offset": [
        11846,
        11860
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1567": {
      "fn": "Philcoin.symbol",
      "offset": [
        11846,
        11860
      ],
      "op": "ADD",
      "path": "0"
    },
    "1568": {
      "fn": "Philcoin.symbol",
      "offset": [
        11846,
        11860
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1569": {
      "fn": "Philcoin.symbol",
      "offset": [
        11846,
        11860
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "1570": {
      "fn": "Philcoin.symbol",
      "offset": [
        11846,
        11860
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1571": {
      "fn": "Philcoin.symbol",
      "offset": [
        11846,
        11860
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1572": {
      "fn": "Philcoin.symbol",
      "offset": [
        11846,
        11860
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1573": {
      "fn": "Philcoin.symbol",
      "offset": [
        11846,
        11860
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1574": {
      "fn": "Philcoin.symbol",
      "offset": [
        11825,
        11838
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x60"
    },
    "1576": {
      "fn": "Philcoin.symbol",
      "offset": [
        11825,
        11838
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "1577": {
      "fn": "Philcoin.symbol",
      "offset": [
        11846,
        11860
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1578": {
      "fn": "Philcoin.symbol",
      "offset": [
        11846,
        11860
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "1579": {
      "fn": "Philcoin.symbol",
      "offset": [
        11853,
        11860
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1580": {
      "fn": "Philcoin.symbol",
      "offset": [
        11853,
        11860
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1581": {
      "fn": "Philcoin.symbol",
      "offset": [
        11846,
        11860
      ],
      "op": "DUP4",
      "path": "0"
    },
    "1582": {
      "fn": "Philcoin.symbol",
      "offset": [
        11846,
        11860
      ],
      "op": "ADD",
      "path": "0"
    },
    "1583": {
      "fn": "Philcoin.symbol",
      "offset": [
        11853,
        11860
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1584": {
      "fn": "Philcoin.symbol",
      "offset": [
        11846,
        11860
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1585": {
      "fn": "Philcoin.symbol",
      "offset": [
        11846,
        11860
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1586": {
      "fn": "Philcoin.symbol",
      "offset": [
        11846,
        11860
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1587": {
      "fn": "Philcoin.symbol",
      "offset": [
        11846,
        11860
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3ED"
    },
    "1590": {
      "fn": "Philcoin.symbol",
      "offset": [
        11846,
        11860
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1591": {
      "fn": "Philcoin.symbol",
      "offset": [
        11846,
        11860
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1592": {
      "fn": "Philcoin.symbol",
      "offset": [
        11846,
        11860
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "1594": {
      "fn": "Philcoin.symbol",
      "offset": [
        11846,
        11860
      ],
      "op": "LT",
      "path": "0"
    },
    "1595": {
      "fn": "Philcoin.symbol",
      "offset": [
        11846,
        11860
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3C2"
    },
    "1598": {
      "fn": "Philcoin.symbol",
      "offset": [
        11846,
        11860
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1599": {
      "fn": "Philcoin.symbol",
      "offset": [
        11846,
        11860
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x100"
    },
    "1602": {
      "fn": "Philcoin.symbol",
      "offset": [
        11846,
        11860
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1603": {
      "fn": "Philcoin.symbol",
      "offset": [
        11846,
        11860
      ],
      "op": "DUP4",
      "path": "0"
    },
    "1604": {
      "fn": "Philcoin.symbol",
      "offset": [
        11846,
        11860
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1605": {
      "fn": "Philcoin.symbol",
      "offset": [
        11846,
        11860
      ],
      "op": "DIV",
      "path": "0"
    },
    "1606": {
      "fn": "Philcoin.symbol",
      "offset": [
        11846,
        11860
      ],
      "op": "MUL",
      "path": "0"
    },
    "1607": {
      "fn": "Philcoin.symbol",
      "offset": [
        11846,
        11860
      ],
      "op": "DUP4",
      "path": "0"
    },
    "1608": {
      "fn": "Philcoin.symbol",
      "offset": [
        11846,
        11860
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1609": {
      "fn": "Philcoin.symbol",
      "offset": [
        11846,
        11860
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1610": {
      "fn": "Philcoin.symbol",
      "offset": [
        11846,
        11860
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1612": {
      "fn": "Philcoin.symbol",
      "offset": [
        11846,
        11860
      ],
      "op": "ADD",
      "path": "0"
    },
    "1613": {
      "fn": "Philcoin.symbol",
      "offset": [
        11846,
        11860
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1614": {
      "fn": "Philcoin.symbol",
      "offset": [
        11846,
        11860
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3ED"
    },
    "1617": {
      "fn": "Philcoin.symbol",
      "offset": [
        11846,
        11860
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1618": {
      "fn": "Philcoin.decreaseAllowance",
      "offset": [
        14789,
        15037
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1619": {
      "fn": "Philcoin.decreaseAllowance",
      "offset": [
        14874,
        14878
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1621": {
      "fn": "Philcoin.decreaseAllowance",
      "offset": [
        14886,
        15015
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 15,
      "value": "0x40B"
    },
    "1624": {
      "fn": "Philcoin.decreaseAllowance",
      "offset": [
        14895,
        14907
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x65F"
    },
    "1627": {
      "fn": "Philcoin.decreaseAllowance",
      "offset": [
        14895,
        14905
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x775"
    },
    "1630": {
      "fn": "Philcoin.decreaseAllowance",
      "jump": "i",
      "offset": [
        14895,
        14907
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1631": {
      "fn": "Philcoin.decreaseAllowance",
      "offset": [
        14895,
        14907
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1632": {
      "fn": "Philcoin.decreaseAllowance",
      "offset": [
        14909,
        14916
      ],
      "op": "DUP5",
      "path": "0"
    },
    "1633": {
      "fn": "Philcoin.decreaseAllowance",
      "offset": [
        14918,
        15014
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x498"
    },
    "1636": {
      "fn": "Philcoin.decreaseAllowance",
      "offset": [
        14957,
        14972
      ],
      "op": "DUP6",
      "path": "0"
    },
    "1637": {
      "fn": "Philcoin.decreaseAllowance",
      "offset": [
        14918,
        15014
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1639": {
      "fn": "Philcoin.decreaseAllowance",
      "offset": [
        14918,
        15014
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1640": {
      "fn": "Philcoin.decreaseAllowance",
      "offset": [
        14918,
        15014
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1641": {
      "fn": "Philcoin.decreaseAllowance",
      "offset": [
        14918,
        15014
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x60"
    },
    "1643": {
      "fn": "Philcoin.decreaseAllowance",
      "offset": [
        14918,
        15014
      ],
      "op": "ADD",
      "path": "0"
    },
    "1644": {
      "fn": "Philcoin.decreaseAllowance",
      "offset": [
        14918,
        15014
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1646": {
      "fn": "Philcoin.decreaseAllowance",
      "offset": [
        14918,
        15014
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1647": {
      "fn": "Philcoin.decreaseAllowance",
      "offset": [
        14918,
        15014
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1648": {
      "fn": "Philcoin.decreaseAllowance",
      "offset": [
        14918,
        15014
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x25"
    },
    "1650": {
      "fn": "Philcoin.decreaseAllowance",
      "offset": [
        14918,
        15014
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1651": {
      "fn": "Philcoin.decreaseAllowance",
      "offset": [
        14918,
        15014
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1652": {
      "fn": "Philcoin.decreaseAllowance",
      "offset": [
        14918,
        15014
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1654": {
      "fn": "Philcoin.decreaseAllowance",
      "offset": [
        14918,
        15014
      ],
      "op": "ADD",
      "path": "0"
    },
    "1655": {
      "fn": "Philcoin.decreaseAllowance",
      "offset": [
        14918,
        15014
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xC3C"
    },
    "1658": {
      "fn": "Philcoin.decreaseAllowance",
      "offset": [
        14918,
        15014
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x25"
    },
    "1660": {
      "fn": "Philcoin.decreaseAllowance",
      "offset": [
        14918,
        15014
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1661": {
      "fn": "Philcoin.decreaseAllowance",
      "offset": [
        14918,
        15014
      ],
      "op": "CODECOPY",
      "path": "0"
    },
    "1662": {
      "fn": "Philcoin.decreaseAllowance",
      "offset": [
        14918,
        14929
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2"
    },
    "1664": {
      "fn": "Philcoin.decreaseAllowance",
      "offset": [
        14918,
        14943
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1666": {
      "fn": "Philcoin.decreaseAllowance",
      "offset": [
        14930,
        14942
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x689"
    },
    "1669": {
      "fn": "Philcoin.decreaseAllowance",
      "offset": [
        14930,
        14940
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x775"
    },
    "1672": {
      "fn": "Philcoin.decreaseAllowance",
      "jump": "i",
      "offset": [
        14930,
        14942
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1673": {
      "fn": "Philcoin.decreaseAllowance",
      "offset": [
        14930,
        14942
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1674": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1676": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1678": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1680": {
      "op": "SHL"
    },
    "1681": {
      "op": "SUB"
    },
    "1682": {
      "fn": "Philcoin.decreaseAllowance",
      "offset": [
        14918,
        14943
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1683": {
      "fn": "Philcoin.decreaseAllowance",
      "offset": [
        14918,
        14943
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1684": {
      "fn": "Philcoin.decreaseAllowance",
      "offset": [
        14918,
        14943
      ],
      "op": "AND",
      "path": "0"
    },
    "1685": {
      "fn": "Philcoin.decreaseAllowance",
      "offset": [
        14918,
        14943
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1686": {
      "fn": "Philcoin.decreaseAllowance",
      "offset": [
        14918,
        14943
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1687": {
      "fn": "Philcoin.decreaseAllowance",
      "offset": [
        14918,
        14943
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1689": {
      "fn": "Philcoin.decreaseAllowance",
      "offset": [
        14918,
        14943
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1690": {
      "fn": "Philcoin.decreaseAllowance",
      "offset": [
        14918,
        14943
      ],
      "op": "DUP4",
      "path": "0"
    },
    "1691": {
      "fn": "Philcoin.decreaseAllowance",
      "offset": [
        14918,
        14943
      ],
      "op": "ADD",
      "path": "0"
    },
    "1692": {
      "fn": "Philcoin.decreaseAllowance",
      "offset": [
        14918,
        14943
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "1693": {
      "fn": "Philcoin.decreaseAllowance",
      "offset": [
        14918,
        14943
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1694": {
      "fn": "Philcoin.decreaseAllowance",
      "offset": [
        14918,
        14943
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "1695": {
      "fn": "Philcoin.decreaseAllowance",
      "offset": [
        14918,
        14943
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1696": {
      "fn": "Philcoin.decreaseAllowance",
      "offset": [
        14918,
        14943
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1698": {
      "fn": "Philcoin.decreaseAllowance",
      "offset": [
        14918,
        14943
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1699": {
      "fn": "Philcoin.decreaseAllowance",
      "offset": [
        14918,
        14943
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1700": {
      "fn": "Philcoin.decreaseAllowance",
      "offset": [
        14918,
        14943
      ],
      "op": "ADD",
      "path": "0"
    },
    "1701": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1703": {
      "fn": "Philcoin.decreaseAllowance",
      "offset": [
        14918,
        14943
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1704": {
      "fn": "Philcoin.decreaseAllowance",
      "offset": [
        14918,
        14943
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1705": {
      "fn": "Philcoin.decreaseAllowance",
      "offset": [
        14918,
        14943
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "1706": {
      "fn": "Philcoin.decreaseAllowance",
      "offset": [
        14918,
        14952
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1707": {
      "fn": "Philcoin.decreaseAllowance",
      "offset": [
        14918,
        14952
      ],
      "op": "DUP14",
      "path": "0"
    },
    "1708": {
      "fn": "Philcoin.decreaseAllowance",
      "offset": [
        14918,
        14952
      ],
      "op": "AND",
      "path": "0"
    },
    "1709": {
      "fn": "Philcoin.decreaseAllowance",
      "offset": [
        14918,
        14952
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1710": {
      "fn": "Philcoin.decreaseAllowance",
      "offset": [
        14918,
        14952
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1711": {
      "fn": "Philcoin.decreaseAllowance",
      "offset": [
        14918,
        14952
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "1712": {
      "fn": "Philcoin.decreaseAllowance",
      "offset": [
        14918,
        14952
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1713": {
      "fn": "Philcoin.decreaseAllowance",
      "offset": [
        14918,
        14952
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1714": {
      "fn": "Philcoin.decreaseAllowance",
      "offset": [
        14918,
        14952
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "1715": {
      "fn": "Philcoin.decreaseAllowance",
      "offset": [
        14918,
        14952
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1716": {
      "fn": "Philcoin.decreaseAllowance",
      "offset": [
        14918,
        14952
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1717": {
      "fn": "Philcoin.decreaseAllowance",
      "offset": [
        14918,
        15014
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1718": {
      "fn": "Philcoin.decreaseAllowance",
      "offset": [
        14918,
        15014
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xFFFFFFFF"
    },
    "1723": {
      "fn": "Philcoin.decreaseAllowance",
      "offset": [
        14918,
        14956
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x9C3"
    },
    "1726": {
      "fn": "Philcoin.decreaseAllowance",
      "offset": [
        14918,
        15014
      ],
      "op": "AND",
      "path": "0"
    },
    "1727": {
      "fn": "Philcoin.decreaseAllowance",
      "jump": "i",
      "offset": [
        14918,
        15014
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1728": {
      "fn": "Philcoin.transfer",
      "offset": [
        12463,
        12610
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1729": {
      "fn": "Philcoin.transfer",
      "offset": [
        12534,
        12538
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1731": {
      "fn": "Philcoin.transfer",
      "offset": [
        12546,
        12588
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 16,
      "value": "0x40B"
    },
    "1734": {
      "fn": "Philcoin.transfer",
      "offset": [
        12556,
        12568
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x6CD"
    },
    "1737": {
      "fn": "Philcoin.transfer",
      "offset": [
        12556,
        12566
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x775"
    },
    "1740": {
      "fn": "Philcoin.transfer",
      "jump": "i",
      "offset": [
        12556,
        12568
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1741": {
      "fn": "Philcoin.transfer",
      "offset": [
        12556,
        12568
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1742": {
      "fn": "Philcoin.transfer",
      "offset": [
        12570,
        12579
      ],
      "op": "DUP5",
      "path": "0"
    },
    "1743": {
      "fn": "Philcoin.transfer",
      "offset": [
        12581,
        12587
      ],
      "op": "DUP5",
      "path": "0"
    },
    "1744": {
      "fn": "Philcoin.transfer",
      "offset": [
        12546,
        12555
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x865"
    },
    "1747": {
      "fn": "Philcoin.transfer",
      "jump": "i",
      "offset": [
        12546,
        12588
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1748": {
      "fn": "Philcoin.allowance",
      "offset": [
        12659,
        12787
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1749": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1751": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1753": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1755": {
      "op": "SHL"
    },
    "1756": {
      "op": "SUB"
    },
    "1757": {
      "fn": "Philcoin.allowance",
      "offset": [
        12755,
        12773
      ],
      "op": "SWAP2",
      "path": "0",
      "statement": 17
    },
    "1758": {
      "fn": "Philcoin.allowance",
      "offset": [
        12755,
        12773
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1759": {
      "fn": "Philcoin.allowance",
      "offset": [
        12755,
        12773
      ],
      "op": "AND",
      "path": "0"
    },
    "1760": {
      "fn": "Philcoin.allowance",
      "offset": [
        12733,
        12740
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1762": {
      "fn": "Philcoin.allowance",
      "offset": [
        12755,
        12773
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1763": {
      "fn": "Philcoin.allowance",
      "offset": [
        12755,
        12773
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1764": {
      "fn": "Philcoin.allowance",
      "offset": [
        12755,
        12773
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1765": {
      "fn": "Philcoin.allowance",
      "offset": [
        12755,
        12766
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2"
    },
    "1767": {
      "fn": "Philcoin.allowance",
      "offset": [
        12755,
        12773
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1769": {
      "fn": "Philcoin.allowance",
      "offset": [
        12755,
        12773
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1770": {
      "fn": "Philcoin.allowance",
      "offset": [
        12755,
        12773
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1771": {
      "fn": "Philcoin.allowance",
      "offset": [
        12755,
        12773
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1772": {
      "fn": "Philcoin.allowance",
      "offset": [
        12755,
        12773
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1774": {
      "fn": "Philcoin.allowance",
      "offset": [
        12755,
        12773
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1775": {
      "fn": "Philcoin.allowance",
      "offset": [
        12755,
        12773
      ],
      "op": "DUP4",
      "path": "0"
    },
    "1776": {
      "fn": "Philcoin.allowance",
      "offset": [
        12755,
        12773
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "1777": {
      "fn": "Philcoin.allowance",
      "offset": [
        12755,
        12782
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "1778": {
      "fn": "Philcoin.allowance",
      "offset": [
        12755,
        12782
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1779": {
      "fn": "Philcoin.allowance",
      "offset": [
        12755,
        12782
      ],
      "op": "SWAP5",
      "path": "0"
    },
    "1780": {
      "fn": "Philcoin.allowance",
      "offset": [
        12755,
        12782
      ],
      "op": "AND",
      "path": "0"
    },
    "1781": {
      "fn": "Philcoin.allowance",
      "offset": [
        12755,
        12782
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1782": {
      "fn": "Philcoin.allowance",
      "offset": [
        12755,
        12782
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1783": {
      "fn": "Philcoin.allowance",
      "offset": [
        12755,
        12782
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1784": {
      "fn": "Philcoin.allowance",
      "offset": [
        12755,
        12782
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1785": {
      "fn": "Philcoin.allowance",
      "offset": [
        12755,
        12782
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1786": {
      "fn": "Philcoin.allowance",
      "offset": [
        12755,
        12782
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1787": {
      "fn": "Philcoin.allowance",
      "offset": [
        12755,
        12782
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "1788": {
      "fn": "Philcoin.allowance",
      "offset": [
        12755,
        12782
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1789": {
      "fn": "Philcoin.allowance",
      "offset": [
        12755,
        12782
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1790": {
      "fn": "Philcoin.allowance",
      "jump": "o",
      "offset": [
        12659,
        12787
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1791": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        10559,
        10660
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1792": {
      "offset": [
        9906,
        9918
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x707"
    },
    "1795": {
      "offset": [
        9906,
        9916
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x775"
    },
    "1798": {
      "jump": "i",
      "offset": [
        9906,
        9918
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1799": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        9906,
        9918
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1800": {
      "offset": [
        9896,
        9902
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1802": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        9896,
        9902
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1803": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1805": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1807": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1809": {
      "op": "SHL"
    },
    "1810": {
      "op": "SUB"
    },
    "1811": {
      "offset": [
        9896,
        9902
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1812": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        9896,
        9902
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1813": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        9896,
        9902
      ],
      "op": "AND",
      "path": "0"
    },
    "1814": {
      "offset": [
        9896,
        9918
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1815": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        9896,
        9918
      ],
      "op": "AND",
      "path": "0"
    },
    "1816": {
      "branch": 35,
      "fn": "Ownable.transferOwnership",
      "offset": [
        9896,
        9918
      ],
      "op": "EQ",
      "path": "0"
    },
    "1817": {
      "offset": [
        9888,
        9955
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x769"
    },
    "1820": {
      "branch": 35,
      "offset": [
        9888,
        9955
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1821": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        9888,
        9955
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1823": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        9888,
        9955
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1824": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        9888,
        9955
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1825": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1829": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1831": {
      "op": "SHL"
    },
    "1832": {
      "offset": [
        9888,
        9955
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1833": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        9888,
        9955
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1834": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        9888,
        9955
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1836": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        9888,
        9955
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "1838": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        9888,
        9955
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1839": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        9888,
        9955
      ],
      "op": "ADD",
      "path": "0"
    },
    "1840": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        9888,
        9955
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1841": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        9888,
        9955
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1842": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        9888,
        9955
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1843": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        9888,
        9955
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x24"
    },
    "1845": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        9888,
        9955
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1846": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        9888,
        9955
      ],
      "op": "ADD",
      "path": "0"
    },
    "1847": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        9888,
        9955
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1848": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        9888,
        9955
      ],
      "op": "PUSH32",
      "path": "0",
      "value": "0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
    },
    "1881": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        9888,
        9955
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x44"
    },
    "1883": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        9888,
        9955
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1884": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        9888,
        9955
      ],
      "op": "ADD",
      "path": "0"
    },
    "1885": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        9888,
        9955
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1886": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        9888,
        9955
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1887": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        9888,
        9955
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1888": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        9888,
        9955
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1889": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        9888,
        9955
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1890": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        9888,
        9955
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1891": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        9888,
        9955
      ],
      "op": "SUB",
      "path": "0"
    },
    "1892": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        9888,
        9955
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x64"
    },
    "1894": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        9888,
        9955
      ],
      "op": "ADD",
      "path": "0"
    },
    "1895": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        9888,
        9955
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1896": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        9888,
        9955
      ],
      "op": "REVERT",
      "path": "0"
    },
    "1897": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        9888,
        9955
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1898": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        10627,
        10655
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 18,
      "value": "0x772"
    },
    "1901": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        10646,
        10654
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1902": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        10627,
        10645
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xABB"
    },
    "1905": {
      "fn": "Ownable.transferOwnership",
      "jump": "i",
      "offset": [
        10627,
        10655
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1906": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        10627,
        10655
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1907": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        10559,
        10660
      ],
      "op": "POP",
      "path": "0"
    },
    "1908": {
      "fn": "Ownable.transferOwnership",
      "jump": "o",
      "offset": [
        10559,
        10660
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1909": {
      "fn": "Context._msgSender",
      "offset": [
        3595,
        3685
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1910": {
      "fn": "Context._msgSender",
      "offset": [
        3670,
        3680
      ],
      "op": "CALLER",
      "path": "0",
      "statement": 19
    },
    "1911": {
      "fn": "Context._msgSender",
      "offset": [
        3595,
        3685
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1912": {
      "fn": "Context._msgSender",
      "jump": "o",
      "offset": [
        3595,
        3685
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1913": {
      "fn": "Philcoin._approve",
      "offset": [
        17473,
        17787
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1914": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1916": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1918": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1920": {
      "op": "SHL"
    },
    "1921": {
      "op": "SUB"
    },
    "1922": {
      "fn": "Philcoin._approve",
      "offset": [
        17562,
        17581
      ],
      "op": "DUP4",
      "path": "0",
      "statement": 20
    },
    "1923": {
      "branch": 36,
      "fn": "Philcoin._approve",
      "offset": [
        17562,
        17581
      ],
      "op": "AND",
      "path": "0"
    },
    "1924": {
      "fn": "Philcoin._approve",
      "offset": [
        17554,
        17622
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x7BE"
    },
    "1927": {
      "branch": 36,
      "fn": "Philcoin._approve",
      "offset": [
        17554,
        17622
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1928": {
      "fn": "Philcoin._approve",
      "offset": [
        17554,
        17622
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1930": {
      "fn": "Philcoin._approve",
      "offset": [
        17554,
        17622
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1931": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1935": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1937": {
      "op": "SHL"
    },
    "1938": {
      "fn": "Philcoin._approve",
      "offset": [
        17554,
        17622
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1939": {
      "fn": "Philcoin._approve",
      "offset": [
        17554,
        17622
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1940": {
      "fn": "Philcoin._approve",
      "offset": [
        17554,
        17622
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "1942": {
      "fn": "Philcoin._approve",
      "offset": [
        17554,
        17622
      ],
      "op": "ADD",
      "path": "0"
    },
    "1943": {
      "fn": "Philcoin._approve",
      "offset": [
        17554,
        17622
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1944": {
      "fn": "Philcoin._approve",
      "offset": [
        17554,
        17622
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1945": {
      "fn": "Philcoin._approve",
      "offset": [
        17554,
        17622
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1947": {
      "fn": "Philcoin._approve",
      "offset": [
        17554,
        17622
      ],
      "op": "ADD",
      "path": "0"
    },
    "1948": {
      "fn": "Philcoin._approve",
      "offset": [
        17554,
        17622
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1949": {
      "fn": "Philcoin._approve",
      "offset": [
        17554,
        17622
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1950": {
      "fn": "Philcoin._approve",
      "offset": [
        17554,
        17622
      ],
      "op": "SUB",
      "path": "0"
    },
    "1951": {
      "fn": "Philcoin._approve",
      "offset": [
        17554,
        17622
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1952": {
      "fn": "Philcoin._approve",
      "offset": [
        17554,
        17622
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1953": {
      "fn": "Philcoin._approve",
      "offset": [
        17554,
        17622
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x24"
    },
    "1955": {
      "fn": "Philcoin._approve",
      "offset": [
        17554,
        17622
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1956": {
      "fn": "Philcoin._approve",
      "offset": [
        17554,
        17622
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1957": {
      "fn": "Philcoin._approve",
      "offset": [
        17554,
        17622
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1959": {
      "fn": "Philcoin._approve",
      "offset": [
        17554,
        17622
      ],
      "op": "ADD",
      "path": "0"
    },
    "1960": {
      "fn": "Philcoin._approve",
      "offset": [
        17554,
        17622
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1961": {
      "fn": "Philcoin._approve",
      "offset": [
        17554,
        17622
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xB81"
    },
    "1964": {
      "fn": "Philcoin._approve",
      "offset": [
        17554,
        17622
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x24"
    },
    "1966": {
      "fn": "Philcoin._approve",
      "offset": [
        17554,
        17622
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1967": {
      "fn": "Philcoin._approve",
      "offset": [
        17554,
        17622
      ],
      "op": "CODECOPY",
      "path": "0"
    },
    "1968": {
      "fn": "Philcoin._approve",
      "offset": [
        17554,
        17622
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1970": {
      "fn": "Philcoin._approve",
      "offset": [
        17554,
        17622
      ],
      "op": "ADD",
      "path": "0"
    },
    "1971": {
      "fn": "Philcoin._approve",
      "offset": [
        17554,
        17622
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1972": {
      "fn": "Philcoin._approve",
      "offset": [
        17554,
        17622
      ],
      "op": "POP",
      "path": "0"
    },
    "1973": {
      "fn": "Philcoin._approve",
      "offset": [
        17554,
        17622
      ],
      "op": "POP",
      "path": "0"
    },
    "1974": {
      "fn": "Philcoin._approve",
      "offset": [
        17554,
        17622
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1976": {
      "fn": "Philcoin._approve",
      "offset": [
        17554,
        17622
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1977": {
      "fn": "Philcoin._approve",
      "offset": [
        17554,
        17622
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1978": {
      "fn": "Philcoin._approve",
      "offset": [
        17554,
        17622
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1979": {
      "fn": "Philcoin._approve",
      "offset": [
        17554,
        17622
      ],
      "op": "SUB",
      "path": "0"
    },
    "1980": {
      "fn": "Philcoin._approve",
      "offset": [
        17554,
        17622
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1981": {
      "fn": "Philcoin._approve",
      "offset": [
        17554,
        17622
      ],
      "op": "REVERT",
      "path": "0"
    },
    "1982": {
      "fn": "Philcoin._approve",
      "offset": [
        17554,
        17622
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1983": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1985": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1987": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1989": {
      "op": "SHL"
    },
    "1990": {
      "op": "SUB"
    },
    "1991": {
      "fn": "Philcoin._approve",
      "offset": [
        17636,
        17657
      ],
      "op": "DUP3",
      "path": "0",
      "statement": 21
    },
    "1992": {
      "branch": 37,
      "fn": "Philcoin._approve",
      "offset": [
        17636,
        17657
      ],
      "op": "AND",
      "path": "0"
    },
    "1993": {
      "fn": "Philcoin._approve",
      "offset": [
        17628,
        17696
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x803"
    },
    "1996": {
      "branch": 37,
      "fn": "Philcoin._approve",
      "offset": [
        17628,
        17696
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1997": {
      "fn": "Philcoin._approve",
      "offset": [
        17628,
        17696
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1999": {
      "fn": "Philcoin._approve",
      "offset": [
        17628,
        17696
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2000": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2004": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2006": {
      "op": "SHL"
    },
    "2007": {
      "fn": "Philcoin._approve",
      "offset": [
        17628,
        17696
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2008": {
      "fn": "Philcoin._approve",
      "offset": [
        17628,
        17696
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2009": {
      "fn": "Philcoin._approve",
      "offset": [
        17628,
        17696
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "2011": {
      "fn": "Philcoin._approve",
      "offset": [
        17628,
        17696
      ],
      "op": "ADD",
      "path": "0"
    },
    "2012": {
      "fn": "Philcoin._approve",
      "offset": [
        17628,
        17696
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2013": {
      "fn": "Philcoin._approve",
      "offset": [
        17628,
        17696
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2014": {
      "fn": "Philcoin._approve",
      "offset": [
        17628,
        17696
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "2016": {
      "fn": "Philcoin._approve",
      "offset": [
        17628,
        17696
      ],
      "op": "ADD",
      "path": "0"
    },
    "2017": {
      "fn": "Philcoin._approve",
      "offset": [
        17628,
        17696
      ],
      "op": "DUP3",
      "path": "0"
    },
    "2018": {
      "fn": "Philcoin._approve",
      "offset": [
        17628,
        17696
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2019": {
      "fn": "Philcoin._approve",
      "offset": [
        17628,
        17696
      ],
      "op": "SUB",
      "path": "0"
    },
    "2020": {
      "fn": "Philcoin._approve",
      "offset": [
        17628,
        17696
      ],
      "op": "DUP3",
      "path": "0"
    },
    "2021": {
      "fn": "Philcoin._approve",
      "offset": [
        17628,
        17696
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2022": {
      "fn": "Philcoin._approve",
      "offset": [
        17628,
        17696
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x22"
    },
    "2024": {
      "fn": "Philcoin._approve",
      "offset": [
        17628,
        17696
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2025": {
      "fn": "Philcoin._approve",
      "offset": [
        17628,
        17696
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2026": {
      "fn": "Philcoin._approve",
      "offset": [
        17628,
        17696
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "2028": {
      "fn": "Philcoin._approve",
      "offset": [
        17628,
        17696
      ],
      "op": "ADD",
      "path": "0"
    },
    "2029": {
      "fn": "Philcoin._approve",
      "offset": [
        17628,
        17696
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2030": {
      "fn": "Philcoin._approve",
      "offset": [
        17628,
        17696
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xC61"
    },
    "2033": {
      "fn": "Philcoin._approve",
      "offset": [
        17628,
        17696
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x22"
    },
    "2035": {
      "fn": "Philcoin._approve",
      "offset": [
        17628,
        17696
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2036": {
      "fn": "Philcoin._approve",
      "offset": [
        17628,
        17696
      ],
      "op": "CODECOPY",
      "path": "0"
    },
    "2037": {
      "fn": "Philcoin._approve",
      "offset": [
        17628,
        17696
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2039": {
      "fn": "Philcoin._approve",
      "offset": [
        17628,
        17696
      ],
      "op": "ADD",
      "path": "0"
    },
    "2040": {
      "fn": "Philcoin._approve",
      "offset": [
        17628,
        17696
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2041": {
      "fn": "Philcoin._approve",
      "offset": [
        17628,
        17696
      ],
      "op": "POP",
      "path": "0"
    },
    "2042": {
      "fn": "Philcoin._approve",
      "offset": [
        17628,
        17696
      ],
      "op": "POP",
      "path": "0"
    },
    "2043": {
      "fn": "Philcoin._approve",
      "offset": [
        17628,
        17696
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2045": {
      "fn": "Philcoin._approve",
      "offset": [
        17628,
        17696
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2046": {
      "fn": "Philcoin._approve",
      "offset": [
        17628,
        17696
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2047": {
      "fn": "Philcoin._approve",
      "offset": [
        17628,
        17696
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2048": {
      "fn": "Philcoin._approve",
      "offset": [
        17628,
        17696
      ],
      "op": "SUB",
      "path": "0"
    },
    "2049": {
      "fn": "Philcoin._approve",
      "offset": [
        17628,
        17696
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2050": {
      "fn": "Philcoin._approve",
      "offset": [
        17628,
        17696
      ],
      "op": "REVERT",
      "path": "0"
    },
    "2051": {
      "fn": "Philcoin._approve",
      "offset": [
        17628,
        17696
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2052": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2054": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2056": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2058": {
      "op": "SHL"
    },
    "2059": {
      "op": "SUB"
    },
    "2060": {
      "fn": "Philcoin._approve",
      "offset": [
        17703,
        17721
      ],
      "op": "DUP1",
      "path": "0",
      "statement": 22
    },
    "2061": {
      "fn": "Philcoin._approve",
      "offset": [
        17703,
        17721
      ],
      "op": "DUP5",
      "path": "0"
    },
    "2062": {
      "fn": "Philcoin._approve",
      "offset": [
        17703,
        17721
      ],
      "op": "AND",
      "path": "0"
    },
    "2063": {
      "fn": "Philcoin._approve",
      "offset": [
        17703,
        17721
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2065": {
      "fn": "Philcoin._approve",
      "offset": [
        17703,
        17721
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2066": {
      "fn": "Philcoin._approve",
      "offset": [
        17703,
        17721
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2067": {
      "fn": "Philcoin._approve",
      "offset": [
        17703,
        17721
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2068": {
      "fn": "Philcoin._approve",
      "offset": [
        17703,
        17714
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2"
    },
    "2070": {
      "fn": "Philcoin._approve",
      "offset": [
        17703,
        17721
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "2072": {
      "fn": "Philcoin._approve",
      "offset": [
        17703,
        17721
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2073": {
      "fn": "Philcoin._approve",
      "offset": [
        17703,
        17721
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2074": {
      "fn": "Philcoin._approve",
      "offset": [
        17703,
        17721
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2075": {
      "fn": "Philcoin._approve",
      "offset": [
        17703,
        17721
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2077": {
      "fn": "Philcoin._approve",
      "offset": [
        17703,
        17721
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2078": {
      "fn": "Philcoin._approve",
      "offset": [
        17703,
        17721
      ],
      "op": "DUP4",
      "path": "0"
    },
    "2079": {
      "fn": "Philcoin._approve",
      "offset": [
        17703,
        17721
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "2080": {
      "fn": "Philcoin._approve",
      "offset": [
        17703,
        17730
      ],
      "op": "SWAP5",
      "path": "0"
    },
    "2081": {
      "fn": "Philcoin._approve",
      "offset": [
        17703,
        17730
      ],
      "op": "DUP8",
      "path": "0"
    },
    "2082": {
      "fn": "Philcoin._approve",
      "offset": [
        17703,
        17730
      ],
      "op": "AND",
      "path": "0"
    },
    "2083": {
      "fn": "Philcoin._approve",
      "offset": [
        17703,
        17730
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2084": {
      "fn": "Philcoin._approve",
      "offset": [
        17703,
        17730
      ],
      "op": "DUP5",
      "path": "0"
    },
    "2085": {
      "fn": "Philcoin._approve",
      "offset": [
        17703,
        17730
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2086": {
      "fn": "Philcoin._approve",
      "offset": [
        17703,
        17730
      ],
      "op": "SWAP5",
      "path": "0"
    },
    "2087": {
      "fn": "Philcoin._approve",
      "offset": [
        17703,
        17730
      ],
      "op": "DUP3",
      "path": "0"
    },
    "2088": {
      "fn": "Philcoin._approve",
      "offset": [
        17703,
        17730
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2089": {
      "fn": "Philcoin._approve",
      "offset": [
        17703,
        17730
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2090": {
      "fn": "Philcoin._approve",
      "offset": [
        17703,
        17730
      ],
      "op": "DUP3",
      "path": "0"
    },
    "2091": {
      "fn": "Philcoin._approve",
      "offset": [
        17703,
        17730
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2092": {
      "fn": "Philcoin._approve",
      "offset": [
        17703,
        17730
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "2093": {
      "fn": "Philcoin._approve",
      "offset": [
        17703,
        17739
      ],
      "op": "DUP6",
      "path": "0"
    },
    "2094": {
      "fn": "Philcoin._approve",
      "offset": [
        17703,
        17739
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2095": {
      "fn": "Philcoin._approve",
      "offset": [
        17703,
        17739
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "2096": {
      "fn": "Philcoin._approve",
      "offset": [
        17750,
        17782
      ],
      "op": "DUP2",
      "path": "0",
      "statement": 23
    },
    "2097": {
      "fn": "Philcoin._approve",
      "offset": [
        17750,
        17782
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2098": {
      "fn": "Philcoin._approve",
      "offset": [
        17750,
        17782
      ],
      "op": "DUP6",
      "path": "0"
    },
    "2099": {
      "fn": "Philcoin._approve",
      "offset": [
        17750,
        17782
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2100": {
      "fn": "Philcoin._approve",
      "offset": [
        17750,
        17782
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2101": {
      "fn": "Philcoin._approve",
      "offset": [
        17750,
        17782
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2102": {
      "fn": "Philcoin._approve",
      "offset": [
        17750,
        17782
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2103": {
      "fn": "Philcoin._approve",
      "offset": [
        17750,
        17782
      ],
      "op": "PUSH32",
      "path": "0",
      "value": "0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
    },
    "2136": {
      "fn": "Philcoin._approve",
      "offset": [
        17750,
        17782
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "2137": {
      "fn": "Philcoin._approve",
      "offset": [
        17750,
        17782
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2138": {
      "fn": "Philcoin._approve",
      "offset": [
        17750,
        17782
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2139": {
      "fn": "Philcoin._approve",
      "offset": [
        17750,
        17782
      ],
      "op": "SUB",
      "path": "0"
    },
    "2140": {
      "fn": "Philcoin._approve",
      "offset": [
        17750,
        17782
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2141": {
      "fn": "Philcoin._approve",
      "offset": [
        17750,
        17782
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2142": {
      "fn": "Philcoin._approve",
      "offset": [
        17750,
        17782
      ],
      "op": "ADD",
      "path": "0"
    },
    "2143": {
      "fn": "Philcoin._approve",
      "offset": [
        17750,
        17782
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2144": {
      "fn": "Philcoin._approve",
      "offset": [
        17750,
        17782
      ],
      "op": "LOG3",
      "path": "0"
    },
    "2145": {
      "fn": "Philcoin._approve",
      "offset": [
        17473,
        17787
      ],
      "op": "POP",
      "path": "0"
    },
    "2146": {
      "fn": "Philcoin._approve",
      "offset": [
        17473,
        17787
      ],
      "op": "POP",
      "path": "0"
    },
    "2147": {
      "fn": "Philcoin._approve",
      "offset": [
        17473,
        17787
      ],
      "op": "POP",
      "path": "0"
    },
    "2148": {
      "fn": "Philcoin._approve",
      "jump": "o",
      "offset": [
        17473,
        17787
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2149": {
      "fn": "Philcoin._transfer",
      "offset": [
        15481,
        15923
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2150": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2152": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2154": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2156": {
      "op": "SHL"
    },
    "2157": {
      "op": "SUB"
    },
    "2158": {
      "fn": "Philcoin._transfer",
      "offset": [
        15574,
        15594
      ],
      "op": "DUP4",
      "path": "0",
      "statement": 24
    },
    "2159": {
      "branch": 38,
      "fn": "Philcoin._transfer",
      "offset": [
        15574,
        15594
      ],
      "op": "AND",
      "path": "0"
    },
    "2160": {
      "fn": "Philcoin._transfer",
      "offset": [
        15566,
        15636
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x8AA"
    },
    "2163": {
      "branch": 38,
      "fn": "Philcoin._transfer",
      "offset": [
        15566,
        15636
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "2164": {
      "fn": "Philcoin._transfer",
      "offset": [
        15566,
        15636
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2166": {
      "fn": "Philcoin._transfer",
      "offset": [
        15566,
        15636
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2167": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2171": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2173": {
      "op": "SHL"
    },
    "2174": {
      "fn": "Philcoin._transfer",
      "offset": [
        15566,
        15636
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2175": {
      "fn": "Philcoin._transfer",
      "offset": [
        15566,
        15636
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2176": {
      "fn": "Philcoin._transfer",
      "offset": [
        15566,
        15636
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "2178": {
      "fn": "Philcoin._transfer",
      "offset": [
        15566,
        15636
      ],
      "op": "ADD",
      "path": "0"
    },
    "2179": {
      "fn": "Philcoin._transfer",
      "offset": [
        15566,
        15636
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2180": {
      "fn": "Philcoin._transfer",
      "offset": [
        15566,
        15636
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2181": {
      "fn": "Philcoin._transfer",
      "offset": [
        15566,
        15636
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "2183": {
      "fn": "Philcoin._transfer",
      "offset": [
        15566,
        15636
      ],
      "op": "ADD",
      "path": "0"
    },
    "2184": {
      "fn": "Philcoin._transfer",
      "offset": [
        15566,
        15636
      ],
      "op": "DUP3",
      "path": "0"
    },
    "2185": {
      "fn": "Philcoin._transfer",
      "offset": [
        15566,
        15636
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2186": {
      "fn": "Philcoin._transfer",
      "offset": [
        15566,
        15636
      ],
      "op": "SUB",
      "path": "0"
    },
    "2187": {
      "fn": "Philcoin._transfer",
      "offset": [
        15566,
        15636
      ],
      "op": "DUP3",
      "path": "0"
    },
    "2188": {
      "fn": "Philcoin._transfer",
      "offset": [
        15566,
        15636
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2189": {
      "fn": "Philcoin._transfer",
      "offset": [
        15566,
        15636
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x25"
    },
    "2191": {
      "fn": "Philcoin._transfer",
      "offset": [
        15566,
        15636
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2192": {
      "fn": "Philcoin._transfer",
      "offset": [
        15566,
        15636
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2193": {
      "fn": "Philcoin._transfer",
      "offset": [
        15566,
        15636
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "2195": {
      "fn": "Philcoin._transfer",
      "offset": [
        15566,
        15636
      ],
      "op": "ADD",
      "path": "0"
    },
    "2196": {
      "fn": "Philcoin._transfer",
      "offset": [
        15566,
        15636
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2197": {
      "fn": "Philcoin._transfer",
      "offset": [
        15566,
        15636
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xB5C"
    },
    "2200": {
      "fn": "Philcoin._transfer",
      "offset": [
        15566,
        15636
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x25"
    },
    "2202": {
      "fn": "Philcoin._transfer",
      "offset": [
        15566,
        15636
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2203": {
      "fn": "Philcoin._transfer",
      "offset": [
        15566,
        15636
      ],
      "op": "CODECOPY",
      "path": "0"
    },
    "2204": {
      "fn": "Philcoin._transfer",
      "offset": [
        15566,
        15636
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2206": {
      "fn": "Philcoin._transfer",
      "offset": [
        15566,
        15636
      ],
      "op": "ADD",
      "path": "0"
    },
    "2207": {
      "fn": "Philcoin._transfer",
      "offset": [
        15566,
        15636
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2208": {
      "fn": "Philcoin._transfer",
      "offset": [
        15566,
        15636
      ],
      "op": "POP",
      "path": "0"
    },
    "2209": {
      "fn": "Philcoin._transfer",
      "offset": [
        15566,
        15636
      ],
      "op": "POP",
      "path": "0"
    },
    "2210": {
      "fn": "Philcoin._transfer",
      "offset": [
        15566,
        15636
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2212": {
      "fn": "Philcoin._transfer",
      "offset": [
        15566,
        15636
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2213": {
      "fn": "Philcoin._transfer",
      "offset": [
        15566,
        15636
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2214": {
      "fn": "Philcoin._transfer",
      "offset": [
        15566,
        15636
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2215": {
      "fn": "Philcoin._transfer",
      "offset": [
        15566,
        15636
      ],
      "op": "SUB",
      "path": "0"
    },
    "2216": {
      "fn": "Philcoin._transfer",
      "offset": [
        15566,
        15636
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2217": {
      "fn": "Philcoin._transfer",
      "offset": [
        15566,
        15636
      ],
      "op": "REVERT",
      "path": "0"
    },
    "2218": {
      "fn": "Philcoin._transfer",
      "offset": [
        15566,
        15636
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2219": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2221": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2223": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2225": {
      "op": "SHL"
    },
    "2226": {
      "op": "SUB"
    },
    "2227": {
      "fn": "Philcoin._transfer",
      "offset": [
        15650,
        15673
      ],
      "op": "DUP3",
      "path": "0",
      "statement": 25
    },
    "2228": {
      "branch": 39,
      "fn": "Philcoin._transfer",
      "offset": [
        15650,
        15673
      ],
      "op": "AND",
      "path": "0"
    },
    "2229": {
      "fn": "Philcoin._transfer",
      "offset": [
        15642,
        15713
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x8EF"
    },
    "2232": {
      "branch": 39,
      "fn": "Philcoin._transfer",
      "offset": [
        15642,
        15713
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "2233": {
      "fn": "Philcoin._transfer",
      "offset": [
        15642,
        15713
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2235": {
      "fn": "Philcoin._transfer",
      "offset": [
        15642,
        15713
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2236": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2240": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2242": {
      "op": "SHL"
    },
    "2243": {
      "fn": "Philcoin._transfer",
      "offset": [
        15642,
        15713
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2244": {
      "fn": "Philcoin._transfer",
      "offset": [
        15642,
        15713
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2245": {
      "fn": "Philcoin._transfer",
      "offset": [
        15642,
        15713
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "2247": {
      "fn": "Philcoin._transfer",
      "offset": [
        15642,
        15713
      ],
      "op": "ADD",
      "path": "0"
    },
    "2248": {
      "fn": "Philcoin._transfer",
      "offset": [
        15642,
        15713
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2249": {
      "fn": "Philcoin._transfer",
      "offset": [
        15642,
        15713
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2250": {
      "fn": "Philcoin._transfer",
      "offset": [
        15642,
        15713
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "2252": {
      "fn": "Philcoin._transfer",
      "offset": [
        15642,
        15713
      ],
      "op": "ADD",
      "path": "0"
    },
    "2253": {
      "fn": "Philcoin._transfer",
      "offset": [
        15642,
        15713
      ],
      "op": "DUP3",
      "path": "0"
    },
    "2254": {
      "fn": "Philcoin._transfer",
      "offset": [
        15642,
        15713
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2255": {
      "fn": "Philcoin._transfer",
      "offset": [
        15642,
        15713
      ],
      "op": "SUB",
      "path": "0"
    },
    "2256": {
      "fn": "Philcoin._transfer",
      "offset": [
        15642,
        15713
      ],
      "op": "DUP3",
      "path": "0"
    },
    "2257": {
      "fn": "Philcoin._transfer",
      "offset": [
        15642,
        15713
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2258": {
      "fn": "Philcoin._transfer",
      "offset": [
        15642,
        15713
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x23"
    },
    "2260": {
      "fn": "Philcoin._transfer",
      "offset": [
        15642,
        15713
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2261": {
      "fn": "Philcoin._transfer",
      "offset": [
        15642,
        15713
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2262": {
      "fn": "Philcoin._transfer",
      "offset": [
        15642,
        15713
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "2264": {
      "fn": "Philcoin._transfer",
      "offset": [
        15642,
        15713
      ],
      "op": "ADD",
      "path": "0"
    },
    "2265": {
      "fn": "Philcoin._transfer",
      "offset": [
        15642,
        15713
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2266": {
      "fn": "Philcoin._transfer",
      "offset": [
        15642,
        15713
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xC19"
    },
    "2269": {
      "fn": "Philcoin._transfer",
      "offset": [
        15642,
        15713
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x23"
    },
    "2271": {
      "fn": "Philcoin._transfer",
      "offset": [
        15642,
        15713
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2272": {
      "fn": "Philcoin._transfer",
      "offset": [
        15642,
        15713
      ],
      "op": "CODECOPY",
      "path": "0"
    },
    "2273": {
      "fn": "Philcoin._transfer",
      "offset": [
        15642,
        15713
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2275": {
      "fn": "Philcoin._transfer",
      "offset": [
        15642,
        15713
      ],
      "op": "ADD",
      "path": "0"
    },
    "2276": {
      "fn": "Philcoin._transfer",
      "offset": [
        15642,
        15713
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2277": {
      "fn": "Philcoin._transfer",
      "offset": [
        15642,
        15713
      ],
      "op": "POP",
      "path": "0"
    },
    "2278": {
      "fn": "Philcoin._transfer",
      "offset": [
        15642,
        15713
      ],
      "op": "POP",
      "path": "0"
    },
    "2279": {
      "fn": "Philcoin._transfer",
      "offset": [
        15642,
        15713
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2281": {
      "fn": "Philcoin._transfer",
      "offset": [
        15642,
        15713
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2282": {
      "fn": "Philcoin._transfer",
      "offset": [
        15642,
        15713
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2283": {
      "fn": "Philcoin._transfer",
      "offset": [
        15642,
        15713
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2284": {
      "fn": "Philcoin._transfer",
      "offset": [
        15642,
        15713
      ],
      "op": "SUB",
      "path": "0"
    },
    "2285": {
      "fn": "Philcoin._transfer",
      "offset": [
        15642,
        15713
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2286": {
      "fn": "Philcoin._transfer",
      "offset": [
        15642,
        15713
      ],
      "op": "REVERT",
      "path": "0"
    },
    "2287": {
      "fn": "Philcoin._transfer",
      "offset": [
        15642,
        15713
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2288": {
      "fn": "Philcoin._transfer",
      "offset": [
        15740,
        15811
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 26,
      "value": "0x932"
    },
    "2291": {
      "fn": "Philcoin._transfer",
      "offset": [
        15762,
        15768
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2292": {
      "fn": "Philcoin._transfer",
      "offset": [
        15740,
        15811
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2294": {
      "fn": "Philcoin._transfer",
      "offset": [
        15740,
        15811
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2295": {
      "fn": "Philcoin._transfer",
      "offset": [
        15740,
        15811
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2296": {
      "fn": "Philcoin._transfer",
      "offset": [
        15740,
        15811
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x60"
    },
    "2298": {
      "fn": "Philcoin._transfer",
      "offset": [
        15740,
        15811
      ],
      "op": "ADD",
      "path": "0"
    },
    "2299": {
      "fn": "Philcoin._transfer",
      "offset": [
        15740,
        15811
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2301": {
      "fn": "Philcoin._transfer",
      "offset": [
        15740,
        15811
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2302": {
      "fn": "Philcoin._transfer",
      "offset": [
        15740,
        15811
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2303": {
      "fn": "Philcoin._transfer",
      "offset": [
        15740,
        15811
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x26"
    },
    "2305": {
      "fn": "Philcoin._transfer",
      "offset": [
        15740,
        15811
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2306": {
      "fn": "Philcoin._transfer",
      "offset": [
        15740,
        15811
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2307": {
      "fn": "Philcoin._transfer",
      "offset": [
        15740,
        15811
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "2309": {
      "fn": "Philcoin._transfer",
      "offset": [
        15740,
        15811
      ],
      "op": "ADD",
      "path": "0"
    },
    "2310": {
      "fn": "Philcoin._transfer",
      "offset": [
        15740,
        15811
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xBF3"
    },
    "2313": {
      "fn": "Philcoin._transfer",
      "offset": [
        15740,
        15811
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x26"
    },
    "2315": {
      "fn": "Philcoin._transfer",
      "offset": [
        15740,
        15811
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2316": {
      "fn": "Philcoin._transfer",
      "offset": [
        15740,
        15811
      ],
      "op": "CODECOPY",
      "path": "0"
    },
    "2317": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2319": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2321": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2323": {
      "op": "SHL"
    },
    "2324": {
      "op": "SUB"
    },
    "2325": {
      "fn": "Philcoin._transfer",
      "offset": [
        15740,
        15757
      ],
      "op": "DUP7",
      "path": "0"
    },
    "2326": {
      "fn": "Philcoin._transfer",
      "offset": [
        15740,
        15757
      ],
      "op": "AND",
      "path": "0"
    },
    "2327": {
      "fn": "Philcoin._transfer",
      "offset": [
        15740,
        15757
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2329": {
      "fn": "Philcoin._transfer",
      "offset": [
        15740,
        15757
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2330": {
      "fn": "Philcoin._transfer",
      "offset": [
        15740,
        15757
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2331": {
      "fn": "Philcoin._transfer",
      "offset": [
        15740,
        15757
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2332": {
      "fn": "Philcoin._transfer",
      "offset": [
        15740,
        15749
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "2334": {
      "fn": "Philcoin._transfer",
      "offset": [
        15740,
        15757
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "2336": {
      "fn": "Philcoin._transfer",
      "offset": [
        15740,
        15757
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2337": {
      "fn": "Philcoin._transfer",
      "offset": [
        15740,
        15757
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2339": {
      "fn": "Philcoin._transfer",
      "offset": [
        15740,
        15757
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2340": {
      "fn": "Philcoin._transfer",
      "offset": [
        15740,
        15757
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "2341": {
      "fn": "Philcoin._transfer",
      "offset": [
        15740,
        15757
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "2342": {
      "fn": "Philcoin._transfer",
      "offset": [
        15740,
        15757
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2343": {
      "fn": "Philcoin._transfer",
      "offset": [
        15740,
        15811
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2344": {
      "fn": "Philcoin._transfer",
      "offset": [
        15740,
        15811
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xFFFFFFFF"
    },
    "2349": {
      "fn": "Philcoin._transfer",
      "offset": [
        15740,
        15761
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x9C3"
    },
    "2352": {
      "fn": "Philcoin._transfer",
      "offset": [
        15740,
        15811
      ],
      "op": "AND",
      "path": "0"
    },
    "2353": {
      "fn": "Philcoin._transfer",
      "jump": "i",
      "offset": [
        15740,
        15811
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2354": {
      "fn": "Philcoin._transfer",
      "offset": [
        15740,
        15811
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2355": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2357": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2359": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2361": {
      "op": "SHL"
    },
    "2362": {
      "op": "SUB"
    },
    "2363": {
      "fn": "Philcoin._transfer",
      "offset": [
        15720,
        15737
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2364": {
      "fn": "Philcoin._transfer",
      "offset": [
        15720,
        15737
      ],
      "op": "DUP6",
      "path": "0"
    },
    "2365": {
      "fn": "Philcoin._transfer",
      "offset": [
        15720,
        15737
      ],
      "op": "AND",
      "path": "0"
    },
    "2366": {
      "fn": "Philcoin._transfer",
      "offset": [
        15720,
        15737
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2368": {
      "fn": "Philcoin._transfer",
      "offset": [
        15720,
        15737
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2369": {
      "fn": "Philcoin._transfer",
      "offset": [
        15720,
        15737
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2370": {
      "fn": "Philcoin._transfer",
      "offset": [
        15720,
        15737
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2371": {
      "fn": "Philcoin._transfer",
      "offset": [
        15720,
        15729
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "2373": {
      "fn": "Philcoin._transfer",
      "offset": [
        15720,
        15737
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "2375": {
      "fn": "Philcoin._transfer",
      "offset": [
        15720,
        15737
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2376": {
      "fn": "Philcoin._transfer",
      "offset": [
        15720,
        15737
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2378": {
      "fn": "Philcoin._transfer",
      "offset": [
        15720,
        15737
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2379": {
      "fn": "Philcoin._transfer",
      "offset": [
        15720,
        15737
      ],
      "op": "DUP3",
      "path": "0"
    },
    "2380": {
      "fn": "Philcoin._transfer",
      "offset": [
        15720,
        15737
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "2381": {
      "fn": "Philcoin._transfer",
      "offset": [
        15720,
        15811
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "2382": {
      "fn": "Philcoin._transfer",
      "offset": [
        15720,
        15811
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2383": {
      "fn": "Philcoin._transfer",
      "offset": [
        15720,
        15811
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "2384": {
      "fn": "Philcoin._transfer",
      "offset": [
        15720,
        15811
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "2385": {
      "fn": "Philcoin._transfer",
      "offset": [
        15840,
        15860
      ],
      "op": "SWAP1",
      "path": "0",
      "statement": 27
    },
    "2386": {
      "fn": "Philcoin._transfer",
      "offset": [
        15840,
        15860
      ],
      "op": "DUP5",
      "path": "0"
    },
    "2387": {
      "fn": "Philcoin._transfer",
      "offset": [
        15840,
        15860
      ],
      "op": "AND",
      "path": "0"
    },
    "2388": {
      "fn": "Philcoin._transfer",
      "offset": [
        15840,
        15860
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2389": {
      "fn": "Philcoin._transfer",
      "offset": [
        15840,
        15860
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2390": {
      "fn": "Philcoin._transfer",
      "offset": [
        15840,
        15860
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "2391": {
      "fn": "Philcoin._transfer",
      "offset": [
        15840,
        15860
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "2392": {
      "fn": "Philcoin._transfer",
      "offset": [
        15840,
        15872
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x967"
    },
    "2395": {
      "fn": "Philcoin._transfer",
      "offset": [
        15840,
        15872
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2396": {
      "fn": "Philcoin._transfer",
      "offset": [
        15865,
        15871
      ],
      "op": "DUP3",
      "path": "0"
    },
    "2397": {
      "fn": "Philcoin._transfer",
      "offset": [
        15840,
        15872
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xFFFFFFFF"
    },
    "2402": {
      "fn": "Philcoin._transfer",
      "offset": [
        15840,
        15864
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xA5A"
    },
    "2405": {
      "fn": "Philcoin._transfer",
      "offset": [
        15840,
        15872
      ],
      "op": "AND",
      "path": "0"
    },
    "2406": {
      "fn": "Philcoin._transfer",
      "jump": "i",
      "offset": [
        15840,
        15872
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2407": {
      "fn": "Philcoin._transfer",
      "offset": [
        15840,
        15872
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2408": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2410": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2412": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2414": {
      "op": "SHL"
    },
    "2415": {
      "op": "SUB"
    },
    "2416": {
      "fn": "Philcoin._transfer",
      "offset": [
        15817,
        15837
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2417": {
      "fn": "Philcoin._transfer",
      "offset": [
        15817,
        15837
      ],
      "op": "DUP5",
      "path": "0"
    },
    "2418": {
      "fn": "Philcoin._transfer",
      "offset": [
        15817,
        15837
      ],
      "op": "AND",
      "path": "0"
    },
    "2419": {
      "fn": "Philcoin._transfer",
      "offset": [
        15817,
        15837
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2421": {
      "fn": "Philcoin._transfer",
      "offset": [
        15817,
        15837
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2422": {
      "fn": "Philcoin._transfer",
      "offset": [
        15817,
        15837
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2423": {
      "fn": "Philcoin._transfer",
      "offset": [
        15817,
        15837
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2424": {
      "fn": "Philcoin._transfer",
      "offset": [
        15817,
        15826
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "2426": {
      "fn": "Philcoin._transfer",
      "offset": [
        15817,
        15837
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "2428": {
      "fn": "Philcoin._transfer",
      "offset": [
        15817,
        15837
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2429": {
      "fn": "Philcoin._transfer",
      "offset": [
        15817,
        15837
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2430": {
      "fn": "Philcoin._transfer",
      "offset": [
        15817,
        15837
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2431": {
      "fn": "Philcoin._transfer",
      "offset": [
        15817,
        15837
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2433": {
      "fn": "Philcoin._transfer",
      "offset": [
        15817,
        15837
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2434": {
      "fn": "Philcoin._transfer",
      "offset": [
        15817,
        15837
      ],
      "op": "DUP3",
      "path": "0"
    },
    "2435": {
      "fn": "Philcoin._transfer",
      "offset": [
        15817,
        15837
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2436": {
      "fn": "Philcoin._transfer",
      "offset": [
        15817,
        15837
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "2437": {
      "fn": "Philcoin._transfer",
      "offset": [
        15817,
        15872
      ],
      "op": "SWAP5",
      "path": "0"
    },
    "2438": {
      "fn": "Philcoin._transfer",
      "offset": [
        15817,
        15872
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2439": {
      "fn": "Philcoin._transfer",
      "offset": [
        15817,
        15872
      ],
      "op": "SWAP5",
      "path": "0"
    },
    "2440": {
      "fn": "Philcoin._transfer",
      "offset": [
        15817,
        15872
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "2441": {
      "fn": "Philcoin._transfer",
      "offset": [
        15883,
        15918
      ],
      "op": "DUP1",
      "path": "0",
      "statement": 28
    },
    "2442": {
      "fn": "Philcoin._transfer",
      "offset": [
        15883,
        15918
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2443": {
      "fn": "Philcoin._transfer",
      "offset": [
        15883,
        15918
      ],
      "op": "DUP6",
      "path": "0"
    },
    "2444": {
      "fn": "Philcoin._transfer",
      "offset": [
        15883,
        15918
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2445": {
      "fn": "Philcoin._transfer",
      "offset": [
        15883,
        15918
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2446": {
      "fn": "Philcoin._transfer",
      "offset": [
        15883,
        15918
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2447": {
      "fn": "Philcoin._transfer",
      "offset": [
        15883,
        15918
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2448": {
      "fn": "Philcoin._transfer",
      "offset": [
        15817,
        15837
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2449": {
      "fn": "Philcoin._transfer",
      "offset": [
        15817,
        15837
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "2450": {
      "fn": "Philcoin._transfer",
      "offset": [
        15883,
        15918
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "2451": {
      "fn": "Philcoin._transfer",
      "offset": [
        15883,
        15918
      ],
      "op": "DUP8",
      "path": "0"
    },
    "2452": {
      "fn": "Philcoin._transfer",
      "offset": [
        15883,
        15918
      ],
      "op": "AND",
      "path": "0"
    },
    "2453": {
      "fn": "Philcoin._transfer",
      "offset": [
        15883,
        15918
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "2454": {
      "fn": "Philcoin._transfer",
      "offset": [
        15883,
        15918
      ],
      "op": "PUSH32",
      "path": "0",
      "value": "0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
    },
    "2487": {
      "fn": "Philcoin._transfer",
      "offset": [
        15883,
        15918
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "2488": {
      "fn": "Philcoin._transfer",
      "offset": [
        15883,
        15918
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2489": {
      "fn": "Philcoin._transfer",
      "offset": [
        15883,
        15918
      ],
      "op": "DUP3",
      "path": "0"
    },
    "2490": {
      "fn": "Philcoin._transfer",
      "offset": [
        15883,
        15918
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2491": {
      "fn": "Philcoin._transfer",
      "offset": [
        15883,
        15918
      ],
      "op": "SUB",
      "path": "0"
    },
    "2492": {
      "fn": "Philcoin._transfer",
      "offset": [
        15883,
        15918
      ],
      "op": "ADD",
      "path": "0"
    },
    "2493": {
      "fn": "Philcoin._transfer",
      "offset": [
        15883,
        15918
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2494": {
      "fn": "Philcoin._transfer",
      "offset": [
        15883,
        15918
      ],
      "op": "LOG3",
      "path": "0"
    },
    "2495": {
      "fn": "Philcoin._transfer",
      "offset": [
        15481,
        15923
      ],
      "op": "POP",
      "path": "0"
    },
    "2496": {
      "fn": "Philcoin._transfer",
      "offset": [
        15481,
        15923
      ],
      "op": "POP",
      "path": "0"
    },
    "2497": {
      "fn": "Philcoin._transfer",
      "offset": [
        15481,
        15923
      ],
      "op": "POP",
      "path": "0"
    },
    "2498": {
      "fn": "Philcoin._transfer",
      "jump": "o",
      "offset": [
        15481,
        15923
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2499": {
      "fn": "SafeMath.sub",
      "offset": [
        5492,
        5665
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2500": {
      "fn": "SafeMath.sub",
      "offset": [
        5578,
        5585
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2502": {
      "fn": "SafeMath.sub",
      "offset": [
        5609,
        5621
      ],
      "op": "DUP2",
      "path": "0",
      "statement": 29
    },
    "2503": {
      "fn": "SafeMath.sub",
      "offset": [
        5601,
        5607
      ],
      "op": "DUP5",
      "path": "0"
    },
    "2504": {
      "fn": "SafeMath.sub",
      "offset": [
        5601,
        5607
      ],
      "op": "DUP5",
      "path": "0"
    },
    "2505": {
      "fn": "SafeMath.sub",
      "offset": [
        5601,
        5607
      ],
      "op": "GT",
      "path": "0"
    },
    "2506": {
      "branch": 40,
      "fn": "SafeMath.sub",
      "offset": [
        5601,
        5607
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "2507": {
      "fn": "SafeMath.sub",
      "offset": [
        5593,
        5622
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xA52"
    },
    "2510": {
      "branch": 40,
      "fn": "SafeMath.sub",
      "offset": [
        5593,
        5622
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "2511": {
      "fn": "SafeMath.sub",
      "offset": [
        5593,
        5622
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2513": {
      "fn": "SafeMath.sub",
      "offset": [
        5593,
        5622
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2514": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2518": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2520": {
      "op": "SHL"
    },
    "2521": {
      "fn": "SafeMath.sub",
      "offset": [
        5593,
        5622
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2522": {
      "fn": "SafeMath.sub",
      "offset": [
        5593,
        5622
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2523": {
      "fn": "SafeMath.sub",
      "offset": [
        5593,
        5622
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "2525": {
      "fn": "SafeMath.sub",
      "offset": [
        5593,
        5622
      ],
      "op": "ADD",
      "path": "0"
    },
    "2526": {
      "fn": "SafeMath.sub",
      "offset": [
        5593,
        5622
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2527": {
      "fn": "SafeMath.sub",
      "offset": [
        5593,
        5622
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2528": {
      "fn": "SafeMath.sub",
      "offset": [
        5593,
        5622
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "2530": {
      "fn": "SafeMath.sub",
      "offset": [
        5593,
        5622
      ],
      "op": "ADD",
      "path": "0"
    },
    "2531": {
      "fn": "SafeMath.sub",
      "offset": [
        5593,
        5622
      ],
      "op": "DUP3",
      "path": "0"
    },
    "2532": {
      "fn": "SafeMath.sub",
      "offset": [
        5593,
        5622
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2533": {
      "fn": "SafeMath.sub",
      "offset": [
        5593,
        5622
      ],
      "op": "SUB",
      "path": "0"
    },
    "2534": {
      "fn": "SafeMath.sub",
      "offset": [
        5593,
        5622
      ],
      "op": "DUP3",
      "path": "0"
    },
    "2535": {
      "fn": "SafeMath.sub",
      "offset": [
        5593,
        5622
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2536": {
      "fn": "SafeMath.sub",
      "offset": [
        5593,
        5622
      ],
      "op": "DUP4",
      "path": "0"
    },
    "2537": {
      "fn": "SafeMath.sub",
      "offset": [
        5593,
        5622
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2538": {
      "fn": "SafeMath.sub",
      "offset": [
        5593,
        5622
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2539": {
      "fn": "SafeMath.sub",
      "offset": [
        5593,
        5622
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2540": {
      "fn": "SafeMath.sub",
      "offset": [
        5593,
        5622
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2541": {
      "fn": "SafeMath.sub",
      "offset": [
        5593,
        5622
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2542": {
      "fn": "SafeMath.sub",
      "offset": [
        5593,
        5622
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "2544": {
      "fn": "SafeMath.sub",
      "offset": [
        5593,
        5622
      ],
      "op": "ADD",
      "path": "0"
    },
    "2545": {
      "fn": "SafeMath.sub",
      "offset": [
        5593,
        5622
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2546": {
      "fn": "SafeMath.sub",
      "offset": [
        5593,
        5622
      ],
      "op": "POP",
      "path": "0"
    },
    "2547": {
      "fn": "SafeMath.sub",
      "offset": [
        5593,
        5622
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2548": {
      "fn": "SafeMath.sub",
      "offset": [
        5593,
        5622
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2549": {
      "fn": "SafeMath.sub",
      "offset": [
        5593,
        5622
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2550": {
      "fn": "SafeMath.sub",
      "offset": [
        5593,
        5622
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "2552": {
      "fn": "SafeMath.sub",
      "offset": [
        5593,
        5622
      ],
      "op": "ADD",
      "path": "0"
    },
    "2553": {
      "fn": "SafeMath.sub",
      "offset": [
        5593,
        5622
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2554": {
      "fn": "SafeMath.sub",
      "offset": [
        5593,
        5622
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2555": {
      "fn": "SafeMath.sub",
      "offset": [
        5593,
        5622
      ],
      "op": "DUP4",
      "path": "0"
    },
    "2556": {
      "fn": "SafeMath.sub",
      "offset": [
        5593,
        5622
      ],
      "op": "DUP4",
      "path": "0"
    },
    "2557": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2559": {
      "op": "JUMPDEST"
    },
    "2560": {
      "op": "DUP4"
    },
    "2561": {
      "op": "DUP2"
    },
    "2562": {
      "op": "LT"
    },
    "2563": {
      "op": "ISZERO"
    },
    "2564": {
      "op": "PUSH2",
      "value": "0xA17"
    },
    "2567": {
      "op": "JUMPI"
    },
    "2568": {
      "op": "DUP2"
    },
    "2569": {
      "op": "DUP2"
    },
    "2570": {
      "op": "ADD"
    },
    "2571": {
      "op": "MLOAD"
    },
    "2572": {
      "op": "DUP4"
    },
    "2573": {
      "op": "DUP3"
    },
    "2574": {
      "op": "ADD"
    },
    "2575": {
      "op": "MSTORE"
    },
    "2576": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2578": {
      "op": "ADD"
    },
    "2579": {
      "op": "PUSH2",
      "value": "0x9FF"
    },
    "2582": {
      "op": "JUMP"
    },
    "2583": {
      "op": "JUMPDEST"
    },
    "2584": {
      "op": "POP"
    },
    "2585": {
      "fn": "SafeMath.sub",
      "offset": [
        5593,
        5622
      ],
      "op": "POP",
      "path": "0"
    },
    "2586": {
      "fn": "SafeMath.sub",
      "offset": [
        5593,
        5622
      ],
      "op": "POP",
      "path": "0"
    },
    "2587": {
      "fn": "SafeMath.sub",
      "offset": [
        5593,
        5622
      ],
      "op": "POP",
      "path": "0"
    },
    "2588": {
      "fn": "SafeMath.sub",
      "offset": [
        5593,
        5622
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2589": {
      "fn": "SafeMath.sub",
      "offset": [
        5593,
        5622
      ],
      "op": "POP",
      "path": "0"
    },
    "2590": {
      "fn": "SafeMath.sub",
      "offset": [
        5593,
        5622
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2591": {
      "fn": "SafeMath.sub",
      "offset": [
        5593,
        5622
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2592": {
      "fn": "SafeMath.sub",
      "offset": [
        5593,
        5622
      ],
      "op": "ADD",
      "path": "0"
    },
    "2593": {
      "fn": "SafeMath.sub",
      "offset": [
        5593,
        5622
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2594": {
      "fn": "SafeMath.sub",
      "offset": [
        5593,
        5622
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "2596": {
      "fn": "SafeMath.sub",
      "offset": [
        5593,
        5622
      ],
      "op": "AND",
      "path": "0"
    },
    "2597": {
      "fn": "SafeMath.sub",
      "offset": [
        5593,
        5622
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2598": {
      "fn": "SafeMath.sub",
      "offset": [
        5593,
        5622
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "2599": {
      "fn": "SafeMath.sub",
      "offset": [
        5593,
        5622
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xA44"
    },
    "2602": {
      "fn": "SafeMath.sub",
      "offset": [
        5593,
        5622
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "2603": {
      "fn": "SafeMath.sub",
      "offset": [
        5593,
        5622
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2604": {
      "fn": "SafeMath.sub",
      "offset": [
        5593,
        5622
      ],
      "op": "DUP3",
      "path": "0"
    },
    "2605": {
      "fn": "SafeMath.sub",
      "offset": [
        5593,
        5622
      ],
      "op": "SUB",
      "path": "0"
    },
    "2606": {
      "fn": "SafeMath.sub",
      "offset": [
        5593,
        5622
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2607": {
      "fn": "SafeMath.sub",
      "offset": [
        5593,
        5622
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2608": {
      "fn": "SafeMath.sub",
      "offset": [
        5593,
        5622
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "2610": {
      "fn": "SafeMath.sub",
      "offset": [
        5593,
        5622
      ],
      "op": "DUP4",
      "path": "0"
    },
    "2611": {
      "fn": "SafeMath.sub",
      "offset": [
        5593,
        5622
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "2613": {
      "fn": "SafeMath.sub",
      "offset": [
        5593,
        5622
      ],
      "op": "SUB",
      "path": "0"
    },
    "2614": {
      "fn": "SafeMath.sub",
      "offset": [
        5593,
        5622
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x100"
    },
    "2617": {
      "fn": "SafeMath.sub",
      "offset": [
        5593,
        5622
      ],
      "op": "EXP",
      "path": "0"
    },
    "2618": {
      "fn": "SafeMath.sub",
      "offset": [
        5593,
        5622
      ],
      "op": "SUB",
      "path": "0"
    },
    "2619": {
      "fn": "SafeMath.sub",
      "offset": [
        5593,
        5622
      ],
      "op": "NOT",
      "path": "0"
    },
    "2620": {
      "fn": "SafeMath.sub",
      "offset": [
        5593,
        5622
      ],
      "op": "AND",
      "path": "0"
    },
    "2621": {
      "fn": "SafeMath.sub",
      "offset": [
        5593,
        5622
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2622": {
      "fn": "SafeMath.sub",
      "offset": [
        5593,
        5622
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2623": {
      "fn": "SafeMath.sub",
      "offset": [
        5593,
        5622
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "2625": {
      "fn": "SafeMath.sub",
      "offset": [
        5593,
        5622
      ],
      "op": "ADD",
      "path": "0"
    },
    "2626": {
      "fn": "SafeMath.sub",
      "offset": [
        5593,
        5622
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2627": {
      "fn": "SafeMath.sub",
      "offset": [
        5593,
        5622
      ],
      "op": "POP",
      "path": "0"
    },
    "2628": {
      "fn": "SafeMath.sub",
      "offset": [
        5593,
        5622
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2629": {
      "fn": "SafeMath.sub",
      "offset": [
        5593,
        5622
      ],
      "op": "POP",
      "path": "0"
    },
    "2630": {
      "fn": "SafeMath.sub",
      "offset": [
        5593,
        5622
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "2631": {
      "fn": "SafeMath.sub",
      "offset": [
        5593,
        5622
      ],
      "op": "POP",
      "path": "0"
    },
    "2632": {
      "fn": "SafeMath.sub",
      "offset": [
        5593,
        5622
      ],
      "op": "POP",
      "path": "0"
    },
    "2633": {
      "fn": "SafeMath.sub",
      "offset": [
        5593,
        5622
      ],
      "op": "POP",
      "path": "0"
    },
    "2634": {
      "fn": "SafeMath.sub",
      "offset": [
        5593,
        5622
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2636": {
      "fn": "SafeMath.sub",
      "offset": [
        5593,
        5622
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2637": {
      "fn": "SafeMath.sub",
      "offset": [
        5593,
        5622
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2638": {
      "fn": "SafeMath.sub",
      "offset": [
        5593,
        5622
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2639": {
      "fn": "SafeMath.sub",
      "offset": [
        5593,
        5622
      ],
      "op": "SUB",
      "path": "0"
    },
    "2640": {
      "fn": "SafeMath.sub",
      "offset": [
        5593,
        5622
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2641": {
      "fn": "SafeMath.sub",
      "offset": [
        5593,
        5622
      ],
      "op": "REVERT",
      "path": "0"
    },
    "2642": {
      "fn": "SafeMath.sub",
      "offset": [
        5593,
        5622
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2643": {
      "op": "POP"
    },
    "2644": {
      "op": "POP"
    },
    "2645": {
      "op": "POP"
    },
    "2646": {
      "fn": "SafeMath.sub",
      "offset": [
        5640,
        5645
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2647": {
      "fn": "SafeMath.sub",
      "offset": [
        5640,
        5645
      ],
      "op": "SUB",
      "path": "0"
    },
    "2648": {
      "fn": "SafeMath.sub",
      "offset": [
        5640,
        5645
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2649": {
      "fn": "SafeMath.sub",
      "jump": "o",
      "offset": [
        5492,
        5665
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2650": {
      "fn": "SafeMath.add",
      "offset": [
        4694,
        4856
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2651": {
      "fn": "SafeMath.add",
      "offset": [
        4752,
        4759
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2653": {
      "fn": "SafeMath.add",
      "offset": [
        4779,
        4784
      ],
      "op": "DUP3",
      "path": "0"
    },
    "2654": {
      "fn": "SafeMath.add",
      "offset": [
        4779,
        4784
      ],
      "op": "DUP3",
      "path": "0"
    },
    "2655": {
      "fn": "SafeMath.add",
      "offset": [
        4779,
        4784
      ],
      "op": "ADD",
      "path": "0"
    },
    "2656": {
      "fn": "SafeMath.add",
      "offset": [
        4798,
        4804
      ],
      "op": "DUP4",
      "path": "0",
      "statement": 30
    },
    "2657": {
      "fn": "SafeMath.add",
      "offset": [
        4798,
        4804
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2658": {
      "fn": "SafeMath.add",
      "offset": [
        4798,
        4804
      ],
      "op": "LT",
      "path": "0"
    },
    "2659": {
      "branch": 41,
      "fn": "SafeMath.add",
      "offset": [
        4798,
        4804
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "2660": {
      "fn": "SafeMath.add",
      "offset": [
        4790,
        4836
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xAB4"
    },
    "2663": {
      "branch": 41,
      "fn": "SafeMath.add",
      "offset": [
        4790,
        4836
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "2664": {
      "fn": "SafeMath.add",
      "offset": [
        4790,
        4836
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2666": {
      "fn": "SafeMath.add",
      "offset": [
        4790,
        4836
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2667": {
      "fn": "SafeMath.add",
      "offset": [
        4790,
        4836
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2668": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2672": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2674": {
      "op": "SHL"
    },
    "2675": {
      "fn": "SafeMath.add",
      "offset": [
        4790,
        4836
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2676": {
      "fn": "SafeMath.add",
      "offset": [
        4790,
        4836
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2677": {
      "fn": "SafeMath.add",
      "offset": [
        4790,
        4836
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "2679": {
      "fn": "SafeMath.add",
      "offset": [
        4790,
        4836
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "2681": {
      "fn": "SafeMath.add",
      "offset": [
        4790,
        4836
      ],
      "op": "DUP3",
      "path": "0"
    },
    "2682": {
      "fn": "SafeMath.add",
      "offset": [
        4790,
        4836
      ],
      "op": "ADD",
      "path": "0"
    },
    "2683": {
      "fn": "SafeMath.add",
      "offset": [
        4790,
        4836
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2684": {
      "fn": "SafeMath.add",
      "offset": [
        4790,
        4836
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1B"
    },
    "2686": {
      "fn": "SafeMath.add",
      "offset": [
        4790,
        4836
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x24"
    },
    "2688": {
      "fn": "SafeMath.add",
      "offset": [
        4790,
        4836
      ],
      "op": "DUP3",
      "path": "0"
    },
    "2689": {
      "fn": "SafeMath.add",
      "offset": [
        4790,
        4836
      ],
      "op": "ADD",
      "path": "0"
    },
    "2690": {
      "fn": "SafeMath.add",
      "offset": [
        4790,
        4836
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2691": {
      "fn": "SafeMath.add",
      "offset": [
        4790,
        4836
      ],
      "op": "PUSH32",
      "path": "0",
      "value": "0x536166654D6174683A206164646974696F6E206F766572666C6F770000000000"
    },
    "2724": {
      "fn": "SafeMath.add",
      "offset": [
        4790,
        4836
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x44"
    },
    "2726": {
      "fn": "SafeMath.add",
      "offset": [
        4790,
        4836
      ],
      "op": "DUP3",
      "path": "0"
    },
    "2727": {
      "fn": "SafeMath.add",
      "offset": [
        4790,
        4836
      ],
      "op": "ADD",
      "path": "0"
    },
    "2728": {
      "fn": "SafeMath.add",
      "offset": [
        4790,
        4836
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2729": {
      "fn": "SafeMath.add",
      "offset": [
        4790,
        4836
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2730": {
      "fn": "SafeMath.add",
      "offset": [
        4790,
        4836
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2731": {
      "fn": "SafeMath.add",
      "offset": [
        4790,
        4836
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2732": {
      "fn": "SafeMath.add",
      "offset": [
        4790,
        4836
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2733": {
      "fn": "SafeMath.add",
      "offset": [
        4790,
        4836
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2734": {
      "fn": "SafeMath.add",
      "offset": [
        4790,
        4836
      ],
      "op": "SUB",
      "path": "0"
    },
    "2735": {
      "fn": "SafeMath.add",
      "offset": [
        4790,
        4836
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x64"
    },
    "2737": {
      "fn": "SafeMath.add",
      "offset": [
        4790,
        4836
      ],
      "op": "ADD",
      "path": "0"
    },
    "2738": {
      "fn": "SafeMath.add",
      "offset": [
        4790,
        4836
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2739": {
      "fn": "SafeMath.add",
      "offset": [
        4790,
        4836
      ],
      "op": "REVERT",
      "path": "0"
    },
    "2740": {
      "fn": "SafeMath.add",
      "offset": [
        4790,
        4836
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2741": {
      "fn": "SafeMath.add",
      "offset": [
        4850,
        4851
      ],
      "op": "SWAP4",
      "path": "0",
      "statement": 31
    },
    "2742": {
      "fn": "SafeMath.add",
      "offset": [
        4694,
        4856
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "2743": {
      "op": "POP"
    },
    "2744": {
      "op": "POP"
    },
    "2745": {
      "op": "POP"
    },
    "2746": {
      "fn": "SafeMath.add",
      "jump": "o",
      "offset": [
        4694,
        4856
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2747": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        10753,
        10964
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2748": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2750": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2752": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2754": {
      "op": "SHL"
    },
    "2755": {
      "op": "SUB"
    },
    "2756": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        10822,
        10844
      ],
      "op": "DUP2",
      "path": "0",
      "statement": 32
    },
    "2757": {
      "branch": 42,
      "fn": "Ownable._transferOwnership",
      "offset": [
        10822,
        10844
      ],
      "op": "AND",
      "path": "0"
    },
    "2758": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        10814,
        10887
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xB00"
    },
    "2761": {
      "branch": 42,
      "fn": "Ownable._transferOwnership",
      "offset": [
        10814,
        10887
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "2762": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        10814,
        10887
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2764": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        10814,
        10887
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2765": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2769": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2771": {
      "op": "SHL"
    },
    "2772": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        10814,
        10887
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2773": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        10814,
        10887
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2774": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        10814,
        10887
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "2776": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        10814,
        10887
      ],
      "op": "ADD",
      "path": "0"
    },
    "2777": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        10814,
        10887
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2778": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        10814,
        10887
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2779": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        10814,
        10887
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "2781": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        10814,
        10887
      ],
      "op": "ADD",
      "path": "0"
    },
    "2782": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        10814,
        10887
      ],
      "op": "DUP3",
      "path": "0"
    },
    "2783": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        10814,
        10887
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2784": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        10814,
        10887
      ],
      "op": "SUB",
      "path": "0"
    },
    "2785": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        10814,
        10887
      ],
      "op": "DUP3",
      "path": "0"
    },
    "2786": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        10814,
        10887
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2787": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        10814,
        10887
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x26"
    },
    "2789": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        10814,
        10887
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2790": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        10814,
        10887
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2791": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        10814,
        10887
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "2793": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        10814,
        10887
      ],
      "op": "ADD",
      "path": "0"
    },
    "2794": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        10814,
        10887
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2795": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        10814,
        10887
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xBA5"
    },
    "2798": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        10814,
        10887
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x26"
    },
    "2800": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        10814,
        10887
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2801": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        10814,
        10887
      ],
      "op": "CODECOPY",
      "path": "0"
    },
    "2802": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        10814,
        10887
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2804": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        10814,
        10887
      ],
      "op": "ADD",
      "path": "0"
    },
    "2805": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        10814,
        10887
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2806": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        10814,
        10887
      ],
      "op": "POP",
      "path": "0"
    },
    "2807": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        10814,
        10887
      ],
      "op": "POP",
      "path": "0"
    },
    "2808": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        10814,
        10887
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2810": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        10814,
        10887
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2811": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        10814,
        10887
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2812": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        10814,
        10887
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2813": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        10814,
        10887
      ],
      "op": "SUB",
      "path": "0"
    },
    "2814": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        10814,
        10887
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2815": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        10814,
        10887
      ],
      "op": "REVERT",
      "path": "0"
    },
    "2816": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        10814,
        10887
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2817": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        10919,
        10925
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 33,
      "value": "0x0"
    },
    "2819": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        10919,
        10925
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2820": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        10919,
        10925
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "2821": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        10898,
        10936
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2823": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        10898,
        10936
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2824": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2826": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2828": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2830": {
      "op": "SHL"
    },
    "2831": {
      "op": "SUB"
    },
    "2832": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        10898,
        10936
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2833": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        10898,
        10936
      ],
      "op": "DUP6",
      "path": "0"
    },
    "2834": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        10898,
        10936
      ],
      "op": "AND",
      "path": "0"
    },
    "2835": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        10898,
        10936
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "2836": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        10919,
        10925
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "2837": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        10919,
        10925
      ],
      "op": "AND",
      "path": "0"
    },
    "2838": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        10919,
        10925
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2839": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        10898,
        10936
      ],
      "op": "PUSH32",
      "path": "0",
      "value": "0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
    },
    "2872": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        10898,
        10936
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2873": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        10898,
        10936
      ],
      "op": "LOG3",
      "path": "0"
    },
    "2874": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        10942,
        10948
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 34,
      "value": "0x0"
    },
    "2876": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        10942,
        10959
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2877": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        10942,
        10959
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "2878": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2880": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2882": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2884": {
      "op": "SHL"
    },
    "2885": {
      "op": "SUB"
    },
    "2886": {
      "op": "NOT"
    },
    "2887": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        10942,
        10959
      ],
      "op": "AND",
      "path": "0"
    },
    "2888": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2890": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2892": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2894": {
      "op": "SHL"
    },
    "2895": {
      "op": "SUB"
    },
    "2896": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        10942,
        10959
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "2897": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        10942,
        10959
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2898": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        10942,
        10959
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "2899": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        10942,
        10959
      ],
      "op": "AND",
      "path": "0"
    },
    "2900": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        10942,
        10959
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2901": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        10942,
        10959
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2902": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        10942,
        10959
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2903": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        10942,
        10959
      ],
      "op": "OR",
      "path": "0"
    },
    "2904": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        10942,
        10959
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2905": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        10942,
        10959
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "2906": {
      "fn": "Ownable._transferOwnership",
      "jump": "o",
      "offset": [
        10753,
        10964
      ],
      "op": "JUMP",
      "path": "0"
    }
  },
  "sha1": "a7a57e6e3291f66436532b84fad61cec103509d3",
  "source": "pragma solidity 0.5.16;\n\ninterface IBEP20 {\n  /**\n   * @dev Returns the amount of tokens in existence.\n   */\n  function totalSupply() external view returns (uint256);\n\n  /**\n   * @dev Returns the token decimals.\n   */\n  function decimals() external view returns (uint8);\n\n  /**\n   * @dev Returns the token symbol.\n   */\n  function symbol() external view returns (string memory);\n\n  /**\n  * @dev Returns the token name.\n  */\n  function name() external view returns (string memory);\n\n  /**\n   * @dev Returns the bep token owner.\n   */\n  function getOwner() external view returns (address);\n\n  /**\n   * @dev Returns the amount of tokens owned by `account`.\n   */\n  function balanceOf(address account) external view returns (uint256);\n\n  /**\n   * @dev Moves `amount` tokens from the caller's account to `recipient`.\n   *\n   * Returns a boolean value indicating whether the operation succeeded.\n   *\n   * Emits a {Transfer} event.\n   */\n  function transfer(address recipient, uint256 amount) external returns (bool);\n\n  /**\n   * @dev Returns the remaining number of tokens that `spender` will be\n   * allowed to spend on behalf of `owner` through {transferFrom}. This is\n   * zero by default.\n   *\n   * This value changes when {approve} or {transferFrom} are called.\n   */\n  function allowance(address _owner, address spender) external view returns (uint256);\n\n  /**\n   * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n   *\n   * Returns a boolean value indicating whether the operation succeeded.\n   *\n   * IMPORTANT: Beware that changing an allowance with this method brings the risk\n   * that someone may use both the old and the new allowance by unfortunate\n   * transaction ordering. One possible solution to mitigate this race\n   * condition is to first reduce the spender's allowance to 0 and set the\n   * desired value afterwards:\n   * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n   *\n   * Emits an {Approval} event.\n   */\n  function approve(address spender, uint256 amount) external returns (bool);\n\n  /**\n   * @dev Moves `amount` tokens from `sender` to `recipient` using the\n   * allowance mechanism. `amount` is then deducted from the caller's\n   * allowance.\n   *\n   * Returns a boolean value indicating whether the operation succeeded.\n   *\n   * Emits a {Transfer} event.\n   */\n  function transferFrom(address sender, address recipient, uint256 amount) external returns (bool);\n\n  /**\n   * @dev Emitted when `value` tokens are moved from one account (`from`) to\n   * another (`to`).\n   *\n   * Note that `value` may be zero.\n   */\n  event Transfer(address indexed from, address indexed to, uint256 value);\n\n  /**\n   * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n   * a call to {approve}. `value` is the new allowance.\n   */\n  event Approval(address indexed owner, address indexed spender, uint256 value);\n}\n\n/*\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with GSN meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\ncontract Context {\n  // Empty internal constructor, to prevent people from mistakenly deploying\n  // an instance of this contract, which should be used via inheritance.\n  constructor () internal { }\n\n  function _msgSender() internal view returns (address payable) {\n    return msg.sender;\n  }\n\n  function _msgData() internal view returns (bytes memory) {\n    this; // silence state mutability warning without generating bytecode - see https://github.com/ethereum/solidity/issues/2691\n    return msg.data;\n  }\n}\n\n/**\n * @dev Wrappers over Solidity's arithmetic operations with added overflow\n * checks.\n *\n * Arithmetic operations in Solidity wrap on overflow. This can easily result\n * in bugs, because programmers usually assume that an overflow raises an\n * error, which is the standard behavior in high level programming languages.\n * `SafeMath` restores this intuition by reverting the transaction when an\n * operation overflows.\n *\n * Using this library instead of the unchecked operations eliminates an entire\n * class of bugs, so it's recommended to use it always.\n */\nlibrary SafeMath {\n  /**\n   * @dev Returns the addition of two unsigned integers, reverting on\n   * overflow.\n   *\n   * Counterpart to Solidity's `+` operator.\n   *\n   * Requirements:\n   * - Addition cannot overflow.\n   */\n  function add(uint256 a, uint256 b) internal pure returns (uint256) {\n    uint256 c = a + b;\n    require(c >= a, \"SafeMath: addition overflow\");\n\n    return c;\n  }\n\n  /**\n   * @dev Returns the subtraction of two unsigned integers, reverting on\n   * overflow (when the result is negative).\n   *\n   * Counterpart to Solidity's `-` operator.\n   *\n   * Requirements:\n   * - Subtraction cannot overflow.\n   */\n  function sub(uint256 a, uint256 b) internal pure returns (uint256) {\n    return sub(a, b, \"SafeMath: subtraction overflow\");\n  }\n\n  /**\n   * @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n   * overflow (when the result is negative).\n   *\n   * Counterpart to Solidity's `-` operator.\n   *\n   * Requirements:\n   * - Subtraction cannot overflow.\n   */\n  function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\n    require(b <= a, errorMessage);\n    uint256 c = a - b;\n\n    return c;\n  }\n\n  /**\n   * @dev Returns the multiplication of two unsigned integers, reverting on\n   * overflow.\n   *\n   * Counterpart to Solidity's `*` operator.\n   *\n   * Requirements:\n   * - Multiplication cannot overflow.\n   */\n  function mul(uint256 a, uint256 b) internal pure returns (uint256) {\n    // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\n    // benefit is lost if 'b' is also tested.\n    // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\n    if (a == 0) {\n      return 0;\n    }\n\n    uint256 c = a * b;\n    require(c / a == b, \"SafeMath: multiplication overflow\");\n\n    return c;\n  }\n\n  /**\n   * @dev Returns the integer division of two unsigned integers. Reverts on\n   * division by zero. The result is rounded towards zero.\n   *\n   * Counterpart to Solidity's `/` operator. Note: this function uses a\n   * `revert` opcode (which leaves remaining gas untouched) while Solidity\n   * uses an invalid opcode to revert (consuming all remaining gas).\n   *\n   * Requirements:\n   * - The divisor cannot be zero.\n   */\n  function div(uint256 a, uint256 b) internal pure returns (uint256) {\n    return div(a, b, \"SafeMath: division by zero\");\n  }\n\n  /**\n   * @dev Returns the integer division of two unsigned integers. Reverts with custom message on\n   * division by zero. The result is rounded towards zero.\n   *\n   * Counterpart to Solidity's `/` operator. Note: this function uses a\n   * `revert` opcode (which leaves remaining gas untouched) while Solidity\n   * uses an invalid opcode to revert (consuming all remaining gas).\n   *\n   * Requirements:\n   * - The divisor cannot be zero.\n   */\n  function div(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\n    // Solidity only automatically asserts when dividing by 0\n    require(b > 0, errorMessage);\n    uint256 c = a / b;\n    // assert(a == b * c + a % b); // There is no case in which this doesn't hold\n\n    return c;\n  }\n\n  /**\n   * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n   * Reverts when dividing by zero.\n   *\n   * Counterpart to Solidity's `%` operator. This function uses a `revert`\n   * opcode (which leaves remaining gas untouched) while Solidity uses an\n   * invalid opcode to revert (consuming all remaining gas).\n   *\n   * Requirements:\n   * - The divisor cannot be zero.\n   */\n  function mod(uint256 a, uint256 b) internal pure returns (uint256) {\n    return mod(a, b, \"SafeMath: modulo by zero\");\n  }\n\n  /**\n   * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n   * Reverts with custom message when dividing by zero.\n   *\n   * Counterpart to Solidity's `%` operator. This function uses a `revert`\n   * opcode (which leaves remaining gas untouched) while Solidity uses an\n   * invalid opcode to revert (consuming all remaining gas).\n   *\n   * Requirements:\n   * - The divisor cannot be zero.\n   */\n  function mod(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\n    require(b != 0, errorMessage);\n    return a % b;\n  }\n}\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * By default, the owner account will be the one that deploys the contract. This\n * can later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\ncontract Ownable is Context {\n  address private _owner;\n\n  event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n  /**\n   * @dev Initializes the contract setting the deployer as the initial owner.\n   */\n  constructor () internal {\n    address msgSender = _msgSender();\n    _owner = msgSender;\n    emit OwnershipTransferred(address(0), msgSender);\n  }\n\n  /**\n   * @dev Returns the address of the current owner.\n   */\n  function owner() public view returns (address) {\n    return _owner;\n  }\n\n  /**\n   * @dev Throws if called by any account other than the owner.\n   */\n  modifier onlyOwner() {\n    require(_owner == _msgSender(), \"Ownable: caller is not the owner\");\n    _;\n  }\n\n  /**\n   * @dev Leaves the contract without owner. It will not be possible to call\n   * `onlyOwner` functions anymore. Can only be called by the current owner.\n   *\n   * NOTE: Renouncing ownership will leave the contract without an owner,\n   * thereby removing any functionality that is only available to the owner.\n   */\n  function renounceOwnership() public onlyOwner {\n    emit OwnershipTransferred(_owner, address(0));\n    _owner = address(0);\n  }\n\n  /**\n   * @dev Transfers ownership of the contract to a new account (`newOwner`).\n   * Can only be called by the current owner.\n   */\n  function transferOwnership(address newOwner) public onlyOwner {\n    _transferOwnership(newOwner);\n  }\n\n  /**\n   * @dev Transfers ownership of the contract to a new account (`newOwner`).\n   */\n  function _transferOwnership(address newOwner) internal {\n    require(newOwner != address(0), \"Ownable: new owner is the zero address\");\n    emit OwnershipTransferred(_owner, newOwner);\n    _owner = newOwner;\n  }\n}\n\ncontract Philcoin is Context, IBEP20, Ownable {\n  using SafeMath for uint256;\n\n  mapping (address => uint256) private _balances;\n\n  mapping (address => mapping (address => uint256)) private _allowances;\n\n  uint256 private _totalSupply;\n  uint8 private _decimals;\n  string private _symbol;\n  string private _name;\n\n  constructor(string memory name, string memory symbol, uint256 supply, address mintTo) public {\n    _name = name;\n    _symbol = symbol;\n    _decimals = 18;\n    _mint(mintTo, supply);\n  }\n\n  /**\n   * @dev Returns the bep token owner.\n   */\n  function getOwner() external view returns (address) {\n    return owner();\n  }\n\n  /**\n   * @dev Returns the token decimals.\n   */\n  function decimals() external view returns (uint8) {\n    return _decimals;\n  }\n\n  /**\n   * @dev Returns the token symbol.\n   */\n  function symbol() external view returns (string memory) {\n    return _symbol;\n  }\n\n  /**\n  * @dev Returns the token name.\n  */\n  function name() external view returns (string memory) {\n    return _name;\n  }\n\n  /**\n   * @dev See {BEP20-totalSupply}.\n   */\n  function totalSupply() external view returns (uint256) {\n    return _totalSupply;\n  }\n\n  /**\n   * @dev See {BEP20-balanceOf}.\n   */\n  function balanceOf(address account) external view returns (uint256) {\n    return _balances[account];\n  }\n\n  /**\n   * @dev See {BEP20-transfer}.\n   *\n   * Requirements:\n   *\n   * - `recipient` cannot be the zero address.\n   * - the caller must have a balance of at least `amount`.\n   */\n  function transfer(address recipient, uint256 amount) external returns (bool) {\n    _transfer(_msgSender(), recipient, amount);\n    return true;\n  }\n\n  /**\n   * @dev See {BEP20-allowance}.\n   */\n  function allowance(address owner, address spender) external view returns (uint256) {\n    return _allowances[owner][spender];\n  }\n\n  /**\n   * @dev See {BEP20-approve}.\n   *\n   * Requirements:\n   *\n   * - `spender` cannot be the zero address.\n   */\n  function approve(address spender, uint256 amount) external returns (bool) {\n    _approve(_msgSender(), spender, amount);\n    return true;\n  }\n\n  /**\n   * @dev See {BEP20-transferFrom}.\n   *\n   * Emits an {Approval} event indicating the updated allowance. This is not\n   * required by the EIP. See the note at the beginning of {BEP20};\n   *\n   * Requirements:\n   * - `sender` and `recipient` cannot be the zero address.\n   * - `sender` must have a balance of at least `amount`.\n   * - the caller must have allowance for `sender`'s tokens of at least\n   * `amount`.\n   */\n  function transferFrom(address sender, address recipient, uint256 amount) external returns (bool) {\n    _transfer(sender, recipient, amount);\n    _approve(sender, _msgSender(), _allowances[sender][_msgSender()].sub(amount, \"BEP20: transfer amount exceeds allowance\"));\n    return true;\n  }\n\n  /**\n   * @dev Atomically increases the allowance granted to `spender` by the caller.\n   *\n   * This is an alternative to {approve} that can be used as a mitigation for\n   * problems described in {BEP20-approve}.\n   *\n   * Emits an {Approval} event indicating the updated allowance.\n   *\n   * Requirements:\n   *\n   * - `spender` cannot be the zero address.\n   */\n  function increaseAllowance(address spender, uint256 addedValue) public returns (bool) {\n    _approve(_msgSender(), spender, _allowances[_msgSender()][spender].add(addedValue));\n    return true;\n  }\n\n  /**\n   * @dev Atomically decreases the allowance granted to `spender` by the caller.\n   *\n   * This is an alternative to {approve} that can be used as a mitigation for\n   * problems described in {BEP20-approve}.\n   *\n   * Emits an {Approval} event indicating the updated allowance.\n   *\n   * Requirements:\n   *\n   * - `spender` cannot be the zero address.\n   * - `spender` must have allowance for the caller of at least\n   * `subtractedValue`.\n   */\n  function decreaseAllowance(address spender, uint256 subtractedValue) public returns (bool) {\n    _approve(_msgSender(), spender, _allowances[_msgSender()][spender].sub(subtractedValue, \"BEP20: decreased allowance below zero\"));\n    return true;\n  }\n\n  /**\n   * @dev Moves tokens `amount` from `sender` to `recipient`.\n   *\n   * This is internal function is equivalent to {transfer}, and can be used to\n   * e.g. implement automatic token fees, slashing mechanisms, etc.\n   *\n   * Emits a {Transfer} event.\n   *\n   * Requirements:\n   *\n   * - `sender` cannot be the zero address.\n   * - `recipient` cannot be the zero address.\n   * - `sender` must have a balance of at least `amount`.\n   */\n  function _transfer(address sender, address recipient, uint256 amount) internal {\n    require(sender != address(0), \"BEP20: transfer from the zero address\");\n    require(recipient != address(0), \"BEP20: transfer to the zero address\");\n\n    _balances[sender] = _balances[sender].sub(amount, \"BEP20: transfer amount exceeds balance\");\n    _balances[recipient] = _balances[recipient].add(amount);\n    emit Transfer(sender, recipient, amount);\n  }\n\n  /** @dev Creates `amount` tokens and assigns them to `account`, increasing\n   * the total supply.\n   *\n   * Emits a {Transfer} event with `from` set to the zero address.\n   *\n   * Requirements\n   *\n   * - `to` cannot be the zero address.\n   */\n  function _mint(address account, uint256 amount) internal {\n    require(account != address(0), \"BEP20: mint to the zero address\");\n\n    _totalSupply = _totalSupply.add(amount);\n    _balances[account] = _balances[account].add(amount);\n    emit Transfer(address(0), account, amount);\n  }\n\n  /**\n   * @dev Destroys `amount` tokens from `account`, reducing the\n   * total supply.\n   *\n   * Emits a {Transfer} event with `to` set to the zero address.\n   *\n   * Requirements\n   *\n   * - `account` cannot be the zero address.\n   * - `account` must have at least `amount` tokens.\n   */\n  function _burn(address account, uint256 amount) internal {\n    require(account != address(0), \"BEP20: burn from the zero address\");\n\n    _balances[account] = _balances[account].sub(amount, \"BEP20: burn amount exceeds balance\");\n    _totalSupply = _totalSupply.sub(amount);\n    emit Transfer(account, address(0), amount);\n  }\n\n  /**\n   * @dev Sets `amount` as the allowance of `spender` over the `owner`s tokens.\n   *\n   * This is internal function is equivalent to `approve`, and can be used to\n   * e.g. set automatic allowances for certain subsystems, etc.\n   *\n   * Emits an {Approval} event.\n   *\n   * Requirements:\n   *\n   * - `owner` cannot be the zero address.\n   * - `spender` cannot be the zero address.\n   */\n  function _approve(address owner, address spender, uint256 amount) internal {\n    require(owner != address(0), \"BEP20: approve from the zero address\");\n    require(spender != address(0), \"BEP20: approve to the zero address\");\n\n    _allowances[owner][spender] = amount;\n    emit Approval(owner, spender, amount);\n  }\n\n  /**\n   * @dev Destroys `amount` tokens from `account`.`amount` is then deducted\n   * from the caller's allowance.\n   *\n   * See {_burn} and {_approve}.\n   */\n  function _burnFrom(address account, uint256 amount) internal {\n    _burn(account, amount);\n    _approve(account, _msgSender(), _allowances[account][_msgSender()].sub(amount, \"BEP20: burn amount exceeds allowance\"));\n  }\n}",
  "sourceMap": "10968:7204:0:-;;;11284:185;8:9:-1;5:2;;;30:1;27;20:12;5:2;11284:185:0;;;;;;;;;;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;11284:185:0;;;;;;;;;;;;;19:11:-1;14:3;11:20;8:2;;;44:1;41;34:12;8:2;62:21;;;;123:4;114:14;;138:31;;;135:2;;;182:1;179;172:12;135:2;213:10;;261:11;244:29;;285:43;;;282:58;-1:-1;233:115;230:2;;;361:1;358;351:12;230:2;372:25;;-1:-1;11284:185:0;;420:4:-1;411:14;;;;11284:185:0;;;;;411:14:-1;11284:185:0;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;11284:185:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;19:11:-1;14:3;11:20;8:2;;;44:1;41;34:12;8:2;62:21;;;;123:4;114:14;;138:31;;;135:2;;;182:1;179;172:12;135:2;213:10;;261:11;244:29;;285:43;;;282:58;-1:-1;233:115;230:2;;;361:1;358;351:12;230:2;372:25;;-1:-1;11284:185:0;;420:4:-1;411:14;;;;11284:185:0;;;;;411:14:-1;11284:185:0;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;11284:185:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;11284:185:0;;;;;;;;;;;;;-1:-1:-1;11284:185:0;-1:-1:-1;9527:17:0;9547:12;-1:-1:-1;;;;;9547:10:0;:12;:::i;:::-;9565:6;:18;;-1:-1:-1;;;;;;9565:18:0;-1:-1:-1;;;;;9565:18:0;;;;;;;9594:43;;9565:18;;-1:-1:-1;9565:18:0;9594:43;;9565:6;;9594:43;-1:-1:-1;11383:12:0;;;;:5;;:12;;;;;:::i;:::-;-1:-1:-1;11401:16:0;;;;:7;;:16;;;;;:::i;:::-;-1:-1:-1;11423:9:0;:14;;-1:-1:-1;;11423:14:0;11435:2;11423:14;;;11443:21;11449:6;11457;-1:-1:-1;;;;;11443:5:0;:21;:::i;:::-;11284:185;;;;10968:7204;;3595:90;3670:10;3595:90;;:::o;16173:284::-;-1:-1:-1;;;;;16244:21:0;;16236:65;;;;;-1:-1:-1;;;16236:65:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;16323:24;16340:6;16323:12;;:16;;;;;;:24;;;;:::i;:::-;16308:12;:39;-1:-1:-1;;;;;16374:18:0;;;;;;:9;:18;;;;;;;;;:30;;16397:6;;16374:22;;;;;:30;;:::i;:::-;-1:-1:-1;;;;;16353:18:0;;;;;;:9;:18;;;;;;;;:51;;;;16415:37;;;;;;;16353:18;;;;16415:37;;;;;;;;;;16173:284;;:::o;4694:162::-;4752:7;4779:5;;;4798:6;;;;4790:46;;;;;-1:-1:-1;;;4790:46:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;4850:1;4694:162;-1:-1:-1;;;4694:162:0:o;10968:7204::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;10968:7204:0;;;-1:-1:-1;10968:7204:0;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;",
  "sourcePath": "contracts/philcoin-bep20.sol",
  "type": "contract"
}